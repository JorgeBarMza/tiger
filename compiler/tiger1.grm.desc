
state 0:

	program : . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 3
	program	goto 145
	lval	goto 2
	lval_t	goto 1

	.	error


state 1:

	lval : lval_t .  (reduce by rule 26)
	lval_t : lval_t . DOT ID 
	lval_t : lval_t . LBRACK exp RBRACK 

	LBRACK	shift 16
	DOT	shift 15


	.	reduce by rule 26


state 2:

	exp : lval .  (reduce by rule 31)
	exp : lval . ASSIGN exp 

	ASSIGN	shift 17


	.	reduce by rule 31


state 3:

	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . PLUS exp 
	program : exp .  (reduce by rule 0)

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18


	.	reduce by rule 0


state 4:

	exp : NIL .  (reduce by rule 32)



	.	reduce by rule 32


state 5:

	exp : BREAK .  (reduce by rule 45)



	.	reduce by rule 45


state 6:

	exp : LET . decs IN exp_seq END 

	FUNCTION	shift 36
	VAR	shift 35
	TYPE	shift 34

	decs	goto 33
	tydec	goto 32
	vardec	goto 31
	fundec	goto 30

	.	reduce by rule 1


state 7:

	exp : FOR . ID ASSIGN exp TO exp DO exp 

	ID	shift 37


	.	error


state 8:

	exp : WHILE . exp DO exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 38
	lval	goto 2
	lval_t	goto 1

	.	error


state 9:

	exp : IF . exp THEN exp ELSE exp 
	exp : IF . exp THEN exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 39
	lval	goto 2
	lval_t	goto 1

	.	error


state 10:

	exp : MINUS . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 40
	lval	goto 2
	lval_t	goto 1

	.	error


state 11:

	exp : LPAREN . exp_seq RPAREN 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 42
	lval	goto 2
	lval_t	goto 1
	exp_seq	goto 41

	.	reduce by rule 59


state 12:

	exp : STRING .  (reduce by rule 34)



	.	reduce by rule 34


state 13:

	exp : INT .  (reduce by rule 33)



	.	reduce by rule 33


state 14:

	exp : ID . LPAREN args RPAREN 
	exp : ID . LBRACE rcd RBRACE 
	exp : ID . LBRACK exp RBRACK OF exp 
	lval : ID .  (reduce by rule 25)
	lval_t : ID . DOT ID 
	lval_t : ID . LBRACK exp RBRACK 

	LPAREN	shift 46
	LBRACK	shift 45
	LBRACE	shift 44
	DOT	shift 43


	.	reduce by rule 25


state 15:

	lval_t : lval_t DOT . ID 

	ID	shift 47


	.	error


state 16:

	lval_t : lval_t LBRACK . exp RBRACK 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 48
	lval	goto 2
	lval_t	goto 1

	.	error


state 17:

	exp : lval ASSIGN . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 49
	lval	goto 2
	lval_t	goto 1

	.	error


state 18:

	exp : exp OR . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 50
	lval	goto 2
	lval_t	goto 1

	.	error


state 19:

	exp : exp AND . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 51
	lval	goto 2
	lval_t	goto 1

	.	error


state 20:

	exp : exp GE . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 52
	lval	goto 2
	lval_t	goto 1

	.	error


state 21:

	exp : exp GT . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 53
	lval	goto 2
	lval_t	goto 1

	.	error


state 22:

	exp : exp LE . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 54
	lval	goto 2
	lval_t	goto 1

	.	error


state 23:

	exp : exp LT . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 55
	lval	goto 2
	lval_t	goto 1

	.	error


state 24:

	exp : exp NEQ . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 56
	lval	goto 2
	lval_t	goto 1

	.	error


state 25:

	exp : exp EQ . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 57
	lval	goto 2
	lval_t	goto 1

	.	error


state 26:

	exp : exp DIVIDE . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 58
	lval	goto 2
	lval_t	goto 1

	.	error


state 27:

	exp : exp TIMES . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 59
	lval	goto 2
	lval_t	goto 1

	.	error


state 28:

	exp : exp MINUS . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 60
	lval	goto 2
	lval_t	goto 1

	.	error


state 29:

	exp : exp PLUS . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 61
	lval	goto 2
	lval_t	goto 1

	.	error


state 30:

	decs : fundec . decs 

	FUNCTION	shift 36
	VAR	shift 35
	TYPE	shift 34

	decs	goto 62
	tydec	goto 32
	vardec	goto 31
	fundec	goto 30

	.	reduce by rule 1


state 31:

	decs : vardec . decs 

	FUNCTION	shift 36
	VAR	shift 35
	TYPE	shift 34

	decs	goto 63
	tydec	goto 32
	vardec	goto 31
	fundec	goto 30

	.	reduce by rule 1


state 32:

	decs : tydec . decs 

	FUNCTION	shift 36
	VAR	shift 35
	TYPE	shift 34

	decs	goto 64
	tydec	goto 32
	vardec	goto 31
	fundec	goto 30

	.	reduce by rule 1


state 33:

	exp : LET decs . IN exp_seq END 

	IN	shift 65


	.	error


state 34:

	tydec : TYPE . ID EQ ty 

	ID	shift 66


	.	error


state 35:

	vardec : VAR . ID ASSIGN exp 
	vardec : VAR . ID COLON ID ASSIGN exp 

	ID	shift 67


	.	error


state 36:

	fundec : FUNCTION . ID LPAREN tyfs RPAREN EQ exp 
	fundec : FUNCTION . ID LPAREN tyfs RPAREN COLON ID EQ exp 

	ID	shift 68


	.	error


state 37:

	exp : FOR ID . ASSIGN exp TO exp DO exp 

	ASSIGN	shift 69


	.	error


state 38:

	exp : WHILE exp . DO exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . PLUS exp 

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18
	DO	shift 70


	.	error


state 39:

	exp : IF exp . THEN exp ELSE exp 
	exp : IF exp . THEN exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . PLUS exp 

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18
	THEN	shift 71


	.	error


state 40:

	exp : MINUS exp .  (reduce by rule 35)
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . PLUS exp 



	.	reduce by rule 35


state 41:

	exp : LPAREN exp_seq . RPAREN 

	RPAREN	shift 72


	.	error


state 42:

	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . PLUS exp 
	exp_seq : exp . exp_seq_t 

	SEMICOLON	shift 74
	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18

	exp_seq_t	goto 73

	.	reduce by rule 61


state 43:

	lval_t : ID DOT . ID 

	ID	shift 75


	.	error


state 44:

	exp : ID LBRACE . rcd RBRACE 

	ID	shift 77

	rcd	goto 76

	.	reduce by rule 21


state 45:

	exp : ID LBRACK . exp RBRACK OF exp 
	lval_t : ID LBRACK . exp RBRACK 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 78
	lval	goto 2
	lval_t	goto 1

	.	error


state 46:

	exp : ID LPAREN . args RPAREN 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 80
	args	goto 79
	lval	goto 2
	lval_t	goto 1

	.	reduce by rule 17


state 47:

	lval_t : lval_t DOT ID .  (reduce by rule 28)



	.	reduce by rule 28


state 48:

	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . PLUS exp 
	lval_t : lval_t LBRACK exp . RBRACK 

	RBRACK	shift 81
	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18


	.	error


state 49:

	exp : lval ASSIGN exp .  (reduce by rule 40)
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . PLUS exp 

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18


	.	reduce by rule 40


state 50:

	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp OR exp .  (reduce by rule 57)
	exp : exp . PLUS exp 

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20


	.	reduce by rule 57


state 51:

	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp AND exp .  (reduce by rule 56)
	exp : exp . OR exp 
	exp : exp . PLUS exp 

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20


	.	reduce by rule 56


state 52:

	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp GE exp .  (reduce by rule 54)
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . PLUS exp 

	EOF	reduce by rule 54
	COMMA	reduce by rule 54
	SEMICOLON	reduce by rule 54
	RPAREN	reduce by rule 54
	RBRACK	reduce by rule 54
	RBRACE	reduce by rule 54
	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	AND	reduce by rule 54
	OR	reduce by rule 54
	THEN	reduce by rule 54
	ELSE	reduce by rule 54
	TO	reduce by rule 54
	DO	reduce by rule 54
	IN	reduce by rule 54
	END	reduce by rule 54
	FUNCTION	reduce by rule 54
	VAR	reduce by rule 54
	TYPE	reduce by rule 54


	.	error


state 53:

	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp GT exp .  (reduce by rule 52)
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . PLUS exp 

	EOF	reduce by rule 52
	COMMA	reduce by rule 52
	SEMICOLON	reduce by rule 52
	RPAREN	reduce by rule 52
	RBRACK	reduce by rule 52
	RBRACE	reduce by rule 52
	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	AND	reduce by rule 52
	OR	reduce by rule 52
	THEN	reduce by rule 52
	ELSE	reduce by rule 52
	TO	reduce by rule 52
	DO	reduce by rule 52
	IN	reduce by rule 52
	END	reduce by rule 52
	FUNCTION	reduce by rule 52
	VAR	reduce by rule 52
	TYPE	reduce by rule 52


	.	error


state 54:

	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp LE exp .  (reduce by rule 55)
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . PLUS exp 

	EOF	reduce by rule 55
	COMMA	reduce by rule 55
	SEMICOLON	reduce by rule 55
	RPAREN	reduce by rule 55
	RBRACK	reduce by rule 55
	RBRACE	reduce by rule 55
	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	AND	reduce by rule 55
	OR	reduce by rule 55
	THEN	reduce by rule 55
	ELSE	reduce by rule 55
	TO	reduce by rule 55
	DO	reduce by rule 55
	IN	reduce by rule 55
	END	reduce by rule 55
	FUNCTION	reduce by rule 55
	VAR	reduce by rule 55
	TYPE	reduce by rule 55


	.	error


state 55:

	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp LT exp .  (reduce by rule 53)
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . PLUS exp 

	EOF	reduce by rule 53
	COMMA	reduce by rule 53
	SEMICOLON	reduce by rule 53
	RPAREN	reduce by rule 53
	RBRACK	reduce by rule 53
	RBRACE	reduce by rule 53
	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	AND	reduce by rule 53
	OR	reduce by rule 53
	THEN	reduce by rule 53
	ELSE	reduce by rule 53
	TO	reduce by rule 53
	DO	reduce by rule 53
	IN	reduce by rule 53
	END	reduce by rule 53
	FUNCTION	reduce by rule 53
	VAR	reduce by rule 53
	TYPE	reduce by rule 53


	.	error


state 56:

	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp NEQ exp .  (reduce by rule 51)
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . PLUS exp 

	EOF	reduce by rule 51
	COMMA	reduce by rule 51
	SEMICOLON	reduce by rule 51
	RPAREN	reduce by rule 51
	RBRACK	reduce by rule 51
	RBRACE	reduce by rule 51
	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	AND	reduce by rule 51
	OR	reduce by rule 51
	THEN	reduce by rule 51
	ELSE	reduce by rule 51
	TO	reduce by rule 51
	DO	reduce by rule 51
	IN	reduce by rule 51
	END	reduce by rule 51
	FUNCTION	reduce by rule 51
	VAR	reduce by rule 51
	TYPE	reduce by rule 51


	.	error


state 57:

	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp EQ exp .  (reduce by rule 50)
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . PLUS exp 

	EOF	reduce by rule 50
	COMMA	reduce by rule 50
	SEMICOLON	reduce by rule 50
	RPAREN	reduce by rule 50
	RBRACK	reduce by rule 50
	RBRACE	reduce by rule 50
	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	AND	reduce by rule 50
	OR	reduce by rule 50
	THEN	reduce by rule 50
	ELSE	reduce by rule 50
	TO	reduce by rule 50
	DO	reduce by rule 50
	IN	reduce by rule 50
	END	reduce by rule 50
	FUNCTION	reduce by rule 50
	VAR	reduce by rule 50
	TYPE	reduce by rule 50


	.	error


state 58:

	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp DIVIDE exp .  (reduce by rule 48)
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . PLUS exp 



	.	reduce by rule 48


state 59:

	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp TIMES exp .  (reduce by rule 49)
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . PLUS exp 



	.	reduce by rule 49


state 60:

	exp : exp . MINUS exp 
	exp : exp MINUS exp .  (reduce by rule 47)
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . PLUS exp 

	TIMES	shift 27
	DIVIDE	shift 26


	.	reduce by rule 47


state 61:

	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . PLUS exp 
	exp : exp PLUS exp .  (reduce by rule 58)

	TIMES	shift 27
	DIVIDE	shift 26


	.	reduce by rule 58


state 62:

	decs : fundec decs .  (reduce by rule 4)



	.	reduce by rule 4


state 63:

	decs : vardec decs .  (reduce by rule 3)



	.	reduce by rule 3


state 64:

	decs : tydec decs .  (reduce by rule 2)



	.	reduce by rule 2


state 65:

	exp : LET decs IN . exp_seq END 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 42
	lval	goto 2
	lval_t	goto 1
	exp_seq	goto 82

	.	reduce by rule 59


state 66:

	tydec : TYPE ID . EQ ty 

	EQ	shift 83


	.	error


state 67:

	vardec : VAR ID . ASSIGN exp 
	vardec : VAR ID . COLON ID ASSIGN exp 

	COLON	shift 85
	ASSIGN	shift 84


	.	error


state 68:

	fundec : FUNCTION ID . LPAREN tyfs RPAREN EQ exp 
	fundec : FUNCTION ID . LPAREN tyfs RPAREN COLON ID EQ exp 

	LPAREN	shift 86


	.	error


state 69:

	exp : FOR ID ASSIGN . exp TO exp DO exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 87
	lval	goto 2
	lval_t	goto 1

	.	error


state 70:

	exp : WHILE exp DO . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 88
	lval	goto 2
	lval_t	goto 1

	.	error


state 71:

	exp : IF exp THEN . exp ELSE exp 
	exp : IF exp THEN . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 89
	lval	goto 2
	lval_t	goto 1

	.	error


state 72:

	exp : LPAREN exp_seq RPAREN .  (reduce by rule 36)



	.	reduce by rule 36


state 73:

	exp_seq : exp exp_seq_t .  (reduce by rule 60)



	.	reduce by rule 60


state 74:

	exp_seq_t : SEMICOLON . exp exp_seq_t 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 90
	lval	goto 2
	lval_t	goto 1

	.	error


state 75:

	lval_t : ID DOT ID .  (reduce by rule 27)



	.	reduce by rule 27


state 76:

	exp : ID LBRACE rcd . RBRACE 

	RBRACE	shift 91


	.	error


state 77:

	rcd : ID . EQ exp rcd_t 

	EQ	shift 92


	.	error


state 78:

	exp : ID LBRACK exp . RBRACK OF exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . PLUS exp 
	lval_t : ID LBRACK exp . RBRACK 

	RBRACK	shift 93
	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18


	.	error


state 79:

	exp : ID LPAREN args . RPAREN 

	RPAREN	shift 94


	.	error


state 80:

	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . PLUS exp 
	args : exp . args_t 

	COMMA	shift 96
	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18

	args_t	goto 95

	.	reduce by rule 19


state 81:

	lval_t : lval_t LBRACK exp RBRACK .  (reduce by rule 30)



	.	reduce by rule 30


state 82:

	exp : LET decs IN exp_seq . END 

	END	shift 97


	.	error


state 83:

	tydec : TYPE ID EQ . ty 

	ID	shift 101
	LBRACE	shift 100
	ARRAY	shift 99

	ty	goto 98

	.	error


state 84:

	vardec : VAR ID ASSIGN . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 102
	lval	goto 2
	lval_t	goto 1

	.	error


state 85:

	vardec : VAR ID COLON . ID ASSIGN exp 

	ID	shift 103


	.	error


state 86:

	fundec : FUNCTION ID LPAREN . tyfs RPAREN EQ exp 
	fundec : FUNCTION ID LPAREN . tyfs RPAREN COLON ID EQ exp 

	ID	shift 105

	tyfs	goto 104

	.	reduce by rule 9


state 87:

	exp : FOR ID ASSIGN exp . TO exp DO exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . PLUS exp 

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18
	TO	shift 106


	.	error


state 88:

	exp : WHILE exp DO exp .  (reduce by rule 43)
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . PLUS exp 

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18


	.	reduce by rule 43


state 89:

	exp : IF exp THEN exp . ELSE exp 
	exp : IF exp THEN exp .  (reduce by rule 42)
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . PLUS exp 

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18
	ELSE	shift 107


	.	reduce by rule 42


state 90:

	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . PLUS exp 
	exp_seq_t : SEMICOLON exp . exp_seq_t 

	SEMICOLON	shift 74
	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18

	exp_seq_t	goto 108

	.	reduce by rule 61


state 91:

	exp : ID LBRACE rcd RBRACE .  (reduce by rule 38)



	.	reduce by rule 38


state 92:

	rcd : ID EQ . exp rcd_t 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 109
	lval	goto 2
	lval_t	goto 1

	.	error


state 93:

	exp : ID LBRACK exp RBRACK . OF exp 
	lval_t : ID LBRACK exp RBRACK .  (reduce by rule 29)

	OF	shift 110


	.	reduce by rule 29


state 94:

	exp : ID LPAREN args RPAREN .  (reduce by rule 37)



	.	reduce by rule 37


state 95:

	args : exp args_t .  (reduce by rule 18)



	.	reduce by rule 18


state 96:

	args_t : COMMA . exp args_t 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 111
	lval	goto 2
	lval_t	goto 1

	.	error


state 97:

	exp : LET decs IN exp_seq END .  (reduce by rule 46)



	.	reduce by rule 46


state 98:

	tydec : TYPE ID EQ ty .  (reduce by rule 5)



	.	reduce by rule 5


state 99:

	ty : ARRAY . OF ID 

	OF	shift 112


	.	error


state 100:

	ty : LBRACE . tyfs RBRACE 

	ID	shift 105

	tyfs	goto 113

	.	reduce by rule 9


state 101:

	ty : ID .  (reduce by rule 6)



	.	reduce by rule 6


state 102:

	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . PLUS exp 
	vardec : VAR ID ASSIGN exp .  (reduce by rule 13)

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18


	.	reduce by rule 13


state 103:

	vardec : VAR ID COLON ID . ASSIGN exp 

	ASSIGN	shift 114


	.	error


state 104:

	fundec : FUNCTION ID LPAREN tyfs . RPAREN EQ exp 
	fundec : FUNCTION ID LPAREN tyfs . RPAREN COLON ID EQ exp 

	RPAREN	shift 115


	.	error


state 105:

	tyfs : ID . COLON ID tyfs_t 

	COLON	shift 116


	.	error


state 106:

	exp : FOR ID ASSIGN exp TO . exp DO exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 117
	lval	goto 2
	lval_t	goto 1

	.	error


state 107:

	exp : IF exp THEN exp ELSE . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 118
	lval	goto 2
	lval_t	goto 1

	.	error


state 108:

	exp_seq_t : SEMICOLON exp exp_seq_t .  (reduce by rule 62)



	.	reduce by rule 62


state 109:

	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . PLUS exp 
	rcd : ID EQ exp . rcd_t 

	COMMA	shift 120
	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18

	rcd_t	goto 119

	.	reduce by rule 23


state 110:

	exp : ID LBRACK exp RBRACK OF . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 121
	lval	goto 2
	lval_t	goto 1

	.	error


state 111:

	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . PLUS exp 
	args_t : COMMA exp . args_t 

	COMMA	shift 96
	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18

	args_t	goto 122

	.	reduce by rule 19


state 112:

	ty : ARRAY OF . ID 

	ID	shift 123


	.	error


state 113:

	ty : LBRACE tyfs . RBRACE 

	RBRACE	shift 124


	.	error


state 114:

	vardec : VAR ID COLON ID ASSIGN . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 125
	lval	goto 2
	lval_t	goto 1

	.	error


state 115:

	fundec : FUNCTION ID LPAREN tyfs RPAREN . EQ exp 
	fundec : FUNCTION ID LPAREN tyfs RPAREN . COLON ID EQ exp 

	COLON	shift 127
	EQ	shift 126


	.	error


state 116:

	tyfs : ID COLON . ID tyfs_t 

	ID	shift 128


	.	error


state 117:

	exp : FOR ID ASSIGN exp TO exp . DO exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . PLUS exp 

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18
	DO	shift 129


	.	error


state 118:

	exp : IF exp THEN exp ELSE exp .  (reduce by rule 41)
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . PLUS exp 

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18


	.	reduce by rule 41


state 119:

	rcd : ID EQ exp rcd_t .  (reduce by rule 22)



	.	reduce by rule 22


state 120:

	rcd_t : COMMA . ID EQ exp rcd_t 

	ID	shift 130


	.	error


state 121:

	exp : ID LBRACK exp RBRACK OF exp .  (reduce by rule 39)
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . PLUS exp 

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18


	.	reduce by rule 39


state 122:

	args_t : COMMA exp args_t .  (reduce by rule 20)



	.	reduce by rule 20


state 123:

	ty : ARRAY OF ID .  (reduce by rule 8)



	.	reduce by rule 8


state 124:

	ty : LBRACE tyfs RBRACE .  (reduce by rule 7)



	.	reduce by rule 7


state 125:

	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . PLUS exp 
	vardec : VAR ID COLON ID ASSIGN exp .  (reduce by rule 14)

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18


	.	reduce by rule 14


state 126:

	fundec : FUNCTION ID LPAREN tyfs RPAREN EQ . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 131
	lval	goto 2
	lval_t	goto 1

	.	error


state 127:

	fundec : FUNCTION ID LPAREN tyfs RPAREN COLON . ID EQ exp 

	ID	shift 132


	.	error


state 128:

	tyfs : ID COLON ID . tyfs_t 

	COMMA	shift 134

	tyfs_t	goto 133

	.	reduce by rule 11


state 129:

	exp : FOR ID ASSIGN exp TO exp DO . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 135
	lval	goto 2
	lval_t	goto 1

	.	error


state 130:

	rcd_t : COMMA ID . EQ exp rcd_t 

	EQ	shift 136


	.	error


state 131:

	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . PLUS exp 
	fundec : FUNCTION ID LPAREN tyfs RPAREN EQ exp .  (reduce by rule 15)

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18


	.	reduce by rule 15


state 132:

	fundec : FUNCTION ID LPAREN tyfs RPAREN COLON ID . EQ exp 

	EQ	shift 137


	.	error


state 133:

	tyfs : ID COLON ID tyfs_t .  (reduce by rule 10)



	.	reduce by rule 10


state 134:

	tyfs_t : COMMA . ID COLON ID tyfs_t 

	ID	shift 138


	.	error


state 135:

	exp : FOR ID ASSIGN exp TO exp DO exp .  (reduce by rule 44)
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . PLUS exp 

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18


	.	reduce by rule 44


state 136:

	rcd_t : COMMA ID EQ . exp rcd_t 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 139
	lval	goto 2
	lval_t	goto 1

	.	error


state 137:

	fundec : FUNCTION ID LPAREN tyfs RPAREN COLON ID EQ . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 140
	lval	goto 2
	lval_t	goto 1

	.	error


state 138:

	tyfs_t : COMMA ID . COLON ID tyfs_t 

	COLON	shift 141


	.	error


state 139:

	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . PLUS exp 
	rcd_t : COMMA ID EQ exp . rcd_t 

	COMMA	shift 120
	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18

	rcd_t	goto 142

	.	reduce by rule 23


state 140:

	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . PLUS exp 
	fundec : FUNCTION ID LPAREN tyfs RPAREN COLON ID EQ exp .  (reduce by rule 16)

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18


	.	reduce by rule 16


state 141:

	tyfs_t : COMMA ID COLON . ID tyfs_t 

	ID	shift 143


	.	error


state 142:

	rcd_t : COMMA ID EQ exp rcd_t .  (reduce by rule 24)



	.	reduce by rule 24


state 143:

	tyfs_t : COMMA ID COLON ID . tyfs_t 

	COMMA	shift 134

	tyfs_t	goto 144

	.	reduce by rule 11


state 144:

	tyfs_t : COMMA ID COLON ID tyfs_t .  (reduce by rule 12)



	.	reduce by rule 12


state 145:


	EOF	accept


	.	error

485 of 1055 action table entries left after compaction
143 goto table entries
