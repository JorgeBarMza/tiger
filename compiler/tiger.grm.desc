15 rules not reduced

warning: rule <arithmetic : exp op exp > will never be reduced
warning: rule <comparison : exp comp exp > will never be reduced
warning: rule <boolcomp : exp bool exp > will never be reduced
warning: rule <op : PLUS > will never be reduced
warning: rule <op : MINUS > will never be reduced
warning: rule <op : TIMES > will never be reduced
warning: rule <op : DIVIDE > will never be reduced
warning: rule <comp : EQ > will never be reduced
warning: rule <comp : NEQ > will never be reduced
warning: rule <comp : LT > will never be reduced
warning: rule <comp : LE > will never be reduced
warning: rule <comp : GT > will never be reduced
warning: rule <comp : GE > will never be reduced
warning: rule <bool : AND > will never be reduced
warning: rule <bool : OR > will never be reduced

state 0:

	program : . exp 

	ID	shift 24
	INT	shift 23
	STRING	shift 22
	LPAREN	shift 21
	MINUS	shift 20
	IF	shift 19
	WHILE	shift 18
	FOR	shift 17
	LET	shift 16
	BREAK	shift 15
	NIL	shift 14

	exp	goto 13
	program	goto 127
	lvalue	goto 12
	unit	goto 11
	negation	goto 10
	record	goto 9
	array	goto 8
	assignment	goto 7
	ifThenElse	goto 6
	ifThen	goto 5
	let	goto 4
	while	goto 3
	forloop	goto 2
	lval	goto 1

	.	error


state 1:

	lvalue : lval .  (reduce by rule 63)
	lval : lval . DOT ID 
	lval : lval . LBRACK exp RBRACK 

	LBRACK	shift 26
	DOT	shift 25


	.	reduce by rule 63


state 2:

	exp : forloop .  (reduce by rule 13)



	.	reduce by rule 13


state 3:

	exp : while .  (reduce by rule 12)



	.	reduce by rule 12


state 4:

	exp : let .  (reduce by rule 17)



	.	reduce by rule 17


state 5:

	exp : ifThen .  (reduce by rule 11)



	.	reduce by rule 11


state 6:

	exp : ifThenElse .  (reduce by rule 10)



	.	reduce by rule 10


state 7:

	exp : assignment .  (reduce by rule 9)



	.	reduce by rule 9


state 8:

	exp : array .  (reduce by rule 8)



	.	reduce by rule 8


state 9:

	exp : record .  (reduce by rule 7)



	.	reduce by rule 7


state 10:

	exp : negation .  (reduce by rule 6)



	.	reduce by rule 6


state 11:

	exp : unit .  (reduce by rule 15)



	.	reduce by rule 15


state 12:

	exp : lvalue .  (reduce by rule 3)
	assignment : lvalue . ASSIGN exp 

	ASSIGN	shift 27


	.	reduce by rule 3


state 13:

	program : exp .  (reduce by rule 0)



	.	reduce by rule 0


state 14:

	exp : NIL .  (reduce by rule 1)



	.	reduce by rule 1


state 15:

	exp : BREAK .  (reduce by rule 14)



	.	reduce by rule 14


state 16:

	let : LET . decs IN expseq END 

	FUNCTION	shift 35
	VAR	shift 34
	TYPE	shift 33

	decs	goto 32
	dec	goto 31
	tydec	goto 30
	vardec	goto 29
	fundec	goto 28

	.	error


state 17:

	forloop : FOR . ID ASSIGN exp TO exp DO exp 

	ID	shift 36


	.	error


state 18:

	while : WHILE . exp DO exp 

	ID	shift 24
	INT	shift 23
	STRING	shift 22
	LPAREN	shift 21
	MINUS	shift 20
	IF	shift 19
	WHILE	shift 18
	FOR	shift 17
	LET	shift 16
	BREAK	shift 15
	NIL	shift 14

	exp	goto 37
	lvalue	goto 12
	unit	goto 11
	negation	goto 10
	record	goto 9
	array	goto 8
	assignment	goto 7
	ifThenElse	goto 6
	ifThen	goto 5
	let	goto 4
	while	goto 3
	forloop	goto 2
	lval	goto 1

	.	error


state 19:

	ifThenElse : IF . exp THEN exp ELSE exp 
	ifThen : IF . exp THEN exp 

	ID	shift 24
	INT	shift 23
	STRING	shift 22
	LPAREN	shift 21
	MINUS	shift 20
	IF	shift 19
	WHILE	shift 18
	FOR	shift 17
	LET	shift 16
	BREAK	shift 15
	NIL	shift 14

	exp	goto 38
	lvalue	goto 12
	unit	goto 11
	negation	goto 10
	record	goto 9
	array	goto 8
	assignment	goto 7
	ifThenElse	goto 6
	ifThen	goto 5
	let	goto 4
	while	goto 3
	forloop	goto 2
	lval	goto 1

	.	error


state 20:

	negation : MINUS . exp 

	ID	shift 24
	INT	shift 23
	STRING	shift 22
	LPAREN	shift 21
	MINUS	shift 20
	IF	shift 19
	WHILE	shift 18
	FOR	shift 17
	LET	shift 16
	BREAK	shift 15
	NIL	shift 14

	exp	goto 39
	lvalue	goto 12
	unit	goto 11
	negation	goto 10
	record	goto 9
	array	goto 8
	assignment	goto 7
	ifThenElse	goto 6
	ifThen	goto 5
	let	goto 4
	while	goto 3
	forloop	goto 2
	lval	goto 1

	.	error


state 21:

	exp : LPAREN . expP RPAREN 
	unit : LPAREN . RPAREN 

	ID	shift 24
	INT	shift 23
	STRING	shift 22
	LPAREN	shift 21
	RPAREN	shift 42
	MINUS	shift 20
	IF	shift 19
	WHILE	shift 18
	FOR	shift 17
	LET	shift 16
	BREAK	shift 15
	NIL	shift 14

	exp	goto 41
	lvalue	goto 12
	unit	goto 11
	negation	goto 10
	expP	goto 40
	record	goto 9
	array	goto 8
	assignment	goto 7
	ifThenElse	goto 6
	ifThen	goto 5
	let	goto 4
	while	goto 3
	forloop	goto 2
	lval	goto 1

	.	error


state 22:

	exp : STRING .  (reduce by rule 5)



	.	reduce by rule 5


state 23:

	exp : INT .  (reduce by rule 4)



	.	reduce by rule 4


state 24:

	exp : ID . LPAREN args RPAREN 
	lvalue : ID .  (reduce by rule 62)
	record : ID . LBRACE ID EQ exp recP RBRACE 
	array : ID . LBRACK exp RBRACK OF exp 
	lval : ID . DOT ID 
	lval : ID . LBRACK exp RBRACK 

	LPAREN	shift 46
	LBRACK	shift 45
	LBRACE	shift 44
	DOT	shift 43


	.	reduce by rule 62


state 25:

	lval : lval DOT . ID 

	ID	shift 47


	.	error


state 26:

	lval : lval LBRACK . exp RBRACK 

	ID	shift 24
	INT	shift 23
	STRING	shift 22
	LPAREN	shift 21
	MINUS	shift 20
	IF	shift 19
	WHILE	shift 18
	FOR	shift 17
	LET	shift 16
	BREAK	shift 15
	NIL	shift 14

	exp	goto 48
	lvalue	goto 12
	unit	goto 11
	negation	goto 10
	record	goto 9
	array	goto 8
	assignment	goto 7
	ifThenElse	goto 6
	ifThen	goto 5
	let	goto 4
	while	goto 3
	forloop	goto 2
	lval	goto 1

	.	error


state 27:

	assignment : lvalue ASSIGN . exp 

	ID	shift 24
	INT	shift 23
	STRING	shift 22
	LPAREN	shift 21
	MINUS	shift 20
	IF	shift 19
	WHILE	shift 18
	FOR	shift 17
	LET	shift 16
	BREAK	shift 15
	NIL	shift 14

	exp	goto 49
	lvalue	goto 12
	unit	goto 11
	negation	goto 10
	record	goto 9
	array	goto 8
	assignment	goto 7
	ifThenElse	goto 6
	ifThen	goto 5
	let	goto 4
	while	goto 3
	forloop	goto 2
	lval	goto 1

	.	error


state 28:

	dec : fundec .  (reduce by rule 49)



	.	reduce by rule 49


state 29:

	dec : vardec .  (reduce by rule 48)



	.	reduce by rule 48


state 30:

	dec : tydec .  (reduce by rule 47)



	.	reduce by rule 47


state 31:

	decs : dec . decs 
	decs : dec .  (reduce by rule 46)

	FUNCTION	shift 35
	VAR	shift 34
	TYPE	shift 33

	decs	goto 50
	dec	goto 31
	tydec	goto 30
	vardec	goto 29
	fundec	goto 28

	.	reduce by rule 46


state 32:

	let : LET decs . IN expseq END 

	IN	shift 51


	.	error


state 33:

	tydec : TYPE . ID EQ ty 

	ID	shift 52


	.	error


state 34:

	vardec : VAR . ID ASSIGN exp 
	vardec : VAR . ID COLON ID ASSIGN exp 

	ID	shift 53


	.	error


state 35:

	fundec : FUNCTION . ID LPAREN tyfields RPAREN EQ exp 
	fundec : FUNCTION . ID LPAREN tyfields RPAREN COLON ID EQ exp 

	ID	shift 54


	.	error


state 36:

	forloop : FOR ID . ASSIGN exp TO exp DO exp 

	ASSIGN	shift 55


	.	error


state 37:

	while : WHILE exp . DO exp 

	DO	shift 56


	.	error


state 38:

	ifThenElse : IF exp . THEN exp ELSE exp 
	ifThen : IF exp . THEN exp 

	THEN	shift 57


	.	error


state 39:

	negation : MINUS exp .  (reduce by rule 39)



	.	reduce by rule 39


state 40:

	exp : LPAREN expP . RPAREN 

	RPAREN	shift 58


	.	error


state 41:

	expP : exp . SEMICOLON expP 
	expP : exp .  (reduce by rule 19)

	SEMICOLON	shift 59


	.	reduce by rule 19


state 42:

	unit : LPAREN RPAREN .  (reduce by rule 40)



	.	reduce by rule 40


state 43:

	lval : ID DOT . ID 

	ID	shift 60


	.	error


state 44:

	record : ID LBRACE . ID EQ exp recP RBRACE 

	ID	shift 61


	.	error


state 45:

	array : ID LBRACK . exp RBRACK OF exp 
	lval : ID LBRACK . exp RBRACK 

	ID	shift 24
	INT	shift 23
	STRING	shift 22
	LPAREN	shift 21
	MINUS	shift 20
	IF	shift 19
	WHILE	shift 18
	FOR	shift 17
	LET	shift 16
	BREAK	shift 15
	NIL	shift 14

	exp	goto 62
	lvalue	goto 12
	unit	goto 11
	negation	goto 10
	record	goto 9
	array	goto 8
	assignment	goto 7
	ifThenElse	goto 6
	ifThen	goto 5
	let	goto 4
	while	goto 3
	forloop	goto 2
	lval	goto 1

	.	error


state 46:

	exp : ID LPAREN . args RPAREN 

	ID	shift 24
	INT	shift 23
	STRING	shift 22
	LPAREN	shift 21
	MINUS	shift 20
	IF	shift 19
	WHILE	shift 18
	FOR	shift 17
	LET	shift 16
	BREAK	shift 15
	NIL	shift 14

	exp	goto 64
	lvalue	goto 12
	unit	goto 11
	negation	goto 10
	record	goto 9
	array	goto 8
	assignment	goto 7
	ifThenElse	goto 6
	ifThen	goto 5
	let	goto 4
	args	goto 63
	while	goto 3
	forloop	goto 2
	lval	goto 1

	.	error


state 47:

	lval : lval DOT ID .  (reduce by rule 65)



	.	reduce by rule 65


state 48:

	lval : lval LBRACK exp . RBRACK 

	RBRACK	shift 65


	.	error


state 49:

	assignment : lvalue ASSIGN exp .  (reduce by rule 68)



	.	reduce by rule 68


state 50:

	decs : dec decs .  (reduce by rule 45)



	.	reduce by rule 45


state 51:

	let : LET decs IN . expseq END 

	ID	shift 24
	INT	shift 23
	STRING	shift 22
	LPAREN	shift 21
	MINUS	shift 20
	IF	shift 19
	WHILE	shift 18
	FOR	shift 17
	LET	shift 16
	BREAK	shift 15
	NIL	shift 14

	exp	goto 41
	lvalue	goto 12
	unit	goto 11
	negation	goto 10
	expP	goto 67
	record	goto 9
	array	goto 8
	assignment	goto 7
	ifThenElse	goto 6
	ifThen	goto 5
	let	goto 4
	expseq	goto 66
	while	goto 3
	forloop	goto 2
	lval	goto 1

	.	reduce by rule 21


state 52:

	tydec : TYPE ID . EQ ty 

	EQ	shift 68


	.	error


state 53:

	vardec : VAR ID . ASSIGN exp 
	vardec : VAR ID . COLON ID ASSIGN exp 

	COLON	shift 70
	ASSIGN	shift 69


	.	error


state 54:

	fundec : FUNCTION ID . LPAREN tyfields RPAREN EQ exp 
	fundec : FUNCTION ID . LPAREN tyfields RPAREN COLON ID EQ exp 

	LPAREN	shift 71


	.	error


state 55:

	forloop : FOR ID ASSIGN . exp TO exp DO exp 

	ID	shift 24
	INT	shift 23
	STRING	shift 22
	LPAREN	shift 21
	MINUS	shift 20
	IF	shift 19
	WHILE	shift 18
	FOR	shift 17
	LET	shift 16
	BREAK	shift 15
	NIL	shift 14

	exp	goto 72
	lvalue	goto 12
	unit	goto 11
	negation	goto 10
	record	goto 9
	array	goto 8
	assignment	goto 7
	ifThenElse	goto 6
	ifThen	goto 5
	let	goto 4
	while	goto 3
	forloop	goto 2
	lval	goto 1

	.	error


state 56:

	while : WHILE exp DO . exp 

	ID	shift 24
	INT	shift 23
	STRING	shift 22
	LPAREN	shift 21
	MINUS	shift 20
	IF	shift 19
	WHILE	shift 18
	FOR	shift 17
	LET	shift 16
	BREAK	shift 15
	NIL	shift 14

	exp	goto 73
	lvalue	goto 12
	unit	goto 11
	negation	goto 10
	record	goto 9
	array	goto 8
	assignment	goto 7
	ifThenElse	goto 6
	ifThen	goto 5
	let	goto 4
	while	goto 3
	forloop	goto 2
	lval	goto 1

	.	error


state 57:

	ifThenElse : IF exp THEN . exp ELSE exp 
	ifThen : IF exp THEN . exp 

	ID	shift 24
	INT	shift 23
	STRING	shift 22
	LPAREN	shift 21
	MINUS	shift 20
	IF	shift 19
	WHILE	shift 18
	FOR	shift 17
	LET	shift 16
	BREAK	shift 15
	NIL	shift 14

	exp	goto 74
	lvalue	goto 12
	unit	goto 11
	negation	goto 10
	record	goto 9
	array	goto 8
	assignment	goto 7
	ifThenElse	goto 6
	ifThen	goto 5
	let	goto 4
	while	goto 3
	forloop	goto 2
	lval	goto 1

	.	error


state 58:

	exp : LPAREN expP RPAREN .  (reduce by rule 2)



	.	reduce by rule 2


state 59:

	expP : exp SEMICOLON . expP 

	ID	shift 24
	INT	shift 23
	STRING	shift 22
	LPAREN	shift 21
	MINUS	shift 20
	IF	shift 19
	WHILE	shift 18
	FOR	shift 17
	LET	shift 16
	BREAK	shift 15
	NIL	shift 14

	exp	goto 41
	lvalue	goto 12
	unit	goto 11
	negation	goto 10
	expP	goto 75
	record	goto 9
	array	goto 8
	assignment	goto 7
	ifThenElse	goto 6
	ifThen	goto 5
	let	goto 4
	while	goto 3
	forloop	goto 2
	lval	goto 1

	.	error


state 60:

	lval : ID DOT ID .  (reduce by rule 64)



	.	reduce by rule 64


state 61:

	record : ID LBRACE ID . EQ exp recP RBRACE 

	EQ	shift 76


	.	error


state 62:

	array : ID LBRACK exp . RBRACK OF exp 
	lval : ID LBRACK exp . RBRACK 

	RBRACK	shift 77


	.	error


state 63:

	exp : ID LPAREN args . RPAREN 

	RPAREN	shift 78


	.	error


state 64:

	args : exp . COMMA args 
	args : exp .  (reduce by rule 23)

	COMMA	shift 79


	.	reduce by rule 23


state 65:

	lval : lval LBRACK exp RBRACK .  (reduce by rule 67)



	.	reduce by rule 67


state 66:

	let : LET decs IN expseq . END 

	END	shift 80


	.	error


state 67:

	expseq : expP .  (reduce by rule 20)



	.	reduce by rule 20


state 68:

	tydec : TYPE ID EQ . ty 

	ID	shift 84
	LBRACE	shift 83
	ARRAY	shift 82

	ty	goto 81

	.	error


state 69:

	vardec : VAR ID ASSIGN . exp 

	ID	shift 24
	INT	shift 23
	STRING	shift 22
	LPAREN	shift 21
	MINUS	shift 20
	IF	shift 19
	WHILE	shift 18
	FOR	shift 17
	LET	shift 16
	BREAK	shift 15
	NIL	shift 14

	exp	goto 85
	lvalue	goto 12
	unit	goto 11
	negation	goto 10
	record	goto 9
	array	goto 8
	assignment	goto 7
	ifThenElse	goto 6
	ifThen	goto 5
	let	goto 4
	while	goto 3
	forloop	goto 2
	lval	goto 1

	.	error


state 70:

	vardec : VAR ID COLON . ID ASSIGN exp 

	ID	shift 86


	.	error


state 71:

	fundec : FUNCTION ID LPAREN . tyfields RPAREN EQ exp 
	fundec : FUNCTION ID LPAREN . tyfields RPAREN COLON ID EQ exp 

	ID	shift 88

	tyfields	goto 87

	.	reduce by rule 54


state 72:

	forloop : FOR ID ASSIGN exp . TO exp DO exp 

	TO	shift 89


	.	error


state 73:

	while : WHILE exp DO exp .  (reduce by rule 71)



	.	reduce by rule 71


state 74:

	ifThenElse : IF exp THEN exp . ELSE exp 
	ifThen : IF exp THEN exp .  (reduce by rule 70)

	ELSE	shift 90


	.	reduce by rule 70


state 75:

	expP : exp SEMICOLON expP .  (reduce by rule 18)



	.	reduce by rule 18


state 76:

	record : ID LBRACE ID EQ . exp recP RBRACE 

	ID	shift 24
	INT	shift 23
	STRING	shift 22
	LPAREN	shift 21
	MINUS	shift 20
	IF	shift 19
	WHILE	shift 18
	FOR	shift 17
	LET	shift 16
	BREAK	shift 15
	NIL	shift 14

	exp	goto 91
	lvalue	goto 12
	unit	goto 11
	negation	goto 10
	record	goto 9
	array	goto 8
	assignment	goto 7
	ifThenElse	goto 6
	ifThen	goto 5
	let	goto 4
	while	goto 3
	forloop	goto 2
	lval	goto 1

	.	error


state 77:

	array : ID LBRACK exp RBRACK . OF exp 
	lval : ID LBRACK exp RBRACK .  (reduce by rule 66)

	OF	shift 92


	.	reduce by rule 66


state 78:

	exp : ID LPAREN args RPAREN .  (reduce by rule 16)



	.	reduce by rule 16


state 79:

	args : exp COMMA . args 

	ID	shift 24
	INT	shift 23
	STRING	shift 22
	LPAREN	shift 21
	MINUS	shift 20
	IF	shift 19
	WHILE	shift 18
	FOR	shift 17
	LET	shift 16
	BREAK	shift 15
	NIL	shift 14

	exp	goto 64
	lvalue	goto 12
	unit	goto 11
	negation	goto 10
	record	goto 9
	array	goto 8
	assignment	goto 7
	ifThenElse	goto 6
	ifThen	goto 5
	let	goto 4
	args	goto 93
	while	goto 3
	forloop	goto 2
	lval	goto 1

	.	error


state 80:

	let : LET decs IN expseq END .  (reduce by rule 73)



	.	reduce by rule 73


state 81:

	tydec : TYPE ID EQ ty .  (reduce by rule 50)



	.	reduce by rule 50


state 82:

	ty : ARRAY . OF ID 

	OF	shift 94


	.	error


state 83:

	ty : LBRACE . tyfields RBRACE 

	ID	shift 88

	tyfields	goto 95

	.	reduce by rule 54


state 84:

	ty : ID .  (reduce by rule 51)



	.	reduce by rule 51


state 85:

	vardec : VAR ID ASSIGN exp .  (reduce by rule 58)



	.	reduce by rule 58


state 86:

	vardec : VAR ID COLON ID . ASSIGN exp 

	ASSIGN	shift 96


	.	error


state 87:

	fundec : FUNCTION ID LPAREN tyfields . RPAREN EQ exp 
	fundec : FUNCTION ID LPAREN tyfields . RPAREN COLON ID EQ exp 

	RPAREN	shift 97


	.	error


state 88:

	tyfields : ID . COLON ID tyfieldsP 

	COLON	shift 98


	.	error


state 89:

	forloop : FOR ID ASSIGN exp TO . exp DO exp 

	ID	shift 24
	INT	shift 23
	STRING	shift 22
	LPAREN	shift 21
	MINUS	shift 20
	IF	shift 19
	WHILE	shift 18
	FOR	shift 17
	LET	shift 16
	BREAK	shift 15
	NIL	shift 14

	exp	goto 99
	lvalue	goto 12
	unit	goto 11
	negation	goto 10
	record	goto 9
	array	goto 8
	assignment	goto 7
	ifThenElse	goto 6
	ifThen	goto 5
	let	goto 4
	while	goto 3
	forloop	goto 2
	lval	goto 1

	.	error


state 90:

	ifThenElse : IF exp THEN exp ELSE . exp 

	ID	shift 24
	INT	shift 23
	STRING	shift 22
	LPAREN	shift 21
	MINUS	shift 20
	IF	shift 19
	WHILE	shift 18
	FOR	shift 17
	LET	shift 16
	BREAK	shift 15
	NIL	shift 14

	exp	goto 100
	lvalue	goto 12
	unit	goto 11
	negation	goto 10
	record	goto 9
	array	goto 8
	assignment	goto 7
	ifThenElse	goto 6
	ifThen	goto 5
	let	goto 4
	while	goto 3
	forloop	goto 2
	lval	goto 1

	.	error


state 91:

	record : ID LBRACE ID EQ exp . recP RBRACE 

	COMMA	shift 102

	recP	goto 101

	.	reduce by rule 43


state 92:

	array : ID LBRACK exp RBRACK OF . exp 

	ID	shift 24
	INT	shift 23
	STRING	shift 22
	LPAREN	shift 21
	MINUS	shift 20
	IF	shift 19
	WHILE	shift 18
	FOR	shift 17
	LET	shift 16
	BREAK	shift 15
	NIL	shift 14

	exp	goto 103
	lvalue	goto 12
	unit	goto 11
	negation	goto 10
	record	goto 9
	array	goto 8
	assignment	goto 7
	ifThenElse	goto 6
	ifThen	goto 5
	let	goto 4
	while	goto 3
	forloop	goto 2
	lval	goto 1

	.	error


state 93:

	args : exp COMMA args .  (reduce by rule 22)



	.	reduce by rule 22


state 94:

	ty : ARRAY OF . ID 

	ID	shift 104


	.	error


state 95:

	ty : LBRACE tyfields . RBRACE 

	RBRACE	shift 105


	.	error


state 96:

	vardec : VAR ID COLON ID ASSIGN . exp 

	ID	shift 24
	INT	shift 23
	STRING	shift 22
	LPAREN	shift 21
	MINUS	shift 20
	IF	shift 19
	WHILE	shift 18
	FOR	shift 17
	LET	shift 16
	BREAK	shift 15
	NIL	shift 14

	exp	goto 106
	lvalue	goto 12
	unit	goto 11
	negation	goto 10
	record	goto 9
	array	goto 8
	assignment	goto 7
	ifThenElse	goto 6
	ifThen	goto 5
	let	goto 4
	while	goto 3
	forloop	goto 2
	lval	goto 1

	.	error


state 97:

	fundec : FUNCTION ID LPAREN tyfields RPAREN . EQ exp 
	fundec : FUNCTION ID LPAREN tyfields RPAREN . COLON ID EQ exp 

	COLON	shift 108
	EQ	shift 107


	.	error


state 98:

	tyfields : ID COLON . ID tyfieldsP 

	ID	shift 109


	.	error


state 99:

	forloop : FOR ID ASSIGN exp TO exp . DO exp 

	DO	shift 110


	.	error


state 100:

	ifThenElse : IF exp THEN exp ELSE exp .  (reduce by rule 69)



	.	reduce by rule 69


state 101:

	record : ID LBRACE ID EQ exp recP . RBRACE 

	RBRACE	shift 111


	.	error


state 102:

	recP : COMMA . ID EQ exp recP 

	ID	shift 112


	.	error


state 103:

	array : ID LBRACK exp RBRACK OF exp .  (reduce by rule 44)



	.	reduce by rule 44


state 104:

	ty : ARRAY OF ID .  (reduce by rule 53)



	.	reduce by rule 53


state 105:

	ty : LBRACE tyfields RBRACE .  (reduce by rule 52)



	.	reduce by rule 52


state 106:

	vardec : VAR ID COLON ID ASSIGN exp .  (reduce by rule 59)



	.	reduce by rule 59


state 107:

	fundec : FUNCTION ID LPAREN tyfields RPAREN EQ . exp 

	ID	shift 24
	INT	shift 23
	STRING	shift 22
	LPAREN	shift 21
	MINUS	shift 20
	IF	shift 19
	WHILE	shift 18
	FOR	shift 17
	LET	shift 16
	BREAK	shift 15
	NIL	shift 14

	exp	goto 113
	lvalue	goto 12
	unit	goto 11
	negation	goto 10
	record	goto 9
	array	goto 8
	assignment	goto 7
	ifThenElse	goto 6
	ifThen	goto 5
	let	goto 4
	while	goto 3
	forloop	goto 2
	lval	goto 1

	.	error


state 108:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON . ID EQ exp 

	ID	shift 114


	.	error


state 109:

	tyfields : ID COLON ID . tyfieldsP 

	COMMA	shift 116

	tyfieldsP	goto 115

	.	reduce by rule 56


state 110:

	forloop : FOR ID ASSIGN exp TO exp DO . exp 

	ID	shift 24
	INT	shift 23
	STRING	shift 22
	LPAREN	shift 21
	MINUS	shift 20
	IF	shift 19
	WHILE	shift 18
	FOR	shift 17
	LET	shift 16
	BREAK	shift 15
	NIL	shift 14

	exp	goto 117
	lvalue	goto 12
	unit	goto 11
	negation	goto 10
	record	goto 9
	array	goto 8
	assignment	goto 7
	ifThenElse	goto 6
	ifThen	goto 5
	let	goto 4
	while	goto 3
	forloop	goto 2
	lval	goto 1

	.	error


state 111:

	record : ID LBRACE ID EQ exp recP RBRACE .  (reduce by rule 41)



	.	reduce by rule 41


state 112:

	recP : COMMA ID . EQ exp recP 

	EQ	shift 118


	.	error


state 113:

	fundec : FUNCTION ID LPAREN tyfields RPAREN EQ exp .  (reduce by rule 60)



	.	reduce by rule 60


state 114:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID . EQ exp 

	EQ	shift 119


	.	error


state 115:

	tyfields : ID COLON ID tyfieldsP .  (reduce by rule 55)



	.	reduce by rule 55


state 116:

	tyfieldsP : COMMA . ID COLON ID tyfieldsP 

	ID	shift 120


	.	error


state 117:

	forloop : FOR ID ASSIGN exp TO exp DO exp .  (reduce by rule 72)



	.	reduce by rule 72


state 118:

	recP : COMMA ID EQ . exp recP 

	ID	shift 24
	INT	shift 23
	STRING	shift 22
	LPAREN	shift 21
	MINUS	shift 20
	IF	shift 19
	WHILE	shift 18
	FOR	shift 17
	LET	shift 16
	BREAK	shift 15
	NIL	shift 14

	exp	goto 121
	lvalue	goto 12
	unit	goto 11
	negation	goto 10
	record	goto 9
	array	goto 8
	assignment	goto 7
	ifThenElse	goto 6
	ifThen	goto 5
	let	goto 4
	while	goto 3
	forloop	goto 2
	lval	goto 1

	.	error


state 119:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ . exp 

	ID	shift 24
	INT	shift 23
	STRING	shift 22
	LPAREN	shift 21
	MINUS	shift 20
	IF	shift 19
	WHILE	shift 18
	FOR	shift 17
	LET	shift 16
	BREAK	shift 15
	NIL	shift 14

	exp	goto 122
	lvalue	goto 12
	unit	goto 11
	negation	goto 10
	record	goto 9
	array	goto 8
	assignment	goto 7
	ifThenElse	goto 6
	ifThen	goto 5
	let	goto 4
	while	goto 3
	forloop	goto 2
	lval	goto 1

	.	error


state 120:

	tyfieldsP : COMMA ID . COLON ID tyfieldsP 

	COLON	shift 123


	.	error


state 121:

	recP : COMMA ID EQ exp . recP 

	COMMA	shift 102

	recP	goto 124

	.	reduce by rule 43


state 122:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp .  (reduce by rule 61)



	.	reduce by rule 61


state 123:

	tyfieldsP : COMMA ID COLON . ID tyfieldsP 

	ID	shift 125


	.	error


state 124:

	recP : COMMA ID EQ exp recP .  (reduce by rule 42)



	.	reduce by rule 42


state 125:

	tyfieldsP : COMMA ID COLON ID . tyfieldsP 

	COMMA	shift 116

	tyfieldsP	goto 126

	.	reduce by rule 56


state 126:

	tyfieldsP : COMMA ID COLON ID tyfieldsP .  (reduce by rule 57)



	.	reduce by rule 57


state 127:


	EOF	accept


	.	error

99 of 472 action table entries left after compaction
349 goto table entries
