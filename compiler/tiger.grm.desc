
state 0:

	program : . exp 

	ID	shift 27
	INT	shift 26
	STRING	shift 25
	LPAREN	shift 24
	MINUS	shift 23
	IF	shift 22
	WHILE	shift 21
	FOR	shift 20
	LET	shift 19
	BREAK	shift 18
	NIL	shift 17

	exp	goto 16
	program	goto 154
	lvalue	goto 15
	unit	goto 14
	negation	goto 13
	comparison	goto 12
	arithmetic	goto 11
	boolcomp	goto 10
	record	goto 9
	array	goto 8
	assignment	goto 7
	ifThenElse	goto 6
	ifThen	goto 5
	let	goto 4
	while	goto 3
	forloop	goto 2
	lval	goto 1

	.	error


state 1:

	lvalue : lval .  (reduce by rule 64)
	lval : lval . DOT ID 
	lval : lval . LBRACK exp RBRACK 

	LBRACK	shift 29
	DOT	shift 28


	.	reduce by rule 64


state 2:

	exp : forloop .  (reduce by rule 16)



	.	reduce by rule 16


state 3:

	exp : while .  (reduce by rule 15)



	.	reduce by rule 15


state 4:

	exp : let .  (reduce by rule 20)



	.	reduce by rule 20


state 5:

	exp : ifThen .  (reduce by rule 14)



	.	reduce by rule 14


state 6:

	exp : ifThenElse .  (reduce by rule 13)



	.	reduce by rule 13


state 7:

	exp : assignment .  (reduce by rule 12)



	.	reduce by rule 12


state 8:

	exp : array .  (reduce by rule 11)



	.	reduce by rule 11


state 9:

	exp : record .  (reduce by rule 10)



	.	reduce by rule 10


state 10:

	exp : boolcomp .  (reduce by rule 9)



	.	reduce by rule 9


state 11:

	exp : arithmetic .  (reduce by rule 7)



	.	reduce by rule 7


state 12:

	exp : comparison .  (reduce by rule 8)



	.	reduce by rule 8


state 13:

	exp : negation .  (reduce by rule 6)



	.	reduce by rule 6


state 14:

	exp : unit .  (reduce by rule 18)



	.	reduce by rule 18


state 15:

	exp : lvalue .  (reduce by rule 3)
	assignment : lvalue . ASSIGN exp 

	ASSIGN	shift 30


	.	reduce by rule 3


state 16:

	program : exp .  (reduce by rule 0)
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . LT exp 
	comparison : exp . LE exp 
	comparison : exp . GT exp 
	comparison : exp . GE exp 
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	boolcomp : exp . AND exp 
	boolcomp : exp . OR exp 

	PLUS	shift 42
	MINUS	shift 41
	TIMES	shift 40
	DIVIDE	shift 39
	EQ	shift 38
	NEQ	shift 37
	LT	shift 36
	LE	shift 35
	GT	shift 34
	GE	shift 33
	AND	shift 32
	OR	shift 31


	.	reduce by rule 0


state 17:

	exp : NIL .  (reduce by rule 1)



	.	reduce by rule 1


state 18:

	exp : BREAK .  (reduce by rule 17)



	.	reduce by rule 17


state 19:

	let : LET . decs IN expseq END 

	FUNCTION	shift 50
	VAR	shift 49
	TYPE	shift 48

	decs	goto 47
	dec	goto 46
	tydec	goto 45
	vardec	goto 44
	fundec	goto 43

	.	error


state 20:

	forloop : FOR . ID ASSIGN exp TO exp DO exp 

	ID	shift 51


	.	error


state 21:

	while : WHILE . exp DO exp 

	ID	shift 27
	INT	shift 26
	STRING	shift 25
	LPAREN	shift 24
	MINUS	shift 23
	IF	shift 22
	WHILE	shift 21
	FOR	shift 20
	LET	shift 19
	BREAK	shift 18
	NIL	shift 17

	exp	goto 52
	lvalue	goto 15
	unit	goto 14
	negation	goto 13
	comparison	goto 12
	arithmetic	goto 11
	boolcomp	goto 10
	record	goto 9
	array	goto 8
	assignment	goto 7
	ifThenElse	goto 6
	ifThen	goto 5
	let	goto 4
	while	goto 3
	forloop	goto 2
	lval	goto 1

	.	error


state 22:

	ifThenElse : IF . exp THEN exp ELSE exp 
	ifThen : IF . exp THEN exp 

	ID	shift 27
	INT	shift 26
	STRING	shift 25
	LPAREN	shift 24
	MINUS	shift 23
	IF	shift 22
	WHILE	shift 21
	FOR	shift 20
	LET	shift 19
	BREAK	shift 18
	NIL	shift 17

	exp	goto 53
	lvalue	goto 15
	unit	goto 14
	negation	goto 13
	comparison	goto 12
	arithmetic	goto 11
	boolcomp	goto 10
	record	goto 9
	array	goto 8
	assignment	goto 7
	ifThenElse	goto 6
	ifThen	goto 5
	let	goto 4
	while	goto 3
	forloop	goto 2
	lval	goto 1

	.	error


state 23:

	negation : MINUS . exp 

	ID	shift 27
	INT	shift 26
	STRING	shift 25
	LPAREN	shift 24
	MINUS	shift 23
	IF	shift 22
	WHILE	shift 21
	FOR	shift 20
	LET	shift 19
	BREAK	shift 18
	NIL	shift 17

	exp	goto 54
	lvalue	goto 15
	unit	goto 14
	negation	goto 13
	comparison	goto 12
	arithmetic	goto 11
	boolcomp	goto 10
	record	goto 9
	array	goto 8
	assignment	goto 7
	ifThenElse	goto 6
	ifThen	goto 5
	let	goto 4
	while	goto 3
	forloop	goto 2
	lval	goto 1

	.	error


state 24:

	exp : LPAREN . expP RPAREN 
	unit : LPAREN . RPAREN 

	ID	shift 27
	INT	shift 26
	STRING	shift 25
	LPAREN	shift 24
	RPAREN	shift 57
	MINUS	shift 23
	IF	shift 22
	WHILE	shift 21
	FOR	shift 20
	LET	shift 19
	BREAK	shift 18
	NIL	shift 17

	exp	goto 56
	lvalue	goto 15
	unit	goto 14
	negation	goto 13
	comparison	goto 12
	arithmetic	goto 11
	boolcomp	goto 10
	expP	goto 55
	record	goto 9
	array	goto 8
	assignment	goto 7
	ifThenElse	goto 6
	ifThen	goto 5
	let	goto 4
	while	goto 3
	forloop	goto 2
	lval	goto 1

	.	error


state 25:

	exp : STRING .  (reduce by rule 5)



	.	reduce by rule 5


state 26:

	exp : INT .  (reduce by rule 4)



	.	reduce by rule 4


state 27:

	exp : ID . LPAREN args RPAREN 
	lvalue : ID .  (reduce by rule 63)
	record : ID . LBRACE ID EQ exp recP RBRACE 
	array : ID . LBRACK exp RBRACK OF exp 
	lval : ID . DOT ID 
	lval : ID . LBRACK exp RBRACK 

	LPAREN	shift 61
	LBRACK	shift 60
	LBRACE	shift 59
	DOT	shift 58


	.	reduce by rule 63


state 28:

	lval : lval DOT . ID 

	ID	shift 62


	.	error


state 29:

	lval : lval LBRACK . exp RBRACK 

	ID	shift 27
	INT	shift 26
	STRING	shift 25
	LPAREN	shift 24
	MINUS	shift 23
	IF	shift 22
	WHILE	shift 21
	FOR	shift 20
	LET	shift 19
	BREAK	shift 18
	NIL	shift 17

	exp	goto 63
	lvalue	goto 15
	unit	goto 14
	negation	goto 13
	comparison	goto 12
	arithmetic	goto 11
	boolcomp	goto 10
	record	goto 9
	array	goto 8
	assignment	goto 7
	ifThenElse	goto 6
	ifThen	goto 5
	let	goto 4
	while	goto 3
	forloop	goto 2
	lval	goto 1

	.	error


state 30:

	assignment : lvalue ASSIGN . exp 

	ID	shift 27
	INT	shift 26
	STRING	shift 25
	LPAREN	shift 24
	MINUS	shift 23
	IF	shift 22
	WHILE	shift 21
	FOR	shift 20
	LET	shift 19
	BREAK	shift 18
	NIL	shift 17

	exp	goto 64
	lvalue	goto 15
	unit	goto 14
	negation	goto 13
	comparison	goto 12
	arithmetic	goto 11
	boolcomp	goto 10
	record	goto 9
	array	goto 8
	assignment	goto 7
	ifThenElse	goto 6
	ifThen	goto 5
	let	goto 4
	while	goto 3
	forloop	goto 2
	lval	goto 1

	.	error


state 31:

	boolcomp : exp OR . exp 

	ID	shift 27
	INT	shift 26
	STRING	shift 25
	LPAREN	shift 24
	MINUS	shift 23
	IF	shift 22
	WHILE	shift 21
	FOR	shift 20
	LET	shift 19
	BREAK	shift 18
	NIL	shift 17

	exp	goto 65
	lvalue	goto 15
	unit	goto 14
	negation	goto 13
	comparison	goto 12
	arithmetic	goto 11
	boolcomp	goto 10
	record	goto 9
	array	goto 8
	assignment	goto 7
	ifThenElse	goto 6
	ifThen	goto 5
	let	goto 4
	while	goto 3
	forloop	goto 2
	lval	goto 1

	.	error


state 32:

	boolcomp : exp AND . exp 

	ID	shift 27
	INT	shift 26
	STRING	shift 25
	LPAREN	shift 24
	MINUS	shift 23
	IF	shift 22
	WHILE	shift 21
	FOR	shift 20
	LET	shift 19
	BREAK	shift 18
	NIL	shift 17

	exp	goto 66
	lvalue	goto 15
	unit	goto 14
	negation	goto 13
	comparison	goto 12
	arithmetic	goto 11
	boolcomp	goto 10
	record	goto 9
	array	goto 8
	assignment	goto 7
	ifThenElse	goto 6
	ifThen	goto 5
	let	goto 4
	while	goto 3
	forloop	goto 2
	lval	goto 1

	.	error


state 33:

	comparison : exp GE . exp 

	ID	shift 27
	INT	shift 26
	STRING	shift 25
	LPAREN	shift 24
	MINUS	shift 23
	IF	shift 22
	WHILE	shift 21
	FOR	shift 20
	LET	shift 19
	BREAK	shift 18
	NIL	shift 17

	exp	goto 67
	lvalue	goto 15
	unit	goto 14
	negation	goto 13
	comparison	goto 12
	arithmetic	goto 11
	boolcomp	goto 10
	record	goto 9
	array	goto 8
	assignment	goto 7
	ifThenElse	goto 6
	ifThen	goto 5
	let	goto 4
	while	goto 3
	forloop	goto 2
	lval	goto 1

	.	error


state 34:

	comparison : exp GT . exp 

	ID	shift 27
	INT	shift 26
	STRING	shift 25
	LPAREN	shift 24
	MINUS	shift 23
	IF	shift 22
	WHILE	shift 21
	FOR	shift 20
	LET	shift 19
	BREAK	shift 18
	NIL	shift 17

	exp	goto 68
	lvalue	goto 15
	unit	goto 14
	negation	goto 13
	comparison	goto 12
	arithmetic	goto 11
	boolcomp	goto 10
	record	goto 9
	array	goto 8
	assignment	goto 7
	ifThenElse	goto 6
	ifThen	goto 5
	let	goto 4
	while	goto 3
	forloop	goto 2
	lval	goto 1

	.	error


state 35:

	comparison : exp LE . exp 

	ID	shift 27
	INT	shift 26
	STRING	shift 25
	LPAREN	shift 24
	MINUS	shift 23
	IF	shift 22
	WHILE	shift 21
	FOR	shift 20
	LET	shift 19
	BREAK	shift 18
	NIL	shift 17

	exp	goto 69
	lvalue	goto 15
	unit	goto 14
	negation	goto 13
	comparison	goto 12
	arithmetic	goto 11
	boolcomp	goto 10
	record	goto 9
	array	goto 8
	assignment	goto 7
	ifThenElse	goto 6
	ifThen	goto 5
	let	goto 4
	while	goto 3
	forloop	goto 2
	lval	goto 1

	.	error


state 36:

	comparison : exp LT . exp 

	ID	shift 27
	INT	shift 26
	STRING	shift 25
	LPAREN	shift 24
	MINUS	shift 23
	IF	shift 22
	WHILE	shift 21
	FOR	shift 20
	LET	shift 19
	BREAK	shift 18
	NIL	shift 17

	exp	goto 70
	lvalue	goto 15
	unit	goto 14
	negation	goto 13
	comparison	goto 12
	arithmetic	goto 11
	boolcomp	goto 10
	record	goto 9
	array	goto 8
	assignment	goto 7
	ifThenElse	goto 6
	ifThen	goto 5
	let	goto 4
	while	goto 3
	forloop	goto 2
	lval	goto 1

	.	error


state 37:

	comparison : exp NEQ . exp 

	ID	shift 27
	INT	shift 26
	STRING	shift 25
	LPAREN	shift 24
	MINUS	shift 23
	IF	shift 22
	WHILE	shift 21
	FOR	shift 20
	LET	shift 19
	BREAK	shift 18
	NIL	shift 17

	exp	goto 71
	lvalue	goto 15
	unit	goto 14
	negation	goto 13
	comparison	goto 12
	arithmetic	goto 11
	boolcomp	goto 10
	record	goto 9
	array	goto 8
	assignment	goto 7
	ifThenElse	goto 6
	ifThen	goto 5
	let	goto 4
	while	goto 3
	forloop	goto 2
	lval	goto 1

	.	error


state 38:

	comparison : exp EQ . exp 

	ID	shift 27
	INT	shift 26
	STRING	shift 25
	LPAREN	shift 24
	MINUS	shift 23
	IF	shift 22
	WHILE	shift 21
	FOR	shift 20
	LET	shift 19
	BREAK	shift 18
	NIL	shift 17

	exp	goto 72
	lvalue	goto 15
	unit	goto 14
	negation	goto 13
	comparison	goto 12
	arithmetic	goto 11
	boolcomp	goto 10
	record	goto 9
	array	goto 8
	assignment	goto 7
	ifThenElse	goto 6
	ifThen	goto 5
	let	goto 4
	while	goto 3
	forloop	goto 2
	lval	goto 1

	.	error


state 39:

	arithmetic : exp DIVIDE . exp 

	ID	shift 27
	INT	shift 26
	STRING	shift 25
	LPAREN	shift 24
	MINUS	shift 23
	IF	shift 22
	WHILE	shift 21
	FOR	shift 20
	LET	shift 19
	BREAK	shift 18
	NIL	shift 17

	exp	goto 73
	lvalue	goto 15
	unit	goto 14
	negation	goto 13
	comparison	goto 12
	arithmetic	goto 11
	boolcomp	goto 10
	record	goto 9
	array	goto 8
	assignment	goto 7
	ifThenElse	goto 6
	ifThen	goto 5
	let	goto 4
	while	goto 3
	forloop	goto 2
	lval	goto 1

	.	error


state 40:

	arithmetic : exp TIMES . exp 

	ID	shift 27
	INT	shift 26
	STRING	shift 25
	LPAREN	shift 24
	MINUS	shift 23
	IF	shift 22
	WHILE	shift 21
	FOR	shift 20
	LET	shift 19
	BREAK	shift 18
	NIL	shift 17

	exp	goto 74
	lvalue	goto 15
	unit	goto 14
	negation	goto 13
	comparison	goto 12
	arithmetic	goto 11
	boolcomp	goto 10
	record	goto 9
	array	goto 8
	assignment	goto 7
	ifThenElse	goto 6
	ifThen	goto 5
	let	goto 4
	while	goto 3
	forloop	goto 2
	lval	goto 1

	.	error


state 41:

	arithmetic : exp MINUS . exp 

	ID	shift 27
	INT	shift 26
	STRING	shift 25
	LPAREN	shift 24
	MINUS	shift 23
	IF	shift 22
	WHILE	shift 21
	FOR	shift 20
	LET	shift 19
	BREAK	shift 18
	NIL	shift 17

	exp	goto 75
	lvalue	goto 15
	unit	goto 14
	negation	goto 13
	comparison	goto 12
	arithmetic	goto 11
	boolcomp	goto 10
	record	goto 9
	array	goto 8
	assignment	goto 7
	ifThenElse	goto 6
	ifThen	goto 5
	let	goto 4
	while	goto 3
	forloop	goto 2
	lval	goto 1

	.	error


state 42:

	arithmetic : exp PLUS . exp 

	ID	shift 27
	INT	shift 26
	STRING	shift 25
	LPAREN	shift 24
	MINUS	shift 23
	IF	shift 22
	WHILE	shift 21
	FOR	shift 20
	LET	shift 19
	BREAK	shift 18
	NIL	shift 17

	exp	goto 76
	lvalue	goto 15
	unit	goto 14
	negation	goto 13
	comparison	goto 12
	arithmetic	goto 11
	boolcomp	goto 10
	record	goto 9
	array	goto 8
	assignment	goto 7
	ifThenElse	goto 6
	ifThen	goto 5
	let	goto 4
	while	goto 3
	forloop	goto 2
	lval	goto 1

	.	error


state 43:

	dec : fundec .  (reduce by rule 50)



	.	reduce by rule 50


state 44:

	dec : vardec .  (reduce by rule 49)



	.	reduce by rule 49


state 45:

	dec : tydec .  (reduce by rule 48)



	.	reduce by rule 48


state 46:

	decs : dec . decs 
	decs : dec .  (reduce by rule 47)

	FUNCTION	shift 50
	VAR	shift 49
	TYPE	shift 48

	decs	goto 77
	dec	goto 46
	tydec	goto 45
	vardec	goto 44
	fundec	goto 43

	.	reduce by rule 47


state 47:

	let : LET decs . IN expseq END 

	IN	shift 78


	.	error


state 48:

	tydec : TYPE . ID EQ ty 

	ID	shift 79


	.	error


state 49:

	vardec : VAR . ID ASSIGN exp 
	vardec : VAR . ID COLON ID ASSIGN exp 

	ID	shift 80


	.	error


state 50:

	fundec : FUNCTION . ID LPAREN tyfields RPAREN EQ exp 
	fundec : FUNCTION . ID LPAREN tyfields RPAREN COLON ID EQ exp 

	ID	shift 81


	.	error


state 51:

	forloop : FOR ID . ASSIGN exp TO exp DO exp 

	ASSIGN	shift 82


	.	error


state 52:

	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . LT exp 
	comparison : exp . LE exp 
	comparison : exp . GT exp 
	comparison : exp . GE exp 
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	boolcomp : exp . AND exp 
	boolcomp : exp . OR exp 
	while : WHILE exp . DO exp 

	PLUS	shift 42
	MINUS	shift 41
	TIMES	shift 40
	DIVIDE	shift 39
	EQ	shift 38
	NEQ	shift 37
	LT	shift 36
	LE	shift 35
	GT	shift 34
	GE	shift 33
	AND	shift 32
	OR	shift 31
	DO	shift 83


	.	error


state 53:

	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . LT exp 
	comparison : exp . LE exp 
	comparison : exp . GT exp 
	comparison : exp . GE exp 
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	boolcomp : exp . AND exp 
	boolcomp : exp . OR exp 
	ifThenElse : IF exp . THEN exp ELSE exp 
	ifThen : IF exp . THEN exp 

	PLUS	shift 42
	MINUS	shift 41
	TIMES	shift 40
	DIVIDE	shift 39
	EQ	shift 38
	NEQ	shift 37
	LT	shift 36
	LE	shift 35
	GT	shift 34
	GE	shift 33
	AND	shift 32
	OR	shift 31
	THEN	shift 84


	.	error


state 54:

	negation : MINUS exp .  (reduce by rule 40)
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . LT exp 
	comparison : exp . LE exp 
	comparison : exp . GT exp 
	comparison : exp . GE exp 
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	boolcomp : exp . AND exp 
	boolcomp : exp . OR exp 

	TIMES	shift 40
	DIVIDE	shift 39


	.	reduce by rule 40


state 55:

	exp : LPAREN expP . RPAREN 

	RPAREN	shift 85


	.	error


state 56:

	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . LT exp 
	comparison : exp . LE exp 
	comparison : exp . GT exp 
	comparison : exp . GE exp 
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	boolcomp : exp . AND exp 
	boolcomp : exp . OR exp 
	expP : exp . SEMICOLON expP 
	expP : exp .  (reduce by rule 22)

	SEMICOLON	shift 86
	PLUS	shift 42
	MINUS	shift 41
	TIMES	shift 40
	DIVIDE	shift 39
	EQ	shift 38
	NEQ	shift 37
	LT	shift 36
	LE	shift 35
	GT	shift 34
	GE	shift 33
	AND	shift 32
	OR	shift 31


	.	reduce by rule 22


state 57:

	unit : LPAREN RPAREN .  (reduce by rule 41)



	.	reduce by rule 41


state 58:

	lval : ID DOT . ID 

	ID	shift 87


	.	error


state 59:

	record : ID LBRACE . ID EQ exp recP RBRACE 

	ID	shift 88


	.	error


state 60:

	array : ID LBRACK . exp RBRACK OF exp 
	lval : ID LBRACK . exp RBRACK 

	ID	shift 27
	INT	shift 26
	STRING	shift 25
	LPAREN	shift 24
	MINUS	shift 23
	IF	shift 22
	WHILE	shift 21
	FOR	shift 20
	LET	shift 19
	BREAK	shift 18
	NIL	shift 17

	exp	goto 89
	lvalue	goto 15
	unit	goto 14
	negation	goto 13
	comparison	goto 12
	arithmetic	goto 11
	boolcomp	goto 10
	record	goto 9
	array	goto 8
	assignment	goto 7
	ifThenElse	goto 6
	ifThen	goto 5
	let	goto 4
	while	goto 3
	forloop	goto 2
	lval	goto 1

	.	error


state 61:

	exp : ID LPAREN . args RPAREN 

	ID	shift 27
	INT	shift 26
	STRING	shift 25
	LPAREN	shift 24
	MINUS	shift 23
	IF	shift 22
	WHILE	shift 21
	FOR	shift 20
	LET	shift 19
	BREAK	shift 18
	NIL	shift 17

	exp	goto 91
	lvalue	goto 15
	unit	goto 14
	negation	goto 13
	comparison	goto 12
	arithmetic	goto 11
	boolcomp	goto 10
	record	goto 9
	array	goto 8
	assignment	goto 7
	ifThenElse	goto 6
	ifThen	goto 5
	let	goto 4
	args	goto 90
	while	goto 3
	forloop	goto 2
	lval	goto 1

	.	reduce by rule 27


state 62:

	lval : lval DOT ID .  (reduce by rule 66)



	.	reduce by rule 66


state 63:

	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . LT exp 
	comparison : exp . LE exp 
	comparison : exp . GT exp 
	comparison : exp . GE exp 
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	boolcomp : exp . AND exp 
	boolcomp : exp . OR exp 
	lval : lval LBRACK exp . RBRACK 

	RBRACK	shift 92
	PLUS	shift 42
	MINUS	shift 41
	TIMES	shift 40
	DIVIDE	shift 39
	EQ	shift 38
	NEQ	shift 37
	LT	shift 36
	LE	shift 35
	GT	shift 34
	GE	shift 33
	AND	shift 32
	OR	shift 31


	.	error


state 64:

	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . LT exp 
	comparison : exp . LE exp 
	comparison : exp . GT exp 
	comparison : exp . GE exp 
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	boolcomp : exp . AND exp 
	boolcomp : exp . OR exp 
	assignment : lvalue ASSIGN exp .  (reduce by rule 69)

	PLUS	shift 42
	MINUS	shift 41
	TIMES	shift 40
	DIVIDE	shift 39
	EQ	shift 38
	NEQ	shift 37
	LT	shift 36
	LE	shift 35
	GT	shift 34
	GE	shift 33
	AND	shift 32
	OR	shift 31


	.	reduce by rule 69


state 65:

	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . LT exp 
	comparison : exp . LE exp 
	comparison : exp . GT exp 
	comparison : exp . GE exp 
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	boolcomp : exp . AND exp 
	boolcomp : exp . OR exp 
	boolcomp : exp OR exp .  (reduce by rule 39)

	PLUS	shift 42
	MINUS	shift 41
	TIMES	shift 40
	DIVIDE	shift 39
	EQ	shift 38
	NEQ	shift 37
	LT	shift 36
	LE	shift 35
	GT	shift 34
	GE	shift 33


	.	reduce by rule 39


state 66:

	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . LT exp 
	comparison : exp . LE exp 
	comparison : exp . GT exp 
	comparison : exp . GE exp 
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	boolcomp : exp . AND exp 
	boolcomp : exp AND exp .  (reduce by rule 38)
	boolcomp : exp . OR exp 

	PLUS	shift 42
	MINUS	shift 41
	TIMES	shift 40
	DIVIDE	shift 39
	EQ	shift 38
	NEQ	shift 37
	LT	shift 36
	LE	shift 35
	GT	shift 34
	GE	shift 33


	.	reduce by rule 38


state 67:

	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . LT exp 
	comparison : exp . LE exp 
	comparison : exp . GT exp 
	comparison : exp . GE exp 
	comparison : exp GE exp .  (reduce by rule 37)
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	boolcomp : exp . AND exp 
	boolcomp : exp . OR exp 

	EOF	reduce by rule 37
	COMMA	reduce by rule 37
	SEMICOLON	reduce by rule 37
	RPAREN	reduce by rule 37
	RBRACK	reduce by rule 37
	RBRACE	reduce by rule 37
	PLUS	shift 42
	MINUS	shift 41
	TIMES	shift 40
	DIVIDE	shift 39
	AND	reduce by rule 37
	OR	reduce by rule 37
	THEN	reduce by rule 37
	ELSE	reduce by rule 37
	TO	reduce by rule 37
	DO	reduce by rule 37
	IN	reduce by rule 37
	END	reduce by rule 37
	FUNCTION	reduce by rule 37
	VAR	reduce by rule 37
	TYPE	reduce by rule 37


	.	error


state 68:

	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . LT exp 
	comparison : exp . LE exp 
	comparison : exp . GT exp 
	comparison : exp GT exp .  (reduce by rule 36)
	comparison : exp . GE exp 
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	boolcomp : exp . AND exp 
	boolcomp : exp . OR exp 

	EOF	reduce by rule 36
	COMMA	reduce by rule 36
	SEMICOLON	reduce by rule 36
	RPAREN	reduce by rule 36
	RBRACK	reduce by rule 36
	RBRACE	reduce by rule 36
	PLUS	shift 42
	MINUS	shift 41
	TIMES	shift 40
	DIVIDE	shift 39
	AND	reduce by rule 36
	OR	reduce by rule 36
	THEN	reduce by rule 36
	ELSE	reduce by rule 36
	TO	reduce by rule 36
	DO	reduce by rule 36
	IN	reduce by rule 36
	END	reduce by rule 36
	FUNCTION	reduce by rule 36
	VAR	reduce by rule 36
	TYPE	reduce by rule 36


	.	error


state 69:

	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . LT exp 
	comparison : exp . LE exp 
	comparison : exp LE exp .  (reduce by rule 35)
	comparison : exp . GT exp 
	comparison : exp . GE exp 
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	boolcomp : exp . AND exp 
	boolcomp : exp . OR exp 

	EOF	reduce by rule 35
	COMMA	reduce by rule 35
	SEMICOLON	reduce by rule 35
	RPAREN	reduce by rule 35
	RBRACK	reduce by rule 35
	RBRACE	reduce by rule 35
	PLUS	shift 42
	MINUS	shift 41
	TIMES	shift 40
	DIVIDE	shift 39
	AND	reduce by rule 35
	OR	reduce by rule 35
	THEN	reduce by rule 35
	ELSE	reduce by rule 35
	TO	reduce by rule 35
	DO	reduce by rule 35
	IN	reduce by rule 35
	END	reduce by rule 35
	FUNCTION	reduce by rule 35
	VAR	reduce by rule 35
	TYPE	reduce by rule 35


	.	error


state 70:

	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . LT exp 
	comparison : exp LT exp .  (reduce by rule 34)
	comparison : exp . LE exp 
	comparison : exp . GT exp 
	comparison : exp . GE exp 
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	boolcomp : exp . AND exp 
	boolcomp : exp . OR exp 

	EOF	reduce by rule 34
	COMMA	reduce by rule 34
	SEMICOLON	reduce by rule 34
	RPAREN	reduce by rule 34
	RBRACK	reduce by rule 34
	RBRACE	reduce by rule 34
	PLUS	shift 42
	MINUS	shift 41
	TIMES	shift 40
	DIVIDE	shift 39
	AND	reduce by rule 34
	OR	reduce by rule 34
	THEN	reduce by rule 34
	ELSE	reduce by rule 34
	TO	reduce by rule 34
	DO	reduce by rule 34
	IN	reduce by rule 34
	END	reduce by rule 34
	FUNCTION	reduce by rule 34
	VAR	reduce by rule 34
	TYPE	reduce by rule 34


	.	error


state 71:

	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp NEQ exp .  (reduce by rule 33)
	comparison : exp . LT exp 
	comparison : exp . LE exp 
	comparison : exp . GT exp 
	comparison : exp . GE exp 
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	boolcomp : exp . AND exp 
	boolcomp : exp . OR exp 

	EOF	reduce by rule 33
	COMMA	reduce by rule 33
	SEMICOLON	reduce by rule 33
	RPAREN	reduce by rule 33
	RBRACK	reduce by rule 33
	RBRACE	reduce by rule 33
	PLUS	shift 42
	MINUS	shift 41
	TIMES	shift 40
	DIVIDE	shift 39
	AND	reduce by rule 33
	OR	reduce by rule 33
	THEN	reduce by rule 33
	ELSE	reduce by rule 33
	TO	reduce by rule 33
	DO	reduce by rule 33
	IN	reduce by rule 33
	END	reduce by rule 33
	FUNCTION	reduce by rule 33
	VAR	reduce by rule 33
	TYPE	reduce by rule 33


	.	error


state 72:

	comparison : exp . EQ exp 
	comparison : exp EQ exp .  (reduce by rule 32)
	comparison : exp . NEQ exp 
	comparison : exp . LT exp 
	comparison : exp . LE exp 
	comparison : exp . GT exp 
	comparison : exp . GE exp 
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	boolcomp : exp . AND exp 
	boolcomp : exp . OR exp 

	EOF	reduce by rule 32
	COMMA	reduce by rule 32
	SEMICOLON	reduce by rule 32
	RPAREN	reduce by rule 32
	RBRACK	reduce by rule 32
	RBRACE	reduce by rule 32
	PLUS	shift 42
	MINUS	shift 41
	TIMES	shift 40
	DIVIDE	shift 39
	AND	reduce by rule 32
	OR	reduce by rule 32
	THEN	reduce by rule 32
	ELSE	reduce by rule 32
	TO	reduce by rule 32
	DO	reduce by rule 32
	IN	reduce by rule 32
	END	reduce by rule 32
	FUNCTION	reduce by rule 32
	VAR	reduce by rule 32
	TYPE	reduce by rule 32


	.	error


state 73:

	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . LT exp 
	comparison : exp . LE exp 
	comparison : exp . GT exp 
	comparison : exp . GE exp 
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	arithmetic : exp DIVIDE exp .  (reduce by rule 31)
	boolcomp : exp . AND exp 
	boolcomp : exp . OR exp 



	.	reduce by rule 31


state 74:

	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . LT exp 
	comparison : exp . LE exp 
	comparison : exp . GT exp 
	comparison : exp . GE exp 
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp TIMES exp .  (reduce by rule 30)
	arithmetic : exp . DIVIDE exp 
	boolcomp : exp . AND exp 
	boolcomp : exp . OR exp 



	.	reduce by rule 30


state 75:

	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . LT exp 
	comparison : exp . LE exp 
	comparison : exp . GT exp 
	comparison : exp . GE exp 
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp MINUS exp .  (reduce by rule 29)
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	boolcomp : exp . AND exp 
	boolcomp : exp . OR exp 

	TIMES	shift 40
	DIVIDE	shift 39


	.	reduce by rule 29


state 76:

	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . LT exp 
	comparison : exp . LE exp 
	comparison : exp . GT exp 
	comparison : exp . GE exp 
	arithmetic : exp . PLUS exp 
	arithmetic : exp PLUS exp .  (reduce by rule 28)
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	boolcomp : exp . AND exp 
	boolcomp : exp . OR exp 

	TIMES	shift 40
	DIVIDE	shift 39


	.	reduce by rule 28


state 77:

	decs : dec decs .  (reduce by rule 46)



	.	reduce by rule 46


state 78:

	let : LET decs IN . expseq END 

	ID	shift 27
	INT	shift 26
	STRING	shift 25
	LPAREN	shift 24
	MINUS	shift 23
	IF	shift 22
	WHILE	shift 21
	FOR	shift 20
	LET	shift 19
	BREAK	shift 18
	NIL	shift 17

	exp	goto 56
	lvalue	goto 15
	unit	goto 14
	negation	goto 13
	comparison	goto 12
	arithmetic	goto 11
	boolcomp	goto 10
	expP	goto 94
	record	goto 9
	array	goto 8
	assignment	goto 7
	ifThenElse	goto 6
	ifThen	goto 5
	let	goto 4
	expseq	goto 93
	while	goto 3
	forloop	goto 2
	lval	goto 1

	.	reduce by rule 24


state 79:

	tydec : TYPE ID . EQ ty 

	EQ	shift 95


	.	error


state 80:

	vardec : VAR ID . ASSIGN exp 
	vardec : VAR ID . COLON ID ASSIGN exp 

	COLON	shift 97
	ASSIGN	shift 96


	.	error


state 81:

	fundec : FUNCTION ID . LPAREN tyfields RPAREN EQ exp 
	fundec : FUNCTION ID . LPAREN tyfields RPAREN COLON ID EQ exp 

	LPAREN	shift 98


	.	error


state 82:

	forloop : FOR ID ASSIGN . exp TO exp DO exp 

	ID	shift 27
	INT	shift 26
	STRING	shift 25
	LPAREN	shift 24
	MINUS	shift 23
	IF	shift 22
	WHILE	shift 21
	FOR	shift 20
	LET	shift 19
	BREAK	shift 18
	NIL	shift 17

	exp	goto 99
	lvalue	goto 15
	unit	goto 14
	negation	goto 13
	comparison	goto 12
	arithmetic	goto 11
	boolcomp	goto 10
	record	goto 9
	array	goto 8
	assignment	goto 7
	ifThenElse	goto 6
	ifThen	goto 5
	let	goto 4
	while	goto 3
	forloop	goto 2
	lval	goto 1

	.	error


state 83:

	while : WHILE exp DO . exp 

	ID	shift 27
	INT	shift 26
	STRING	shift 25
	LPAREN	shift 24
	MINUS	shift 23
	IF	shift 22
	WHILE	shift 21
	FOR	shift 20
	LET	shift 19
	BREAK	shift 18
	NIL	shift 17

	exp	goto 100
	lvalue	goto 15
	unit	goto 14
	negation	goto 13
	comparison	goto 12
	arithmetic	goto 11
	boolcomp	goto 10
	record	goto 9
	array	goto 8
	assignment	goto 7
	ifThenElse	goto 6
	ifThen	goto 5
	let	goto 4
	while	goto 3
	forloop	goto 2
	lval	goto 1

	.	error


state 84:

	ifThenElse : IF exp THEN . exp ELSE exp 
	ifThen : IF exp THEN . exp 

	ID	shift 27
	INT	shift 26
	STRING	shift 25
	LPAREN	shift 24
	MINUS	shift 23
	IF	shift 22
	WHILE	shift 21
	FOR	shift 20
	LET	shift 19
	BREAK	shift 18
	NIL	shift 17

	exp	goto 101
	lvalue	goto 15
	unit	goto 14
	negation	goto 13
	comparison	goto 12
	arithmetic	goto 11
	boolcomp	goto 10
	record	goto 9
	array	goto 8
	assignment	goto 7
	ifThenElse	goto 6
	ifThen	goto 5
	let	goto 4
	while	goto 3
	forloop	goto 2
	lval	goto 1

	.	error


state 85:

	exp : LPAREN expP RPAREN .  (reduce by rule 2)



	.	reduce by rule 2


state 86:

	expP : exp SEMICOLON . expP 

	ID	shift 27
	INT	shift 26
	STRING	shift 25
	LPAREN	shift 24
	MINUS	shift 23
	IF	shift 22
	WHILE	shift 21
	FOR	shift 20
	LET	shift 19
	BREAK	shift 18
	NIL	shift 17

	exp	goto 56
	lvalue	goto 15
	unit	goto 14
	negation	goto 13
	comparison	goto 12
	arithmetic	goto 11
	boolcomp	goto 10
	expP	goto 102
	record	goto 9
	array	goto 8
	assignment	goto 7
	ifThenElse	goto 6
	ifThen	goto 5
	let	goto 4
	while	goto 3
	forloop	goto 2
	lval	goto 1

	.	error


state 87:

	lval : ID DOT ID .  (reduce by rule 65)



	.	reduce by rule 65


state 88:

	record : ID LBRACE ID . EQ exp recP RBRACE 

	EQ	shift 103


	.	error


state 89:

	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . LT exp 
	comparison : exp . LE exp 
	comparison : exp . GT exp 
	comparison : exp . GE exp 
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	boolcomp : exp . AND exp 
	boolcomp : exp . OR exp 
	array : ID LBRACK exp . RBRACK OF exp 
	lval : ID LBRACK exp . RBRACK 

	RBRACK	shift 104
	PLUS	shift 42
	MINUS	shift 41
	TIMES	shift 40
	DIVIDE	shift 39
	EQ	shift 38
	NEQ	shift 37
	LT	shift 36
	LE	shift 35
	GT	shift 34
	GE	shift 33
	AND	shift 32
	OR	shift 31


	.	error


state 90:

	exp : ID LPAREN args . RPAREN 

	RPAREN	shift 105


	.	error


state 91:

	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . LT exp 
	comparison : exp . LE exp 
	comparison : exp . GT exp 
	comparison : exp . GE exp 
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	boolcomp : exp . AND exp 
	boolcomp : exp . OR exp 
	args : exp . COMMA args 
	args : exp .  (reduce by rule 26)

	COMMA	shift 106
	PLUS	shift 42
	MINUS	shift 41
	TIMES	shift 40
	DIVIDE	shift 39
	EQ	shift 38
	NEQ	shift 37
	LT	shift 36
	LE	shift 35
	GT	shift 34
	GE	shift 33
	AND	shift 32
	OR	shift 31


	.	reduce by rule 26


state 92:

	lval : lval LBRACK exp RBRACK .  (reduce by rule 68)



	.	reduce by rule 68


state 93:

	let : LET decs IN expseq . END 

	END	shift 107


	.	error


state 94:

	expseq : expP .  (reduce by rule 23)



	.	reduce by rule 23


state 95:

	tydec : TYPE ID EQ . ty 

	ID	shift 111
	LBRACE	shift 110
	ARRAY	shift 109

	ty	goto 108

	.	error


state 96:

	vardec : VAR ID ASSIGN . exp 

	ID	shift 27
	INT	shift 26
	STRING	shift 25
	LPAREN	shift 24
	MINUS	shift 23
	IF	shift 22
	WHILE	shift 21
	FOR	shift 20
	LET	shift 19
	BREAK	shift 18
	NIL	shift 17

	exp	goto 112
	lvalue	goto 15
	unit	goto 14
	negation	goto 13
	comparison	goto 12
	arithmetic	goto 11
	boolcomp	goto 10
	record	goto 9
	array	goto 8
	assignment	goto 7
	ifThenElse	goto 6
	ifThen	goto 5
	let	goto 4
	while	goto 3
	forloop	goto 2
	lval	goto 1

	.	error


state 97:

	vardec : VAR ID COLON . ID ASSIGN exp 

	ID	shift 113


	.	error


state 98:

	fundec : FUNCTION ID LPAREN . tyfields RPAREN EQ exp 
	fundec : FUNCTION ID LPAREN . tyfields RPAREN COLON ID EQ exp 

	ID	shift 115

	tyfields	goto 114

	.	reduce by rule 55


state 99:

	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . LT exp 
	comparison : exp . LE exp 
	comparison : exp . GT exp 
	comparison : exp . GE exp 
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	boolcomp : exp . AND exp 
	boolcomp : exp . OR exp 
	forloop : FOR ID ASSIGN exp . TO exp DO exp 

	PLUS	shift 42
	MINUS	shift 41
	TIMES	shift 40
	DIVIDE	shift 39
	EQ	shift 38
	NEQ	shift 37
	LT	shift 36
	LE	shift 35
	GT	shift 34
	GE	shift 33
	AND	shift 32
	OR	shift 31
	TO	shift 116


	.	error


state 100:

	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . LT exp 
	comparison : exp . LE exp 
	comparison : exp . GT exp 
	comparison : exp . GE exp 
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	boolcomp : exp . AND exp 
	boolcomp : exp . OR exp 
	while : WHILE exp DO exp .  (reduce by rule 72)

	PLUS	shift 42
	MINUS	shift 41
	TIMES	shift 40
	DIVIDE	shift 39
	EQ	shift 38
	NEQ	shift 37
	LT	shift 36
	LE	shift 35
	GT	shift 34
	GE	shift 33
	AND	shift 32
	OR	shift 31


	.	reduce by rule 72


state 101:

	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . LT exp 
	comparison : exp . LE exp 
	comparison : exp . GT exp 
	comparison : exp . GE exp 
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	boolcomp : exp . AND exp 
	boolcomp : exp . OR exp 
	ifThenElse : IF exp THEN exp . ELSE exp 
	ifThen : IF exp THEN exp .  (reduce by rule 71)

	PLUS	shift 42
	MINUS	shift 41
	TIMES	shift 40
	DIVIDE	shift 39
	EQ	shift 38
	NEQ	shift 37
	LT	shift 36
	LE	shift 35
	GT	shift 34
	GE	shift 33
	AND	shift 32
	OR	shift 31
	ELSE	shift 117


	.	reduce by rule 71


state 102:

	expP : exp SEMICOLON expP .  (reduce by rule 21)



	.	reduce by rule 21


state 103:

	record : ID LBRACE ID EQ . exp recP RBRACE 

	ID	shift 27
	INT	shift 26
	STRING	shift 25
	LPAREN	shift 24
	MINUS	shift 23
	IF	shift 22
	WHILE	shift 21
	FOR	shift 20
	LET	shift 19
	BREAK	shift 18
	NIL	shift 17

	exp	goto 118
	lvalue	goto 15
	unit	goto 14
	negation	goto 13
	comparison	goto 12
	arithmetic	goto 11
	boolcomp	goto 10
	record	goto 9
	array	goto 8
	assignment	goto 7
	ifThenElse	goto 6
	ifThen	goto 5
	let	goto 4
	while	goto 3
	forloop	goto 2
	lval	goto 1

	.	error


state 104:

	array : ID LBRACK exp RBRACK . OF exp 
	lval : ID LBRACK exp RBRACK .  (reduce by rule 67)

	OF	shift 119


	.	reduce by rule 67


state 105:

	exp : ID LPAREN args RPAREN .  (reduce by rule 19)



	.	reduce by rule 19


state 106:

	args : exp COMMA . args 

	ID	shift 27
	INT	shift 26
	STRING	shift 25
	LPAREN	shift 24
	MINUS	shift 23
	IF	shift 22
	WHILE	shift 21
	FOR	shift 20
	LET	shift 19
	BREAK	shift 18
	NIL	shift 17

	exp	goto 91
	lvalue	goto 15
	unit	goto 14
	negation	goto 13
	comparison	goto 12
	arithmetic	goto 11
	boolcomp	goto 10
	record	goto 9
	array	goto 8
	assignment	goto 7
	ifThenElse	goto 6
	ifThen	goto 5
	let	goto 4
	args	goto 120
	while	goto 3
	forloop	goto 2
	lval	goto 1

	.	reduce by rule 27


state 107:

	let : LET decs IN expseq END .  (reduce by rule 74)



	.	reduce by rule 74


state 108:

	tydec : TYPE ID EQ ty .  (reduce by rule 51)



	.	reduce by rule 51


state 109:

	ty : ARRAY . OF ID 

	OF	shift 121


	.	error


state 110:

	ty : LBRACE . tyfields RBRACE 

	ID	shift 115

	tyfields	goto 122

	.	reduce by rule 55


state 111:

	ty : ID .  (reduce by rule 52)



	.	reduce by rule 52


state 112:

	vardec : VAR ID ASSIGN exp .  (reduce by rule 59)
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . LT exp 
	comparison : exp . LE exp 
	comparison : exp . GT exp 
	comparison : exp . GE exp 
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	boolcomp : exp . AND exp 
	boolcomp : exp . OR exp 

	PLUS	shift 42
	MINUS	shift 41
	TIMES	shift 40
	DIVIDE	shift 39
	EQ	shift 38
	NEQ	shift 37
	LT	shift 36
	LE	shift 35
	GT	shift 34
	GE	shift 33
	AND	shift 32
	OR	shift 31


	.	reduce by rule 59


state 113:

	vardec : VAR ID COLON ID . ASSIGN exp 

	ASSIGN	shift 123


	.	error


state 114:

	fundec : FUNCTION ID LPAREN tyfields . RPAREN EQ exp 
	fundec : FUNCTION ID LPAREN tyfields . RPAREN COLON ID EQ exp 

	RPAREN	shift 124


	.	error


state 115:

	tyfields : ID . COLON ID tyfieldsP 

	COLON	shift 125


	.	error


state 116:

	forloop : FOR ID ASSIGN exp TO . exp DO exp 

	ID	shift 27
	INT	shift 26
	STRING	shift 25
	LPAREN	shift 24
	MINUS	shift 23
	IF	shift 22
	WHILE	shift 21
	FOR	shift 20
	LET	shift 19
	BREAK	shift 18
	NIL	shift 17

	exp	goto 126
	lvalue	goto 15
	unit	goto 14
	negation	goto 13
	comparison	goto 12
	arithmetic	goto 11
	boolcomp	goto 10
	record	goto 9
	array	goto 8
	assignment	goto 7
	ifThenElse	goto 6
	ifThen	goto 5
	let	goto 4
	while	goto 3
	forloop	goto 2
	lval	goto 1

	.	error


state 117:

	ifThenElse : IF exp THEN exp ELSE . exp 

	ID	shift 27
	INT	shift 26
	STRING	shift 25
	LPAREN	shift 24
	MINUS	shift 23
	IF	shift 22
	WHILE	shift 21
	FOR	shift 20
	LET	shift 19
	BREAK	shift 18
	NIL	shift 17

	exp	goto 127
	lvalue	goto 15
	unit	goto 14
	negation	goto 13
	comparison	goto 12
	arithmetic	goto 11
	boolcomp	goto 10
	record	goto 9
	array	goto 8
	assignment	goto 7
	ifThenElse	goto 6
	ifThen	goto 5
	let	goto 4
	while	goto 3
	forloop	goto 2
	lval	goto 1

	.	error


state 118:

	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . LT exp 
	comparison : exp . LE exp 
	comparison : exp . GT exp 
	comparison : exp . GE exp 
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	boolcomp : exp . AND exp 
	boolcomp : exp . OR exp 
	record : ID LBRACE ID EQ exp . recP RBRACE 

	COMMA	shift 129
	PLUS	shift 42
	MINUS	shift 41
	TIMES	shift 40
	DIVIDE	shift 39
	EQ	shift 38
	NEQ	shift 37
	LT	shift 36
	LE	shift 35
	GT	shift 34
	GE	shift 33
	AND	shift 32
	OR	shift 31

	recP	goto 128

	.	reduce by rule 44


state 119:

	array : ID LBRACK exp RBRACK OF . exp 

	ID	shift 27
	INT	shift 26
	STRING	shift 25
	LPAREN	shift 24
	MINUS	shift 23
	IF	shift 22
	WHILE	shift 21
	FOR	shift 20
	LET	shift 19
	BREAK	shift 18
	NIL	shift 17

	exp	goto 130
	lvalue	goto 15
	unit	goto 14
	negation	goto 13
	comparison	goto 12
	arithmetic	goto 11
	boolcomp	goto 10
	record	goto 9
	array	goto 8
	assignment	goto 7
	ifThenElse	goto 6
	ifThen	goto 5
	let	goto 4
	while	goto 3
	forloop	goto 2
	lval	goto 1

	.	error


state 120:

	args : exp COMMA args .  (reduce by rule 25)



	.	reduce by rule 25


state 121:

	ty : ARRAY OF . ID 

	ID	shift 131


	.	error


state 122:

	ty : LBRACE tyfields . RBRACE 

	RBRACE	shift 132


	.	error


state 123:

	vardec : VAR ID COLON ID ASSIGN . exp 

	ID	shift 27
	INT	shift 26
	STRING	shift 25
	LPAREN	shift 24
	MINUS	shift 23
	IF	shift 22
	WHILE	shift 21
	FOR	shift 20
	LET	shift 19
	BREAK	shift 18
	NIL	shift 17

	exp	goto 133
	lvalue	goto 15
	unit	goto 14
	negation	goto 13
	comparison	goto 12
	arithmetic	goto 11
	boolcomp	goto 10
	record	goto 9
	array	goto 8
	assignment	goto 7
	ifThenElse	goto 6
	ifThen	goto 5
	let	goto 4
	while	goto 3
	forloop	goto 2
	lval	goto 1

	.	error


state 124:

	fundec : FUNCTION ID LPAREN tyfields RPAREN . EQ exp 
	fundec : FUNCTION ID LPAREN tyfields RPAREN . COLON ID EQ exp 

	COLON	shift 135
	EQ	shift 134


	.	error


state 125:

	tyfields : ID COLON . ID tyfieldsP 

	ID	shift 136


	.	error


state 126:

	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . LT exp 
	comparison : exp . LE exp 
	comparison : exp . GT exp 
	comparison : exp . GE exp 
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	boolcomp : exp . AND exp 
	boolcomp : exp . OR exp 
	forloop : FOR ID ASSIGN exp TO exp . DO exp 

	PLUS	shift 42
	MINUS	shift 41
	TIMES	shift 40
	DIVIDE	shift 39
	EQ	shift 38
	NEQ	shift 37
	LT	shift 36
	LE	shift 35
	GT	shift 34
	GE	shift 33
	AND	shift 32
	OR	shift 31
	DO	shift 137


	.	error


state 127:

	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . LT exp 
	comparison : exp . LE exp 
	comparison : exp . GT exp 
	comparison : exp . GE exp 
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	boolcomp : exp . AND exp 
	boolcomp : exp . OR exp 
	ifThenElse : IF exp THEN exp ELSE exp .  (reduce by rule 70)

	PLUS	shift 42
	MINUS	shift 41
	TIMES	shift 40
	DIVIDE	shift 39
	EQ	shift 38
	NEQ	shift 37
	LT	shift 36
	LE	shift 35
	GT	shift 34
	GE	shift 33
	AND	shift 32
	OR	shift 31


	.	reduce by rule 70


state 128:

	record : ID LBRACE ID EQ exp recP . RBRACE 

	RBRACE	shift 138


	.	error


state 129:

	recP : COMMA . ID EQ exp recP 

	ID	shift 139


	.	error


state 130:

	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . LT exp 
	comparison : exp . LE exp 
	comparison : exp . GT exp 
	comparison : exp . GE exp 
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	boolcomp : exp . AND exp 
	boolcomp : exp . OR exp 
	array : ID LBRACK exp RBRACK OF exp .  (reduce by rule 45)

	PLUS	shift 42
	MINUS	shift 41
	TIMES	shift 40
	DIVIDE	shift 39
	EQ	shift 38
	NEQ	shift 37
	LT	shift 36
	LE	shift 35
	GT	shift 34
	GE	shift 33
	AND	shift 32
	OR	shift 31


	.	reduce by rule 45


state 131:

	ty : ARRAY OF ID .  (reduce by rule 54)



	.	reduce by rule 54


state 132:

	ty : LBRACE tyfields RBRACE .  (reduce by rule 53)



	.	reduce by rule 53


state 133:

	vardec : VAR ID COLON ID ASSIGN exp .  (reduce by rule 60)
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . LT exp 
	comparison : exp . LE exp 
	comparison : exp . GT exp 
	comparison : exp . GE exp 
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	boolcomp : exp . AND exp 
	boolcomp : exp . OR exp 

	PLUS	shift 42
	MINUS	shift 41
	TIMES	shift 40
	DIVIDE	shift 39
	EQ	shift 38
	NEQ	shift 37
	LT	shift 36
	LE	shift 35
	GT	shift 34
	GE	shift 33
	AND	shift 32
	OR	shift 31


	.	reduce by rule 60


state 134:

	fundec : FUNCTION ID LPAREN tyfields RPAREN EQ . exp 

	ID	shift 27
	INT	shift 26
	STRING	shift 25
	LPAREN	shift 24
	MINUS	shift 23
	IF	shift 22
	WHILE	shift 21
	FOR	shift 20
	LET	shift 19
	BREAK	shift 18
	NIL	shift 17

	exp	goto 140
	lvalue	goto 15
	unit	goto 14
	negation	goto 13
	comparison	goto 12
	arithmetic	goto 11
	boolcomp	goto 10
	record	goto 9
	array	goto 8
	assignment	goto 7
	ifThenElse	goto 6
	ifThen	goto 5
	let	goto 4
	while	goto 3
	forloop	goto 2
	lval	goto 1

	.	error


state 135:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON . ID EQ exp 

	ID	shift 141


	.	error


state 136:

	tyfields : ID COLON ID . tyfieldsP 

	COMMA	shift 143

	tyfieldsP	goto 142

	.	reduce by rule 57


state 137:

	forloop : FOR ID ASSIGN exp TO exp DO . exp 

	ID	shift 27
	INT	shift 26
	STRING	shift 25
	LPAREN	shift 24
	MINUS	shift 23
	IF	shift 22
	WHILE	shift 21
	FOR	shift 20
	LET	shift 19
	BREAK	shift 18
	NIL	shift 17

	exp	goto 144
	lvalue	goto 15
	unit	goto 14
	negation	goto 13
	comparison	goto 12
	arithmetic	goto 11
	boolcomp	goto 10
	record	goto 9
	array	goto 8
	assignment	goto 7
	ifThenElse	goto 6
	ifThen	goto 5
	let	goto 4
	while	goto 3
	forloop	goto 2
	lval	goto 1

	.	error


state 138:

	record : ID LBRACE ID EQ exp recP RBRACE .  (reduce by rule 42)



	.	reduce by rule 42


state 139:

	recP : COMMA ID . EQ exp recP 

	EQ	shift 145


	.	error


state 140:

	fundec : FUNCTION ID LPAREN tyfields RPAREN EQ exp .  (reduce by rule 61)
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . LT exp 
	comparison : exp . LE exp 
	comparison : exp . GT exp 
	comparison : exp . GE exp 
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	boolcomp : exp . AND exp 
	boolcomp : exp . OR exp 

	PLUS	shift 42
	MINUS	shift 41
	TIMES	shift 40
	DIVIDE	shift 39
	EQ	shift 38
	NEQ	shift 37
	LT	shift 36
	LE	shift 35
	GT	shift 34
	GE	shift 33
	AND	shift 32
	OR	shift 31


	.	reduce by rule 61


state 141:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID . EQ exp 

	EQ	shift 146


	.	error


state 142:

	tyfields : ID COLON ID tyfieldsP .  (reduce by rule 56)



	.	reduce by rule 56


state 143:

	tyfieldsP : COMMA . ID COLON ID tyfieldsP 

	ID	shift 147


	.	error


state 144:

	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . LT exp 
	comparison : exp . LE exp 
	comparison : exp . GT exp 
	comparison : exp . GE exp 
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	boolcomp : exp . AND exp 
	boolcomp : exp . OR exp 
	forloop : FOR ID ASSIGN exp TO exp DO exp .  (reduce by rule 73)

	PLUS	shift 42
	MINUS	shift 41
	TIMES	shift 40
	DIVIDE	shift 39
	EQ	shift 38
	NEQ	shift 37
	LT	shift 36
	LE	shift 35
	GT	shift 34
	GE	shift 33
	AND	shift 32
	OR	shift 31


	.	reduce by rule 73


state 145:

	recP : COMMA ID EQ . exp recP 

	ID	shift 27
	INT	shift 26
	STRING	shift 25
	LPAREN	shift 24
	MINUS	shift 23
	IF	shift 22
	WHILE	shift 21
	FOR	shift 20
	LET	shift 19
	BREAK	shift 18
	NIL	shift 17

	exp	goto 148
	lvalue	goto 15
	unit	goto 14
	negation	goto 13
	comparison	goto 12
	arithmetic	goto 11
	boolcomp	goto 10
	record	goto 9
	array	goto 8
	assignment	goto 7
	ifThenElse	goto 6
	ifThen	goto 5
	let	goto 4
	while	goto 3
	forloop	goto 2
	lval	goto 1

	.	error


state 146:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ . exp 

	ID	shift 27
	INT	shift 26
	STRING	shift 25
	LPAREN	shift 24
	MINUS	shift 23
	IF	shift 22
	WHILE	shift 21
	FOR	shift 20
	LET	shift 19
	BREAK	shift 18
	NIL	shift 17

	exp	goto 149
	lvalue	goto 15
	unit	goto 14
	negation	goto 13
	comparison	goto 12
	arithmetic	goto 11
	boolcomp	goto 10
	record	goto 9
	array	goto 8
	assignment	goto 7
	ifThenElse	goto 6
	ifThen	goto 5
	let	goto 4
	while	goto 3
	forloop	goto 2
	lval	goto 1

	.	error


state 147:

	tyfieldsP : COMMA ID . COLON ID tyfieldsP 

	COLON	shift 150


	.	error


state 148:

	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . LT exp 
	comparison : exp . LE exp 
	comparison : exp . GT exp 
	comparison : exp . GE exp 
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	boolcomp : exp . AND exp 
	boolcomp : exp . OR exp 
	recP : COMMA ID EQ exp . recP 

	COMMA	shift 129
	PLUS	shift 42
	MINUS	shift 41
	TIMES	shift 40
	DIVIDE	shift 39
	EQ	shift 38
	NEQ	shift 37
	LT	shift 36
	LE	shift 35
	GT	shift 34
	GE	shift 33
	AND	shift 32
	OR	shift 31

	recP	goto 151

	.	reduce by rule 44


state 149:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp .  (reduce by rule 62)
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . LT exp 
	comparison : exp . LE exp 
	comparison : exp . GT exp 
	comparison : exp . GE exp 
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	boolcomp : exp . AND exp 
	boolcomp : exp . OR exp 

	PLUS	shift 42
	MINUS	shift 41
	TIMES	shift 40
	DIVIDE	shift 39
	EQ	shift 38
	NEQ	shift 37
	LT	shift 36
	LE	shift 35
	GT	shift 34
	GE	shift 33
	AND	shift 32
	OR	shift 31


	.	reduce by rule 62


state 150:

	tyfieldsP : COMMA ID COLON . ID tyfieldsP 

	ID	shift 152


	.	error


state 151:

	recP : COMMA ID EQ exp recP .  (reduce by rule 43)



	.	reduce by rule 43


state 152:

	tyfieldsP : COMMA ID COLON ID . tyfieldsP 

	COMMA	shift 143

	tyfieldsP	goto 153

	.	reduce by rule 57


state 153:

	tyfieldsP : COMMA ID COLON ID tyfieldsP .  (reduce by rule 58)



	.	reduce by rule 58


state 154:


	EOF	accept


	.	error

502 of 1035 action table entries left after compaction
616 goto table entries
