36 shift/reduce conflicts

error:  state 68: shift/reduce conflict (shift OR, reduce by rule 27)
error:  state 68: shift/reduce conflict (shift AND, reduce by rule 27)
error:  state 68: shift/reduce conflict (shift GE, reduce by rule 27)
error:  state 68: shift/reduce conflict (shift GT, reduce by rule 27)
error:  state 68: shift/reduce conflict (shift LE, reduce by rule 27)
error:  state 68: shift/reduce conflict (shift LT, reduce by rule 27)
error:  state 68: shift/reduce conflict (shift NEQ, reduce by rule 27)
error:  state 68: shift/reduce conflict (shift EQ, reduce by rule 27)
error:  state 68: shift/reduce conflict (shift DIVIDE, reduce by rule 27)
error:  state 68: shift/reduce conflict (shift TIMES, reduce by rule 27)
error:  state 68: shift/reduce conflict (shift MINUS, reduce by rule 27)
error:  state 68: shift/reduce conflict (shift PLUS, reduce by rule 27)
error:  state 69: shift/reduce conflict (shift OR, reduce by rule 28)
error:  state 69: shift/reduce conflict (shift AND, reduce by rule 28)
error:  state 69: shift/reduce conflict (shift GE, reduce by rule 28)
error:  state 69: shift/reduce conflict (shift GT, reduce by rule 28)
error:  state 69: shift/reduce conflict (shift LE, reduce by rule 28)
error:  state 69: shift/reduce conflict (shift LT, reduce by rule 28)
error:  state 69: shift/reduce conflict (shift NEQ, reduce by rule 28)
error:  state 69: shift/reduce conflict (shift EQ, reduce by rule 28)
error:  state 69: shift/reduce conflict (shift DIVIDE, reduce by rule 28)
error:  state 69: shift/reduce conflict (shift TIMES, reduce by rule 28)
error:  state 69: shift/reduce conflict (shift MINUS, reduce by rule 28)
error:  state 69: shift/reduce conflict (shift PLUS, reduce by rule 28)
error:  state 70: shift/reduce conflict (shift OR, reduce by rule 29)
error:  state 70: shift/reduce conflict (shift AND, reduce by rule 29)
error:  state 70: shift/reduce conflict (shift GE, reduce by rule 29)
error:  state 70: shift/reduce conflict (shift GT, reduce by rule 29)
error:  state 70: shift/reduce conflict (shift LE, reduce by rule 29)
error:  state 70: shift/reduce conflict (shift LT, reduce by rule 29)
error:  state 70: shift/reduce conflict (shift NEQ, reduce by rule 29)
error:  state 70: shift/reduce conflict (shift EQ, reduce by rule 29)
error:  state 70: shift/reduce conflict (shift DIVIDE, reduce by rule 29)
error:  state 70: shift/reduce conflict (shift TIMES, reduce by rule 29)
error:  state 70: shift/reduce conflict (shift MINUS, reduce by rule 29)
error:  state 70: shift/reduce conflict (shift PLUS, reduce by rule 29)

state 0:

	program : . exp 

	ID	shift 27
	INT	shift 26
	STRING	shift 25
	LPAREN	shift 24
	MINUS	shift 23
	IF	shift 22
	WHILE	shift 21
	FOR	shift 20
	LET	shift 19
	BREAK	shift 18
	NIL	shift 17

	exp	goto 16
	program	goto 148
	lvalue	goto 15
	unit	goto 14
	negation	goto 13
	comparison	goto 12
	arithmetic	goto 11
	boolcomp	goto 10
	record	goto 9
	array	goto 8
	assignment	goto 7
	ifThenElse	goto 6
	ifThen	goto 5
	let	goto 4
	while	goto 3
	forloop	goto 2
	lval	goto 1

	.	error


state 1:

	lvalue : lval .  (reduce by rule 66)
	lval : lval . DOT ID 
	lval : lval . LBRACK exp RBRACK 

	LBRACK	shift 29
	DOT	shift 28


	.	reduce by rule 66


state 2:

	exp : forloop .  (reduce by rule 16)



	.	reduce by rule 16


state 3:

	exp : while .  (reduce by rule 15)



	.	reduce by rule 15


state 4:

	exp : let .  (reduce by rule 20)



	.	reduce by rule 20


state 5:

	exp : ifThen .  (reduce by rule 14)



	.	reduce by rule 14


state 6:

	exp : ifThenElse .  (reduce by rule 13)



	.	reduce by rule 13


state 7:

	exp : assignment .  (reduce by rule 12)



	.	reduce by rule 12


state 8:

	exp : array .  (reduce by rule 11)



	.	reduce by rule 11


state 9:

	exp : record .  (reduce by rule 10)



	.	reduce by rule 10


state 10:

	exp : boolcomp .  (reduce by rule 9)



	.	reduce by rule 9


state 11:

	exp : arithmetic .  (reduce by rule 7)



	.	reduce by rule 7


state 12:

	exp : comparison .  (reduce by rule 8)



	.	reduce by rule 8


state 13:

	exp : negation .  (reduce by rule 6)



	.	reduce by rule 6


state 14:

	exp : unit .  (reduce by rule 18)



	.	reduce by rule 18


state 15:

	exp : lvalue .  (reduce by rule 3)
	assignment : lvalue . ASSIGN exp 

	ASSIGN	shift 30


	.	reduce by rule 3


state 16:

	program : exp .  (reduce by rule 0)
	comparison : exp . comp exp 
	arithmetic : exp . op exp 
	boolcomp : exp . bool exp 

	PLUS	shift 45
	MINUS	shift 44
	TIMES	shift 43
	DIVIDE	shift 42
	EQ	shift 41
	NEQ	shift 40
	LT	shift 39
	LE	shift 38
	GT	shift 37
	GE	shift 36
	AND	shift 35
	OR	shift 34

	bool	goto 33
	comp	goto 32
	op	goto 31

	.	reduce by rule 0


state 17:

	exp : NIL .  (reduce by rule 1)



	.	reduce by rule 1


state 18:

	exp : BREAK .  (reduce by rule 17)



	.	reduce by rule 17


state 19:

	let : LET . decs IN expseq END 

	FUNCTION	shift 53
	VAR	shift 52
	TYPE	shift 51

	decs	goto 50
	dec	goto 49
	tydec	goto 48
	vardec	goto 47
	fundec	goto 46

	.	error


state 20:

	forloop : FOR . ID ASSIGN exp TO exp DO exp 

	ID	shift 54


	.	error


state 21:

	while : WHILE . exp DO exp 

	ID	shift 27
	INT	shift 26
	STRING	shift 25
	LPAREN	shift 24
	MINUS	shift 23
	IF	shift 22
	WHILE	shift 21
	FOR	shift 20
	LET	shift 19
	BREAK	shift 18
	NIL	shift 17

	exp	goto 55
	lvalue	goto 15
	unit	goto 14
	negation	goto 13
	comparison	goto 12
	arithmetic	goto 11
	boolcomp	goto 10
	record	goto 9
	array	goto 8
	assignment	goto 7
	ifThenElse	goto 6
	ifThen	goto 5
	let	goto 4
	while	goto 3
	forloop	goto 2
	lval	goto 1

	.	error


state 22:

	ifThenElse : IF . exp THEN exp ELSE exp 
	ifThen : IF . exp THEN exp 

	ID	shift 27
	INT	shift 26
	STRING	shift 25
	LPAREN	shift 24
	MINUS	shift 23
	IF	shift 22
	WHILE	shift 21
	FOR	shift 20
	LET	shift 19
	BREAK	shift 18
	NIL	shift 17

	exp	goto 56
	lvalue	goto 15
	unit	goto 14
	negation	goto 13
	comparison	goto 12
	arithmetic	goto 11
	boolcomp	goto 10
	record	goto 9
	array	goto 8
	assignment	goto 7
	ifThenElse	goto 6
	ifThen	goto 5
	let	goto 4
	while	goto 3
	forloop	goto 2
	lval	goto 1

	.	error


state 23:

	negation : MINUS . exp 

	ID	shift 27
	INT	shift 26
	STRING	shift 25
	LPAREN	shift 24
	MINUS	shift 23
	IF	shift 22
	WHILE	shift 21
	FOR	shift 20
	LET	shift 19
	BREAK	shift 18
	NIL	shift 17

	exp	goto 57
	lvalue	goto 15
	unit	goto 14
	negation	goto 13
	comparison	goto 12
	arithmetic	goto 11
	boolcomp	goto 10
	record	goto 9
	array	goto 8
	assignment	goto 7
	ifThenElse	goto 6
	ifThen	goto 5
	let	goto 4
	while	goto 3
	forloop	goto 2
	lval	goto 1

	.	error


state 24:

	exp : LPAREN . expP RPAREN 
	unit : LPAREN . RPAREN 

	ID	shift 27
	INT	shift 26
	STRING	shift 25
	LPAREN	shift 24
	RPAREN	shift 60
	MINUS	shift 23
	IF	shift 22
	WHILE	shift 21
	FOR	shift 20
	LET	shift 19
	BREAK	shift 18
	NIL	shift 17

	exp	goto 59
	lvalue	goto 15
	unit	goto 14
	negation	goto 13
	comparison	goto 12
	arithmetic	goto 11
	boolcomp	goto 10
	expP	goto 58
	record	goto 9
	array	goto 8
	assignment	goto 7
	ifThenElse	goto 6
	ifThen	goto 5
	let	goto 4
	while	goto 3
	forloop	goto 2
	lval	goto 1

	.	error


state 25:

	exp : STRING .  (reduce by rule 5)



	.	reduce by rule 5


state 26:

	exp : INT .  (reduce by rule 4)



	.	reduce by rule 4


state 27:

	exp : ID . LPAREN args RPAREN 
	lvalue : ID .  (reduce by rule 65)
	record : ID . LBRACE ID EQ exp recP RBRACE 
	array : ID . LBRACK exp RBRACK OF exp 
	lval : ID . DOT ID 
	lval : ID . LBRACK exp RBRACK 

	LPAREN	shift 64
	LBRACK	shift 63
	LBRACE	shift 62
	DOT	shift 61


	.	reduce by rule 65


state 28:

	lval : lval DOT . ID 

	ID	shift 65


	.	error


state 29:

	lval : lval LBRACK . exp RBRACK 

	ID	shift 27
	INT	shift 26
	STRING	shift 25
	LPAREN	shift 24
	MINUS	shift 23
	IF	shift 22
	WHILE	shift 21
	FOR	shift 20
	LET	shift 19
	BREAK	shift 18
	NIL	shift 17

	exp	goto 66
	lvalue	goto 15
	unit	goto 14
	negation	goto 13
	comparison	goto 12
	arithmetic	goto 11
	boolcomp	goto 10
	record	goto 9
	array	goto 8
	assignment	goto 7
	ifThenElse	goto 6
	ifThen	goto 5
	let	goto 4
	while	goto 3
	forloop	goto 2
	lval	goto 1

	.	error


state 30:

	assignment : lvalue ASSIGN . exp 

	ID	shift 27
	INT	shift 26
	STRING	shift 25
	LPAREN	shift 24
	MINUS	shift 23
	IF	shift 22
	WHILE	shift 21
	FOR	shift 20
	LET	shift 19
	BREAK	shift 18
	NIL	shift 17

	exp	goto 67
	lvalue	goto 15
	unit	goto 14
	negation	goto 13
	comparison	goto 12
	arithmetic	goto 11
	boolcomp	goto 10
	record	goto 9
	array	goto 8
	assignment	goto 7
	ifThenElse	goto 6
	ifThen	goto 5
	let	goto 4
	while	goto 3
	forloop	goto 2
	lval	goto 1

	.	error


state 31:

	arithmetic : exp op . exp 

	ID	shift 27
	INT	shift 26
	STRING	shift 25
	LPAREN	shift 24
	MINUS	shift 23
	IF	shift 22
	WHILE	shift 21
	FOR	shift 20
	LET	shift 19
	BREAK	shift 18
	NIL	shift 17

	exp	goto 68
	lvalue	goto 15
	unit	goto 14
	negation	goto 13
	comparison	goto 12
	arithmetic	goto 11
	boolcomp	goto 10
	record	goto 9
	array	goto 8
	assignment	goto 7
	ifThenElse	goto 6
	ifThen	goto 5
	let	goto 4
	while	goto 3
	forloop	goto 2
	lval	goto 1

	.	error


state 32:

	comparison : exp comp . exp 

	ID	shift 27
	INT	shift 26
	STRING	shift 25
	LPAREN	shift 24
	MINUS	shift 23
	IF	shift 22
	WHILE	shift 21
	FOR	shift 20
	LET	shift 19
	BREAK	shift 18
	NIL	shift 17

	exp	goto 69
	lvalue	goto 15
	unit	goto 14
	negation	goto 13
	comparison	goto 12
	arithmetic	goto 11
	boolcomp	goto 10
	record	goto 9
	array	goto 8
	assignment	goto 7
	ifThenElse	goto 6
	ifThen	goto 5
	let	goto 4
	while	goto 3
	forloop	goto 2
	lval	goto 1

	.	error


state 33:

	boolcomp : exp bool . exp 

	ID	shift 27
	INT	shift 26
	STRING	shift 25
	LPAREN	shift 24
	MINUS	shift 23
	IF	shift 22
	WHILE	shift 21
	FOR	shift 20
	LET	shift 19
	BREAK	shift 18
	NIL	shift 17

	exp	goto 70
	lvalue	goto 15
	unit	goto 14
	negation	goto 13
	comparison	goto 12
	arithmetic	goto 11
	boolcomp	goto 10
	record	goto 9
	array	goto 8
	assignment	goto 7
	ifThenElse	goto 6
	ifThen	goto 5
	let	goto 4
	while	goto 3
	forloop	goto 2
	lval	goto 1

	.	error


state 34:

	bool : OR .  (reduce by rule 41)



	.	reduce by rule 41


state 35:

	bool : AND .  (reduce by rule 40)



	.	reduce by rule 40


state 36:

	comp : GE .  (reduce by rule 39)



	.	reduce by rule 39


state 37:

	comp : GT .  (reduce by rule 38)



	.	reduce by rule 38


state 38:

	comp : LE .  (reduce by rule 37)



	.	reduce by rule 37


state 39:

	comp : LT .  (reduce by rule 36)



	.	reduce by rule 36


state 40:

	comp : NEQ .  (reduce by rule 35)



	.	reduce by rule 35


state 41:

	comp : EQ .  (reduce by rule 34)



	.	reduce by rule 34


state 42:

	op : DIVIDE .  (reduce by rule 33)



	.	reduce by rule 33


state 43:

	op : TIMES .  (reduce by rule 32)



	.	reduce by rule 32


state 44:

	op : MINUS .  (reduce by rule 31)



	.	reduce by rule 31


state 45:

	op : PLUS .  (reduce by rule 30)



	.	reduce by rule 30


state 46:

	dec : fundec .  (reduce by rule 52)



	.	reduce by rule 52


state 47:

	dec : vardec .  (reduce by rule 51)



	.	reduce by rule 51


state 48:

	dec : tydec .  (reduce by rule 50)



	.	reduce by rule 50


state 49:

	decs : dec . decs 
	decs : dec .  (reduce by rule 49)

	FUNCTION	shift 53
	VAR	shift 52
	TYPE	shift 51

	decs	goto 71
	dec	goto 49
	tydec	goto 48
	vardec	goto 47
	fundec	goto 46

	.	reduce by rule 49


state 50:

	let : LET decs . IN expseq END 

	IN	shift 72


	.	error


state 51:

	tydec : TYPE . ID EQ ty 

	ID	shift 73


	.	error


state 52:

	vardec : VAR . ID ASSIGN exp 
	vardec : VAR . ID COLON ID ASSIGN exp 

	ID	shift 74


	.	error


state 53:

	fundec : FUNCTION . ID LPAREN tyfields RPAREN EQ exp 
	fundec : FUNCTION . ID LPAREN tyfields RPAREN COLON ID EQ exp 

	ID	shift 75


	.	error


state 54:

	forloop : FOR ID . ASSIGN exp TO exp DO exp 

	ASSIGN	shift 76


	.	error


state 55:

	comparison : exp . comp exp 
	arithmetic : exp . op exp 
	boolcomp : exp . bool exp 
	while : WHILE exp . DO exp 

	PLUS	shift 45
	MINUS	shift 44
	TIMES	shift 43
	DIVIDE	shift 42
	EQ	shift 41
	NEQ	shift 40
	LT	shift 39
	LE	shift 38
	GT	shift 37
	GE	shift 36
	AND	shift 35
	OR	shift 34
	DO	shift 77

	bool	goto 33
	comp	goto 32
	op	goto 31

	.	error


state 56:

	comparison : exp . comp exp 
	arithmetic : exp . op exp 
	boolcomp : exp . bool exp 
	ifThenElse : IF exp . THEN exp ELSE exp 
	ifThen : IF exp . THEN exp 

	PLUS	shift 45
	MINUS	shift 44
	TIMES	shift 43
	DIVIDE	shift 42
	EQ	shift 41
	NEQ	shift 40
	LT	shift 39
	LE	shift 38
	GT	shift 37
	GE	shift 36
	AND	shift 35
	OR	shift 34
	THEN	shift 78

	bool	goto 33
	comp	goto 32
	op	goto 31

	.	error


state 57:

	negation : MINUS exp .  (reduce by rule 42)
	comparison : exp . comp exp 
	arithmetic : exp . op exp 
	boolcomp : exp . bool exp 

	TIMES	shift 43
	DIVIDE	shift 42

	bool	goto 33
	comp	goto 32
	op	goto 31

	.	reduce by rule 42


state 58:

	exp : LPAREN expP . RPAREN 

	RPAREN	shift 79


	.	error


state 59:

	comparison : exp . comp exp 
	arithmetic : exp . op exp 
	boolcomp : exp . bool exp 
	expP : exp . SEMICOLON expP 
	expP : exp .  (reduce by rule 22)

	SEMICOLON	shift 80
	PLUS	shift 45
	MINUS	shift 44
	TIMES	shift 43
	DIVIDE	shift 42
	EQ	shift 41
	NEQ	shift 40
	LT	shift 39
	LE	shift 38
	GT	shift 37
	GE	shift 36
	AND	shift 35
	OR	shift 34

	bool	goto 33
	comp	goto 32
	op	goto 31

	.	reduce by rule 22


state 60:

	unit : LPAREN RPAREN .  (reduce by rule 43)



	.	reduce by rule 43


state 61:

	lval : ID DOT . ID 

	ID	shift 81


	.	error


state 62:

	record : ID LBRACE . ID EQ exp recP RBRACE 

	ID	shift 82


	.	error


state 63:

	array : ID LBRACK . exp RBRACK OF exp 
	lval : ID LBRACK . exp RBRACK 

	ID	shift 27
	INT	shift 26
	STRING	shift 25
	LPAREN	shift 24
	MINUS	shift 23
	IF	shift 22
	WHILE	shift 21
	FOR	shift 20
	LET	shift 19
	BREAK	shift 18
	NIL	shift 17

	exp	goto 83
	lvalue	goto 15
	unit	goto 14
	negation	goto 13
	comparison	goto 12
	arithmetic	goto 11
	boolcomp	goto 10
	record	goto 9
	array	goto 8
	assignment	goto 7
	ifThenElse	goto 6
	ifThen	goto 5
	let	goto 4
	while	goto 3
	forloop	goto 2
	lval	goto 1

	.	error


state 64:

	exp : ID LPAREN . args RPAREN 

	ID	shift 27
	INT	shift 26
	STRING	shift 25
	LPAREN	shift 24
	MINUS	shift 23
	IF	shift 22
	WHILE	shift 21
	FOR	shift 20
	LET	shift 19
	BREAK	shift 18
	NIL	shift 17

	exp	goto 85
	lvalue	goto 15
	unit	goto 14
	negation	goto 13
	comparison	goto 12
	arithmetic	goto 11
	boolcomp	goto 10
	record	goto 9
	array	goto 8
	assignment	goto 7
	ifThenElse	goto 6
	ifThen	goto 5
	let	goto 4
	args	goto 84
	while	goto 3
	forloop	goto 2
	lval	goto 1

	.	error


state 65:

	lval : lval DOT ID .  (reduce by rule 68)



	.	reduce by rule 68


state 66:

	comparison : exp . comp exp 
	arithmetic : exp . op exp 
	boolcomp : exp . bool exp 
	lval : lval LBRACK exp . RBRACK 

	RBRACK	shift 86
	PLUS	shift 45
	MINUS	shift 44
	TIMES	shift 43
	DIVIDE	shift 42
	EQ	shift 41
	NEQ	shift 40
	LT	shift 39
	LE	shift 38
	GT	shift 37
	GE	shift 36
	AND	shift 35
	OR	shift 34

	bool	goto 33
	comp	goto 32
	op	goto 31

	.	error


state 67:

	comparison : exp . comp exp 
	arithmetic : exp . op exp 
	boolcomp : exp . bool exp 
	assignment : lvalue ASSIGN exp .  (reduce by rule 71)

	PLUS	shift 45
	MINUS	shift 44
	TIMES	shift 43
	DIVIDE	shift 42
	EQ	shift 41
	NEQ	shift 40
	LT	shift 39
	LE	shift 38
	GT	shift 37
	GE	shift 36
	AND	shift 35
	OR	shift 34

	bool	goto 33
	comp	goto 32
	op	goto 31

	.	reduce by rule 71

error:  state 68: shift/reduce conflict (shift OR, reduce by rule 27)
error:  state 68: shift/reduce conflict (shift AND, reduce by rule 27)
error:  state 68: shift/reduce conflict (shift GE, reduce by rule 27)
error:  state 68: shift/reduce conflict (shift GT, reduce by rule 27)
error:  state 68: shift/reduce conflict (shift LE, reduce by rule 27)
error:  state 68: shift/reduce conflict (shift LT, reduce by rule 27)
error:  state 68: shift/reduce conflict (shift NEQ, reduce by rule 27)
error:  state 68: shift/reduce conflict (shift EQ, reduce by rule 27)
error:  state 68: shift/reduce conflict (shift DIVIDE, reduce by rule 27)
error:  state 68: shift/reduce conflict (shift TIMES, reduce by rule 27)
error:  state 68: shift/reduce conflict (shift MINUS, reduce by rule 27)
error:  state 68: shift/reduce conflict (shift PLUS, reduce by rule 27)

state 68:

	comparison : exp . comp exp 
	arithmetic : exp . op exp 
	arithmetic : exp op exp .  (reduce by rule 27)
	boolcomp : exp . bool exp 

	PLUS	shift 45
	MINUS	shift 44
	TIMES	shift 43
	DIVIDE	shift 42
	EQ	shift 41
	NEQ	shift 40
	LT	shift 39
	LE	shift 38
	GT	shift 37
	GE	shift 36
	AND	shift 35
	OR	shift 34

	bool	goto 33
	comp	goto 32
	op	goto 31

	.	reduce by rule 27

error:  state 69: shift/reduce conflict (shift OR, reduce by rule 28)
error:  state 69: shift/reduce conflict (shift AND, reduce by rule 28)
error:  state 69: shift/reduce conflict (shift GE, reduce by rule 28)
error:  state 69: shift/reduce conflict (shift GT, reduce by rule 28)
error:  state 69: shift/reduce conflict (shift LE, reduce by rule 28)
error:  state 69: shift/reduce conflict (shift LT, reduce by rule 28)
error:  state 69: shift/reduce conflict (shift NEQ, reduce by rule 28)
error:  state 69: shift/reduce conflict (shift EQ, reduce by rule 28)
error:  state 69: shift/reduce conflict (shift DIVIDE, reduce by rule 28)
error:  state 69: shift/reduce conflict (shift TIMES, reduce by rule 28)
error:  state 69: shift/reduce conflict (shift MINUS, reduce by rule 28)
error:  state 69: shift/reduce conflict (shift PLUS, reduce by rule 28)

state 69:

	comparison : exp . comp exp 
	comparison : exp comp exp .  (reduce by rule 28)
	arithmetic : exp . op exp 
	boolcomp : exp . bool exp 

	PLUS	shift 45
	MINUS	shift 44
	TIMES	shift 43
	DIVIDE	shift 42
	EQ	shift 41
	NEQ	shift 40
	LT	shift 39
	LE	shift 38
	GT	shift 37
	GE	shift 36
	AND	shift 35
	OR	shift 34

	bool	goto 33
	comp	goto 32
	op	goto 31

	.	reduce by rule 28

error:  state 70: shift/reduce conflict (shift OR, reduce by rule 29)
error:  state 70: shift/reduce conflict (shift AND, reduce by rule 29)
error:  state 70: shift/reduce conflict (shift GE, reduce by rule 29)
error:  state 70: shift/reduce conflict (shift GT, reduce by rule 29)
error:  state 70: shift/reduce conflict (shift LE, reduce by rule 29)
error:  state 70: shift/reduce conflict (shift LT, reduce by rule 29)
error:  state 70: shift/reduce conflict (shift NEQ, reduce by rule 29)
error:  state 70: shift/reduce conflict (shift EQ, reduce by rule 29)
error:  state 70: shift/reduce conflict (shift DIVIDE, reduce by rule 29)
error:  state 70: shift/reduce conflict (shift TIMES, reduce by rule 29)
error:  state 70: shift/reduce conflict (shift MINUS, reduce by rule 29)
error:  state 70: shift/reduce conflict (shift PLUS, reduce by rule 29)

state 70:

	comparison : exp . comp exp 
	arithmetic : exp . op exp 
	boolcomp : exp . bool exp 
	boolcomp : exp bool exp .  (reduce by rule 29)

	PLUS	shift 45
	MINUS	shift 44
	TIMES	shift 43
	DIVIDE	shift 42
	EQ	shift 41
	NEQ	shift 40
	LT	shift 39
	LE	shift 38
	GT	shift 37
	GE	shift 36
	AND	shift 35
	OR	shift 34

	bool	goto 33
	comp	goto 32
	op	goto 31

	.	reduce by rule 29


state 71:

	decs : dec decs .  (reduce by rule 48)



	.	reduce by rule 48


state 72:

	let : LET decs IN . expseq END 

	ID	shift 27
	INT	shift 26
	STRING	shift 25
	LPAREN	shift 24
	MINUS	shift 23
	IF	shift 22
	WHILE	shift 21
	FOR	shift 20
	LET	shift 19
	BREAK	shift 18
	NIL	shift 17

	exp	goto 59
	lvalue	goto 15
	unit	goto 14
	negation	goto 13
	comparison	goto 12
	arithmetic	goto 11
	boolcomp	goto 10
	expP	goto 88
	record	goto 9
	array	goto 8
	assignment	goto 7
	ifThenElse	goto 6
	ifThen	goto 5
	let	goto 4
	expseq	goto 87
	while	goto 3
	forloop	goto 2
	lval	goto 1

	.	reduce by rule 24


state 73:

	tydec : TYPE ID . EQ ty 

	EQ	shift 89


	.	error


state 74:

	vardec : VAR ID . ASSIGN exp 
	vardec : VAR ID . COLON ID ASSIGN exp 

	COLON	shift 91
	ASSIGN	shift 90


	.	error


state 75:

	fundec : FUNCTION ID . LPAREN tyfields RPAREN EQ exp 
	fundec : FUNCTION ID . LPAREN tyfields RPAREN COLON ID EQ exp 

	LPAREN	shift 92


	.	error


state 76:

	forloop : FOR ID ASSIGN . exp TO exp DO exp 

	ID	shift 27
	INT	shift 26
	STRING	shift 25
	LPAREN	shift 24
	MINUS	shift 23
	IF	shift 22
	WHILE	shift 21
	FOR	shift 20
	LET	shift 19
	BREAK	shift 18
	NIL	shift 17

	exp	goto 93
	lvalue	goto 15
	unit	goto 14
	negation	goto 13
	comparison	goto 12
	arithmetic	goto 11
	boolcomp	goto 10
	record	goto 9
	array	goto 8
	assignment	goto 7
	ifThenElse	goto 6
	ifThen	goto 5
	let	goto 4
	while	goto 3
	forloop	goto 2
	lval	goto 1

	.	error


state 77:

	while : WHILE exp DO . exp 

	ID	shift 27
	INT	shift 26
	STRING	shift 25
	LPAREN	shift 24
	MINUS	shift 23
	IF	shift 22
	WHILE	shift 21
	FOR	shift 20
	LET	shift 19
	BREAK	shift 18
	NIL	shift 17

	exp	goto 94
	lvalue	goto 15
	unit	goto 14
	negation	goto 13
	comparison	goto 12
	arithmetic	goto 11
	boolcomp	goto 10
	record	goto 9
	array	goto 8
	assignment	goto 7
	ifThenElse	goto 6
	ifThen	goto 5
	let	goto 4
	while	goto 3
	forloop	goto 2
	lval	goto 1

	.	error


state 78:

	ifThenElse : IF exp THEN . exp ELSE exp 
	ifThen : IF exp THEN . exp 

	ID	shift 27
	INT	shift 26
	STRING	shift 25
	LPAREN	shift 24
	MINUS	shift 23
	IF	shift 22
	WHILE	shift 21
	FOR	shift 20
	LET	shift 19
	BREAK	shift 18
	NIL	shift 17

	exp	goto 95
	lvalue	goto 15
	unit	goto 14
	negation	goto 13
	comparison	goto 12
	arithmetic	goto 11
	boolcomp	goto 10
	record	goto 9
	array	goto 8
	assignment	goto 7
	ifThenElse	goto 6
	ifThen	goto 5
	let	goto 4
	while	goto 3
	forloop	goto 2
	lval	goto 1

	.	error


state 79:

	exp : LPAREN expP RPAREN .  (reduce by rule 2)



	.	reduce by rule 2


state 80:

	expP : exp SEMICOLON . expP 

	ID	shift 27
	INT	shift 26
	STRING	shift 25
	LPAREN	shift 24
	MINUS	shift 23
	IF	shift 22
	WHILE	shift 21
	FOR	shift 20
	LET	shift 19
	BREAK	shift 18
	NIL	shift 17

	exp	goto 59
	lvalue	goto 15
	unit	goto 14
	negation	goto 13
	comparison	goto 12
	arithmetic	goto 11
	boolcomp	goto 10
	expP	goto 96
	record	goto 9
	array	goto 8
	assignment	goto 7
	ifThenElse	goto 6
	ifThen	goto 5
	let	goto 4
	while	goto 3
	forloop	goto 2
	lval	goto 1

	.	error


state 81:

	lval : ID DOT ID .  (reduce by rule 67)



	.	reduce by rule 67


state 82:

	record : ID LBRACE ID . EQ exp recP RBRACE 

	EQ	shift 97


	.	error


state 83:

	comparison : exp . comp exp 
	arithmetic : exp . op exp 
	boolcomp : exp . bool exp 
	array : ID LBRACK exp . RBRACK OF exp 
	lval : ID LBRACK exp . RBRACK 

	RBRACK	shift 98
	PLUS	shift 45
	MINUS	shift 44
	TIMES	shift 43
	DIVIDE	shift 42
	EQ	shift 41
	NEQ	shift 40
	LT	shift 39
	LE	shift 38
	GT	shift 37
	GE	shift 36
	AND	shift 35
	OR	shift 34

	bool	goto 33
	comp	goto 32
	op	goto 31

	.	error


state 84:

	exp : ID LPAREN args . RPAREN 

	RPAREN	shift 99


	.	error


state 85:

	comparison : exp . comp exp 
	arithmetic : exp . op exp 
	boolcomp : exp . bool exp 
	args : exp . COMMA args 
	args : exp .  (reduce by rule 26)

	COMMA	shift 100
	PLUS	shift 45
	MINUS	shift 44
	TIMES	shift 43
	DIVIDE	shift 42
	EQ	shift 41
	NEQ	shift 40
	LT	shift 39
	LE	shift 38
	GT	shift 37
	GE	shift 36
	AND	shift 35
	OR	shift 34

	bool	goto 33
	comp	goto 32
	op	goto 31

	.	reduce by rule 26


state 86:

	lval : lval LBRACK exp RBRACK .  (reduce by rule 70)



	.	reduce by rule 70


state 87:

	let : LET decs IN expseq . END 

	END	shift 101


	.	error


state 88:

	expseq : expP .  (reduce by rule 23)



	.	reduce by rule 23


state 89:

	tydec : TYPE ID EQ . ty 

	ID	shift 105
	LBRACE	shift 104
	ARRAY	shift 103

	ty	goto 102

	.	error


state 90:

	vardec : VAR ID ASSIGN . exp 

	ID	shift 27
	INT	shift 26
	STRING	shift 25
	LPAREN	shift 24
	MINUS	shift 23
	IF	shift 22
	WHILE	shift 21
	FOR	shift 20
	LET	shift 19
	BREAK	shift 18
	NIL	shift 17

	exp	goto 106
	lvalue	goto 15
	unit	goto 14
	negation	goto 13
	comparison	goto 12
	arithmetic	goto 11
	boolcomp	goto 10
	record	goto 9
	array	goto 8
	assignment	goto 7
	ifThenElse	goto 6
	ifThen	goto 5
	let	goto 4
	while	goto 3
	forloop	goto 2
	lval	goto 1

	.	error


state 91:

	vardec : VAR ID COLON . ID ASSIGN exp 

	ID	shift 107


	.	error


state 92:

	fundec : FUNCTION ID LPAREN . tyfields RPAREN EQ exp 
	fundec : FUNCTION ID LPAREN . tyfields RPAREN COLON ID EQ exp 

	ID	shift 109

	tyfields	goto 108

	.	reduce by rule 57


state 93:

	comparison : exp . comp exp 
	arithmetic : exp . op exp 
	boolcomp : exp . bool exp 
	forloop : FOR ID ASSIGN exp . TO exp DO exp 

	PLUS	shift 45
	MINUS	shift 44
	TIMES	shift 43
	DIVIDE	shift 42
	EQ	shift 41
	NEQ	shift 40
	LT	shift 39
	LE	shift 38
	GT	shift 37
	GE	shift 36
	AND	shift 35
	OR	shift 34
	TO	shift 110

	bool	goto 33
	comp	goto 32
	op	goto 31

	.	error


state 94:

	comparison : exp . comp exp 
	arithmetic : exp . op exp 
	boolcomp : exp . bool exp 
	while : WHILE exp DO exp .  (reduce by rule 74)

	PLUS	shift 45
	MINUS	shift 44
	TIMES	shift 43
	DIVIDE	shift 42
	EQ	shift 41
	NEQ	shift 40
	LT	shift 39
	LE	shift 38
	GT	shift 37
	GE	shift 36
	AND	shift 35
	OR	shift 34

	bool	goto 33
	comp	goto 32
	op	goto 31

	.	reduce by rule 74


state 95:

	comparison : exp . comp exp 
	arithmetic : exp . op exp 
	boolcomp : exp . bool exp 
	ifThenElse : IF exp THEN exp . ELSE exp 
	ifThen : IF exp THEN exp .  (reduce by rule 73)

	PLUS	shift 45
	MINUS	shift 44
	TIMES	shift 43
	DIVIDE	shift 42
	EQ	shift 41
	NEQ	shift 40
	LT	shift 39
	LE	shift 38
	GT	shift 37
	GE	shift 36
	AND	shift 35
	OR	shift 34
	ELSE	shift 111

	bool	goto 33
	comp	goto 32
	op	goto 31

	.	reduce by rule 73


state 96:

	expP : exp SEMICOLON expP .  (reduce by rule 21)



	.	reduce by rule 21


state 97:

	record : ID LBRACE ID EQ . exp recP RBRACE 

	ID	shift 27
	INT	shift 26
	STRING	shift 25
	LPAREN	shift 24
	MINUS	shift 23
	IF	shift 22
	WHILE	shift 21
	FOR	shift 20
	LET	shift 19
	BREAK	shift 18
	NIL	shift 17

	exp	goto 112
	lvalue	goto 15
	unit	goto 14
	negation	goto 13
	comparison	goto 12
	arithmetic	goto 11
	boolcomp	goto 10
	record	goto 9
	array	goto 8
	assignment	goto 7
	ifThenElse	goto 6
	ifThen	goto 5
	let	goto 4
	while	goto 3
	forloop	goto 2
	lval	goto 1

	.	error


state 98:

	array : ID LBRACK exp RBRACK . OF exp 
	lval : ID LBRACK exp RBRACK .  (reduce by rule 69)

	OF	shift 113


	.	reduce by rule 69


state 99:

	exp : ID LPAREN args RPAREN .  (reduce by rule 19)



	.	reduce by rule 19


state 100:

	args : exp COMMA . args 

	ID	shift 27
	INT	shift 26
	STRING	shift 25
	LPAREN	shift 24
	MINUS	shift 23
	IF	shift 22
	WHILE	shift 21
	FOR	shift 20
	LET	shift 19
	BREAK	shift 18
	NIL	shift 17

	exp	goto 85
	lvalue	goto 15
	unit	goto 14
	negation	goto 13
	comparison	goto 12
	arithmetic	goto 11
	boolcomp	goto 10
	record	goto 9
	array	goto 8
	assignment	goto 7
	ifThenElse	goto 6
	ifThen	goto 5
	let	goto 4
	args	goto 114
	while	goto 3
	forloop	goto 2
	lval	goto 1

	.	error


state 101:

	let : LET decs IN expseq END .  (reduce by rule 76)



	.	reduce by rule 76


state 102:

	tydec : TYPE ID EQ ty .  (reduce by rule 53)



	.	reduce by rule 53


state 103:

	ty : ARRAY . OF ID 

	OF	shift 115


	.	error


state 104:

	ty : LBRACE . tyfields RBRACE 

	ID	shift 109

	tyfields	goto 116

	.	reduce by rule 57


state 105:

	ty : ID .  (reduce by rule 54)



	.	reduce by rule 54


state 106:

	vardec : VAR ID ASSIGN exp .  (reduce by rule 61)
	comparison : exp . comp exp 
	arithmetic : exp . op exp 
	boolcomp : exp . bool exp 

	PLUS	shift 45
	MINUS	shift 44
	TIMES	shift 43
	DIVIDE	shift 42
	EQ	shift 41
	NEQ	shift 40
	LT	shift 39
	LE	shift 38
	GT	shift 37
	GE	shift 36
	AND	shift 35
	OR	shift 34

	bool	goto 33
	comp	goto 32
	op	goto 31

	.	reduce by rule 61


state 107:

	vardec : VAR ID COLON ID . ASSIGN exp 

	ASSIGN	shift 117


	.	error


state 108:

	fundec : FUNCTION ID LPAREN tyfields . RPAREN EQ exp 
	fundec : FUNCTION ID LPAREN tyfields . RPAREN COLON ID EQ exp 

	RPAREN	shift 118


	.	error


state 109:

	tyfields : ID . COLON ID tyfieldsP 

	COLON	shift 119


	.	error


state 110:

	forloop : FOR ID ASSIGN exp TO . exp DO exp 

	ID	shift 27
	INT	shift 26
	STRING	shift 25
	LPAREN	shift 24
	MINUS	shift 23
	IF	shift 22
	WHILE	shift 21
	FOR	shift 20
	LET	shift 19
	BREAK	shift 18
	NIL	shift 17

	exp	goto 120
	lvalue	goto 15
	unit	goto 14
	negation	goto 13
	comparison	goto 12
	arithmetic	goto 11
	boolcomp	goto 10
	record	goto 9
	array	goto 8
	assignment	goto 7
	ifThenElse	goto 6
	ifThen	goto 5
	let	goto 4
	while	goto 3
	forloop	goto 2
	lval	goto 1

	.	error


state 111:

	ifThenElse : IF exp THEN exp ELSE . exp 

	ID	shift 27
	INT	shift 26
	STRING	shift 25
	LPAREN	shift 24
	MINUS	shift 23
	IF	shift 22
	WHILE	shift 21
	FOR	shift 20
	LET	shift 19
	BREAK	shift 18
	NIL	shift 17

	exp	goto 121
	lvalue	goto 15
	unit	goto 14
	negation	goto 13
	comparison	goto 12
	arithmetic	goto 11
	boolcomp	goto 10
	record	goto 9
	array	goto 8
	assignment	goto 7
	ifThenElse	goto 6
	ifThen	goto 5
	let	goto 4
	while	goto 3
	forloop	goto 2
	lval	goto 1

	.	error


state 112:

	comparison : exp . comp exp 
	arithmetic : exp . op exp 
	boolcomp : exp . bool exp 
	record : ID LBRACE ID EQ exp . recP RBRACE 

	COMMA	shift 123
	PLUS	shift 45
	MINUS	shift 44
	TIMES	shift 43
	DIVIDE	shift 42
	EQ	shift 41
	NEQ	shift 40
	LT	shift 39
	LE	shift 38
	GT	shift 37
	GE	shift 36
	AND	shift 35
	OR	shift 34

	bool	goto 33
	comp	goto 32
	op	goto 31
	recP	goto 122

	.	reduce by rule 46


state 113:

	array : ID LBRACK exp RBRACK OF . exp 

	ID	shift 27
	INT	shift 26
	STRING	shift 25
	LPAREN	shift 24
	MINUS	shift 23
	IF	shift 22
	WHILE	shift 21
	FOR	shift 20
	LET	shift 19
	BREAK	shift 18
	NIL	shift 17

	exp	goto 124
	lvalue	goto 15
	unit	goto 14
	negation	goto 13
	comparison	goto 12
	arithmetic	goto 11
	boolcomp	goto 10
	record	goto 9
	array	goto 8
	assignment	goto 7
	ifThenElse	goto 6
	ifThen	goto 5
	let	goto 4
	while	goto 3
	forloop	goto 2
	lval	goto 1

	.	error


state 114:

	args : exp COMMA args .  (reduce by rule 25)



	.	reduce by rule 25


state 115:

	ty : ARRAY OF . ID 

	ID	shift 125


	.	error


state 116:

	ty : LBRACE tyfields . RBRACE 

	RBRACE	shift 126


	.	error


state 117:

	vardec : VAR ID COLON ID ASSIGN . exp 

	ID	shift 27
	INT	shift 26
	STRING	shift 25
	LPAREN	shift 24
	MINUS	shift 23
	IF	shift 22
	WHILE	shift 21
	FOR	shift 20
	LET	shift 19
	BREAK	shift 18
	NIL	shift 17

	exp	goto 127
	lvalue	goto 15
	unit	goto 14
	negation	goto 13
	comparison	goto 12
	arithmetic	goto 11
	boolcomp	goto 10
	record	goto 9
	array	goto 8
	assignment	goto 7
	ifThenElse	goto 6
	ifThen	goto 5
	let	goto 4
	while	goto 3
	forloop	goto 2
	lval	goto 1

	.	error


state 118:

	fundec : FUNCTION ID LPAREN tyfields RPAREN . EQ exp 
	fundec : FUNCTION ID LPAREN tyfields RPAREN . COLON ID EQ exp 

	COLON	shift 129
	EQ	shift 128


	.	error


state 119:

	tyfields : ID COLON . ID tyfieldsP 

	ID	shift 130


	.	error


state 120:

	comparison : exp . comp exp 
	arithmetic : exp . op exp 
	boolcomp : exp . bool exp 
	forloop : FOR ID ASSIGN exp TO exp . DO exp 

	PLUS	shift 45
	MINUS	shift 44
	TIMES	shift 43
	DIVIDE	shift 42
	EQ	shift 41
	NEQ	shift 40
	LT	shift 39
	LE	shift 38
	GT	shift 37
	GE	shift 36
	AND	shift 35
	OR	shift 34
	DO	shift 131

	bool	goto 33
	comp	goto 32
	op	goto 31

	.	error


state 121:

	comparison : exp . comp exp 
	arithmetic : exp . op exp 
	boolcomp : exp . bool exp 
	ifThenElse : IF exp THEN exp ELSE exp .  (reduce by rule 72)

	PLUS	shift 45
	MINUS	shift 44
	TIMES	shift 43
	DIVIDE	shift 42
	EQ	shift 41
	NEQ	shift 40
	LT	shift 39
	LE	shift 38
	GT	shift 37
	GE	shift 36
	AND	shift 35
	OR	shift 34

	bool	goto 33
	comp	goto 32
	op	goto 31

	.	reduce by rule 72


state 122:

	record : ID LBRACE ID EQ exp recP . RBRACE 

	RBRACE	shift 132


	.	error


state 123:

	recP : COMMA . ID EQ exp recP 

	ID	shift 133


	.	error


state 124:

	comparison : exp . comp exp 
	arithmetic : exp . op exp 
	boolcomp : exp . bool exp 
	array : ID LBRACK exp RBRACK OF exp .  (reduce by rule 47)

	PLUS	shift 45
	MINUS	shift 44
	TIMES	shift 43
	DIVIDE	shift 42
	EQ	shift 41
	NEQ	shift 40
	LT	shift 39
	LE	shift 38
	GT	shift 37
	GE	shift 36
	AND	shift 35
	OR	shift 34

	bool	goto 33
	comp	goto 32
	op	goto 31

	.	reduce by rule 47


state 125:

	ty : ARRAY OF ID .  (reduce by rule 56)



	.	reduce by rule 56


state 126:

	ty : LBRACE tyfields RBRACE .  (reduce by rule 55)



	.	reduce by rule 55


state 127:

	vardec : VAR ID COLON ID ASSIGN exp .  (reduce by rule 62)
	comparison : exp . comp exp 
	arithmetic : exp . op exp 
	boolcomp : exp . bool exp 

	PLUS	shift 45
	MINUS	shift 44
	TIMES	shift 43
	DIVIDE	shift 42
	EQ	shift 41
	NEQ	shift 40
	LT	shift 39
	LE	shift 38
	GT	shift 37
	GE	shift 36
	AND	shift 35
	OR	shift 34

	bool	goto 33
	comp	goto 32
	op	goto 31

	.	reduce by rule 62


state 128:

	fundec : FUNCTION ID LPAREN tyfields RPAREN EQ . exp 

	ID	shift 27
	INT	shift 26
	STRING	shift 25
	LPAREN	shift 24
	MINUS	shift 23
	IF	shift 22
	WHILE	shift 21
	FOR	shift 20
	LET	shift 19
	BREAK	shift 18
	NIL	shift 17

	exp	goto 134
	lvalue	goto 15
	unit	goto 14
	negation	goto 13
	comparison	goto 12
	arithmetic	goto 11
	boolcomp	goto 10
	record	goto 9
	array	goto 8
	assignment	goto 7
	ifThenElse	goto 6
	ifThen	goto 5
	let	goto 4
	while	goto 3
	forloop	goto 2
	lval	goto 1

	.	error


state 129:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON . ID EQ exp 

	ID	shift 135


	.	error


state 130:

	tyfields : ID COLON ID . tyfieldsP 

	COMMA	shift 137

	tyfieldsP	goto 136

	.	reduce by rule 59


state 131:

	forloop : FOR ID ASSIGN exp TO exp DO . exp 

	ID	shift 27
	INT	shift 26
	STRING	shift 25
	LPAREN	shift 24
	MINUS	shift 23
	IF	shift 22
	WHILE	shift 21
	FOR	shift 20
	LET	shift 19
	BREAK	shift 18
	NIL	shift 17

	exp	goto 138
	lvalue	goto 15
	unit	goto 14
	negation	goto 13
	comparison	goto 12
	arithmetic	goto 11
	boolcomp	goto 10
	record	goto 9
	array	goto 8
	assignment	goto 7
	ifThenElse	goto 6
	ifThen	goto 5
	let	goto 4
	while	goto 3
	forloop	goto 2
	lval	goto 1

	.	error


state 132:

	record : ID LBRACE ID EQ exp recP RBRACE .  (reduce by rule 44)



	.	reduce by rule 44


state 133:

	recP : COMMA ID . EQ exp recP 

	EQ	shift 139


	.	error


state 134:

	fundec : FUNCTION ID LPAREN tyfields RPAREN EQ exp .  (reduce by rule 63)
	comparison : exp . comp exp 
	arithmetic : exp . op exp 
	boolcomp : exp . bool exp 

	PLUS	shift 45
	MINUS	shift 44
	TIMES	shift 43
	DIVIDE	shift 42
	EQ	shift 41
	NEQ	shift 40
	LT	shift 39
	LE	shift 38
	GT	shift 37
	GE	shift 36
	AND	shift 35
	OR	shift 34

	bool	goto 33
	comp	goto 32
	op	goto 31

	.	reduce by rule 63


state 135:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID . EQ exp 

	EQ	shift 140


	.	error


state 136:

	tyfields : ID COLON ID tyfieldsP .  (reduce by rule 58)



	.	reduce by rule 58


state 137:

	tyfieldsP : COMMA . ID COLON ID tyfieldsP 

	ID	shift 141


	.	error


state 138:

	comparison : exp . comp exp 
	arithmetic : exp . op exp 
	boolcomp : exp . bool exp 
	forloop : FOR ID ASSIGN exp TO exp DO exp .  (reduce by rule 75)

	PLUS	shift 45
	MINUS	shift 44
	TIMES	shift 43
	DIVIDE	shift 42
	EQ	shift 41
	NEQ	shift 40
	LT	shift 39
	LE	shift 38
	GT	shift 37
	GE	shift 36
	AND	shift 35
	OR	shift 34

	bool	goto 33
	comp	goto 32
	op	goto 31

	.	reduce by rule 75


state 139:

	recP : COMMA ID EQ . exp recP 

	ID	shift 27
	INT	shift 26
	STRING	shift 25
	LPAREN	shift 24
	MINUS	shift 23
	IF	shift 22
	WHILE	shift 21
	FOR	shift 20
	LET	shift 19
	BREAK	shift 18
	NIL	shift 17

	exp	goto 142
	lvalue	goto 15
	unit	goto 14
	negation	goto 13
	comparison	goto 12
	arithmetic	goto 11
	boolcomp	goto 10
	record	goto 9
	array	goto 8
	assignment	goto 7
	ifThenElse	goto 6
	ifThen	goto 5
	let	goto 4
	while	goto 3
	forloop	goto 2
	lval	goto 1

	.	error


state 140:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ . exp 

	ID	shift 27
	INT	shift 26
	STRING	shift 25
	LPAREN	shift 24
	MINUS	shift 23
	IF	shift 22
	WHILE	shift 21
	FOR	shift 20
	LET	shift 19
	BREAK	shift 18
	NIL	shift 17

	exp	goto 143
	lvalue	goto 15
	unit	goto 14
	negation	goto 13
	comparison	goto 12
	arithmetic	goto 11
	boolcomp	goto 10
	record	goto 9
	array	goto 8
	assignment	goto 7
	ifThenElse	goto 6
	ifThen	goto 5
	let	goto 4
	while	goto 3
	forloop	goto 2
	lval	goto 1

	.	error


state 141:

	tyfieldsP : COMMA ID . COLON ID tyfieldsP 

	COLON	shift 144


	.	error


state 142:

	comparison : exp . comp exp 
	arithmetic : exp . op exp 
	boolcomp : exp . bool exp 
	recP : COMMA ID EQ exp . recP 

	COMMA	shift 123
	PLUS	shift 45
	MINUS	shift 44
	TIMES	shift 43
	DIVIDE	shift 42
	EQ	shift 41
	NEQ	shift 40
	LT	shift 39
	LE	shift 38
	GT	shift 37
	GE	shift 36
	AND	shift 35
	OR	shift 34

	bool	goto 33
	comp	goto 32
	op	goto 31
	recP	goto 145

	.	reduce by rule 46


state 143:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp .  (reduce by rule 64)
	comparison : exp . comp exp 
	arithmetic : exp . op exp 
	boolcomp : exp . bool exp 

	PLUS	shift 45
	MINUS	shift 44
	TIMES	shift 43
	DIVIDE	shift 42
	EQ	shift 41
	NEQ	shift 40
	LT	shift 39
	LE	shift 38
	GT	shift 37
	GE	shift 36
	AND	shift 35
	OR	shift 34

	bool	goto 33
	comp	goto 32
	op	goto 31

	.	reduce by rule 64


state 144:

	tyfieldsP : COMMA ID COLON . ID tyfieldsP 

	ID	shift 146


	.	error


state 145:

	recP : COMMA ID EQ exp recP .  (reduce by rule 45)



	.	reduce by rule 45


state 146:

	tyfieldsP : COMMA ID COLON ID . tyfieldsP 

	COMMA	shift 137

	tyfieldsP	goto 147

	.	reduce by rule 59


state 147:

	tyfieldsP : COMMA ID COLON ID tyfieldsP .  (reduce by rule 60)



	.	reduce by rule 60


state 148:


	EOF	accept


	.	error

377 of 816 action table entries left after compaction
547 goto table entries
