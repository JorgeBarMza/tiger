110 shift/reduce conflicts

error:  state 26: shift/reduce conflict (shift LBRACK, reduce by rule 65)
error:  state 63: shift/reduce conflict (shift OR, reduce by rule 68)
error:  state 63: shift/reduce conflict (shift AND, reduce by rule 68)
error:  state 63: shift/reduce conflict (shift GE, reduce by rule 68)
error:  state 63: shift/reduce conflict (shift GT, reduce by rule 68)
error:  state 63: shift/reduce conflict (shift LE, reduce by rule 68)
error:  state 63: shift/reduce conflict (shift LT, reduce by rule 68)
error:  state 63: shift/reduce conflict (shift NEQ, reduce by rule 68)
error:  state 63: shift/reduce conflict (shift EQ, reduce by rule 68)
error:  state 63: shift/reduce conflict (shift DIVIDE, reduce by rule 68)
error:  state 63: shift/reduce conflict (shift TIMES, reduce by rule 68)
error:  state 63: shift/reduce conflict (shift MINUS, reduce by rule 68)
error:  state 63: shift/reduce conflict (shift PLUS, reduce by rule 68)
error:  state 66: shift/reduce conflict (shift OR, reduce by rule 27)
error:  state 66: shift/reduce conflict (shift AND, reduce by rule 27)
error:  state 66: shift/reduce conflict (shift GE, reduce by rule 27)
error:  state 66: shift/reduce conflict (shift GT, reduce by rule 27)
error:  state 66: shift/reduce conflict (shift LE, reduce by rule 27)
error:  state 66: shift/reduce conflict (shift LT, reduce by rule 27)
error:  state 66: shift/reduce conflict (shift NEQ, reduce by rule 27)
error:  state 66: shift/reduce conflict (shift EQ, reduce by rule 27)
error:  state 66: shift/reduce conflict (shift DIVIDE, reduce by rule 27)
error:  state 66: shift/reduce conflict (shift TIMES, reduce by rule 27)
error:  state 66: shift/reduce conflict (shift MINUS, reduce by rule 27)
error:  state 66: shift/reduce conflict (shift PLUS, reduce by rule 27)
error:  state 67: shift/reduce conflict (shift OR, reduce by rule 28)
error:  state 67: shift/reduce conflict (shift AND, reduce by rule 28)
error:  state 67: shift/reduce conflict (shift GE, reduce by rule 28)
error:  state 67: shift/reduce conflict (shift GT, reduce by rule 28)
error:  state 67: shift/reduce conflict (shift LE, reduce by rule 28)
error:  state 67: shift/reduce conflict (shift LT, reduce by rule 28)
error:  state 67: shift/reduce conflict (shift NEQ, reduce by rule 28)
error:  state 67: shift/reduce conflict (shift EQ, reduce by rule 28)
error:  state 67: shift/reduce conflict (shift DIVIDE, reduce by rule 28)
error:  state 67: shift/reduce conflict (shift TIMES, reduce by rule 28)
error:  state 67: shift/reduce conflict (shift MINUS, reduce by rule 28)
error:  state 67: shift/reduce conflict (shift PLUS, reduce by rule 28)
error:  state 68: shift/reduce conflict (shift OR, reduce by rule 29)
error:  state 68: shift/reduce conflict (shift AND, reduce by rule 29)
error:  state 68: shift/reduce conflict (shift GE, reduce by rule 29)
error:  state 68: shift/reduce conflict (shift GT, reduce by rule 29)
error:  state 68: shift/reduce conflict (shift LE, reduce by rule 29)
error:  state 68: shift/reduce conflict (shift LT, reduce by rule 29)
error:  state 68: shift/reduce conflict (shift NEQ, reduce by rule 29)
error:  state 68: shift/reduce conflict (shift EQ, reduce by rule 29)
error:  state 68: shift/reduce conflict (shift DIVIDE, reduce by rule 29)
error:  state 68: shift/reduce conflict (shift TIMES, reduce by rule 29)
error:  state 68: shift/reduce conflict (shift MINUS, reduce by rule 29)
error:  state 68: shift/reduce conflict (shift PLUS, reduce by rule 29)
error:  state 91: shift/reduce conflict (shift OR, reduce by rule 71)
error:  state 91: shift/reduce conflict (shift AND, reduce by rule 71)
error:  state 91: shift/reduce conflict (shift GE, reduce by rule 71)
error:  state 91: shift/reduce conflict (shift GT, reduce by rule 71)
error:  state 91: shift/reduce conflict (shift LE, reduce by rule 71)
error:  state 91: shift/reduce conflict (shift LT, reduce by rule 71)
error:  state 91: shift/reduce conflict (shift NEQ, reduce by rule 71)
error:  state 91: shift/reduce conflict (shift EQ, reduce by rule 71)
error:  state 91: shift/reduce conflict (shift DIVIDE, reduce by rule 71)
error:  state 91: shift/reduce conflict (shift TIMES, reduce by rule 71)
error:  state 91: shift/reduce conflict (shift MINUS, reduce by rule 71)
error:  state 91: shift/reduce conflict (shift PLUS, reduce by rule 71)
error:  state 92: shift/reduce conflict (shift ELSE, reduce by rule 70)
error:  state 92: shift/reduce conflict (shift OR, reduce by rule 70)
error:  state 92: shift/reduce conflict (shift AND, reduce by rule 70)
error:  state 92: shift/reduce conflict (shift GE, reduce by rule 70)
error:  state 92: shift/reduce conflict (shift GT, reduce by rule 70)
error:  state 92: shift/reduce conflict (shift LE, reduce by rule 70)
error:  state 92: shift/reduce conflict (shift LT, reduce by rule 70)
error:  state 92: shift/reduce conflict (shift NEQ, reduce by rule 70)
error:  state 92: shift/reduce conflict (shift EQ, reduce by rule 70)
error:  state 92: shift/reduce conflict (shift DIVIDE, reduce by rule 70)
error:  state 92: shift/reduce conflict (shift TIMES, reduce by rule 70)
error:  state 92: shift/reduce conflict (shift MINUS, reduce by rule 70)
error:  state 92: shift/reduce conflict (shift PLUS, reduce by rule 70)
error:  state 118: shift/reduce conflict (shift OR, reduce by rule 69)
error:  state 118: shift/reduce conflict (shift AND, reduce by rule 69)
error:  state 118: shift/reduce conflict (shift GE, reduce by rule 69)
error:  state 118: shift/reduce conflict (shift GT, reduce by rule 69)
error:  state 118: shift/reduce conflict (shift LE, reduce by rule 69)
error:  state 118: shift/reduce conflict (shift LT, reduce by rule 69)
error:  state 118: shift/reduce conflict (shift NEQ, reduce by rule 69)
error:  state 118: shift/reduce conflict (shift EQ, reduce by rule 69)
error:  state 118: shift/reduce conflict (shift DIVIDE, reduce by rule 69)
error:  state 118: shift/reduce conflict (shift TIMES, reduce by rule 69)
error:  state 118: shift/reduce conflict (shift MINUS, reduce by rule 69)
error:  state 118: shift/reduce conflict (shift PLUS, reduce by rule 69)
error:  state 121: shift/reduce conflict (shift OR, reduce by rule 47)
error:  state 121: shift/reduce conflict (shift AND, reduce by rule 47)
error:  state 121: shift/reduce conflict (shift GE, reduce by rule 47)
error:  state 121: shift/reduce conflict (shift GT, reduce by rule 47)
error:  state 121: shift/reduce conflict (shift LE, reduce by rule 47)
error:  state 121: shift/reduce conflict (shift LT, reduce by rule 47)
error:  state 121: shift/reduce conflict (shift NEQ, reduce by rule 47)
error:  state 121: shift/reduce conflict (shift EQ, reduce by rule 47)
error:  state 121: shift/reduce conflict (shift DIVIDE, reduce by rule 47)
error:  state 121: shift/reduce conflict (shift TIMES, reduce by rule 47)
error:  state 121: shift/reduce conflict (shift MINUS, reduce by rule 47)
error:  state 121: shift/reduce conflict (shift PLUS, reduce by rule 47)
error:  state 135: shift/reduce conflict (shift OR, reduce by rule 72)
error:  state 135: shift/reduce conflict (shift AND, reduce by rule 72)
error:  state 135: shift/reduce conflict (shift GE, reduce by rule 72)
error:  state 135: shift/reduce conflict (shift GT, reduce by rule 72)
error:  state 135: shift/reduce conflict (shift LE, reduce by rule 72)
error:  state 135: shift/reduce conflict (shift LT, reduce by rule 72)
error:  state 135: shift/reduce conflict (shift NEQ, reduce by rule 72)
error:  state 135: shift/reduce conflict (shift EQ, reduce by rule 72)
error:  state 135: shift/reduce conflict (shift DIVIDE, reduce by rule 72)
error:  state 135: shift/reduce conflict (shift TIMES, reduce by rule 72)
error:  state 135: shift/reduce conflict (shift MINUS, reduce by rule 72)
error:  state 135: shift/reduce conflict (shift PLUS, reduce by rule 72)

state 0:

	program : . exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16

	exp	goto 15
	program	goto 145
	lvalue	goto 14
	unit	goto 13
	negation	goto 12
	comparison	goto 11
	arithmetic	goto 10
	boolcomp	goto 9
	record	goto 8
	array	goto 7
	assignment	goto 6
	ifThenElse	goto 5
	ifThen	goto 4
	let	goto 3
	while	goto 2
	forloop	goto 1

	.	error


state 1:

	exp : forloop .  (reduce by rule 16)



	.	reduce by rule 16


state 2:

	exp : while .  (reduce by rule 15)



	.	reduce by rule 15


state 3:

	exp : let .  (reduce by rule 20)



	.	reduce by rule 20


state 4:

	exp : ifThen .  (reduce by rule 14)



	.	reduce by rule 14


state 5:

	exp : ifThenElse .  (reduce by rule 13)



	.	reduce by rule 13


state 6:

	exp : assignment .  (reduce by rule 12)



	.	reduce by rule 12


state 7:

	exp : array .  (reduce by rule 11)



	.	reduce by rule 11


state 8:

	exp : record .  (reduce by rule 10)



	.	reduce by rule 10


state 9:

	exp : boolcomp .  (reduce by rule 9)



	.	reduce by rule 9


state 10:

	exp : arithmetic .  (reduce by rule 7)



	.	reduce by rule 7


state 11:

	exp : comparison .  (reduce by rule 8)



	.	reduce by rule 8


state 12:

	exp : negation .  (reduce by rule 6)



	.	reduce by rule 6


state 13:

	exp : unit .  (reduce by rule 18)



	.	reduce by rule 18


state 14:

	exp : lvalue .  (reduce by rule 3)
	lvalue : lvalue . DOT ID 
	lvalue : lvalue . LBRACK exp RBRACK 
	assignment : lvalue . ASSIGN exp 

	LBRACK	shift 29
	DOT	shift 28
	ASSIGN	shift 27


	.	reduce by rule 3


state 15:

	program : exp .  (reduce by rule 0)
	comparison : exp . comp exp 
	arithmetic : exp . op exp 
	boolcomp : exp . bool exp 

	PLUS	shift 44
	MINUS	shift 43
	TIMES	shift 42
	DIVIDE	shift 41
	EQ	shift 40
	NEQ	shift 39
	LT	shift 38
	LE	shift 37
	GT	shift 36
	GE	shift 35
	AND	shift 34
	OR	shift 33

	bool	goto 32
	comp	goto 31
	op	goto 30

	.	reduce by rule 0


state 16:

	exp : NIL .  (reduce by rule 1)



	.	reduce by rule 1


state 17:

	exp : BREAK .  (reduce by rule 17)



	.	reduce by rule 17


state 18:

	let : LET . decs IN expseq END 

	FUNCTION	shift 52
	VAR	shift 51
	TYPE	shift 50

	decs	goto 49
	dec	goto 48
	tydec	goto 47
	vardec	goto 46
	fundec	goto 45

	.	error


state 19:

	forloop : FOR . ID ASSIGN exp TO exp DO exp 

	ID	shift 53


	.	error


state 20:

	while : WHILE . exp DO exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16

	exp	goto 54
	lvalue	goto 14
	unit	goto 13
	negation	goto 12
	comparison	goto 11
	arithmetic	goto 10
	boolcomp	goto 9
	record	goto 8
	array	goto 7
	assignment	goto 6
	ifThenElse	goto 5
	ifThen	goto 4
	let	goto 3
	while	goto 2
	forloop	goto 1

	.	error


state 21:

	ifThenElse : IF . exp THEN exp ELSE exp 
	ifThen : IF . exp THEN exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16

	exp	goto 55
	lvalue	goto 14
	unit	goto 13
	negation	goto 12
	comparison	goto 11
	arithmetic	goto 10
	boolcomp	goto 9
	record	goto 8
	array	goto 7
	assignment	goto 6
	ifThenElse	goto 5
	ifThen	goto 4
	let	goto 3
	while	goto 2
	forloop	goto 1

	.	error


state 22:

	negation : MINUS . exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16

	exp	goto 56
	lvalue	goto 14
	unit	goto 13
	negation	goto 12
	comparison	goto 11
	arithmetic	goto 10
	boolcomp	goto 9
	record	goto 8
	array	goto 7
	assignment	goto 6
	ifThenElse	goto 5
	ifThen	goto 4
	let	goto 3
	while	goto 2
	forloop	goto 1

	.	error


state 23:

	exp : LPAREN . expP RPAREN 
	unit : LPAREN . RPAREN 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	RPAREN	shift 59
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16

	exp	goto 58
	lvalue	goto 14
	unit	goto 13
	negation	goto 12
	comparison	goto 11
	arithmetic	goto 10
	boolcomp	goto 9
	expP	goto 57
	record	goto 8
	array	goto 7
	assignment	goto 6
	ifThenElse	goto 5
	ifThen	goto 4
	let	goto 3
	while	goto 2
	forloop	goto 1

	.	error


state 24:

	exp : STRING .  (reduce by rule 5)



	.	reduce by rule 5


state 25:

	exp : INT .  (reduce by rule 4)



	.	reduce by rule 4

error:  state 26: shift/reduce conflict (shift LBRACK, reduce by rule 65)

state 26:

	exp : ID . LPAREN args RPAREN 
	lvalue : ID .  (reduce by rule 65)
	record : ID . LBRACE ID EQ exp recP RBRACE 
	array : ID . LBRACK exp RBRACK OF exp 

	LPAREN	shift 62
	LBRACK	shift 61
	LBRACE	shift 60


	.	reduce by rule 65


state 27:

	assignment : lvalue ASSIGN . exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16

	exp	goto 63
	lvalue	goto 14
	unit	goto 13
	negation	goto 12
	comparison	goto 11
	arithmetic	goto 10
	boolcomp	goto 9
	record	goto 8
	array	goto 7
	assignment	goto 6
	ifThenElse	goto 5
	ifThen	goto 4
	let	goto 3
	while	goto 2
	forloop	goto 1

	.	error


state 28:

	lvalue : lvalue DOT . ID 

	ID	shift 64


	.	error


state 29:

	lvalue : lvalue LBRACK . exp RBRACK 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16

	exp	goto 65
	lvalue	goto 14
	unit	goto 13
	negation	goto 12
	comparison	goto 11
	arithmetic	goto 10
	boolcomp	goto 9
	record	goto 8
	array	goto 7
	assignment	goto 6
	ifThenElse	goto 5
	ifThen	goto 4
	let	goto 3
	while	goto 2
	forloop	goto 1

	.	error


state 30:

	arithmetic : exp op . exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16

	exp	goto 66
	lvalue	goto 14
	unit	goto 13
	negation	goto 12
	comparison	goto 11
	arithmetic	goto 10
	boolcomp	goto 9
	record	goto 8
	array	goto 7
	assignment	goto 6
	ifThenElse	goto 5
	ifThen	goto 4
	let	goto 3
	while	goto 2
	forloop	goto 1

	.	error


state 31:

	comparison : exp comp . exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16

	exp	goto 67
	lvalue	goto 14
	unit	goto 13
	negation	goto 12
	comparison	goto 11
	arithmetic	goto 10
	boolcomp	goto 9
	record	goto 8
	array	goto 7
	assignment	goto 6
	ifThenElse	goto 5
	ifThen	goto 4
	let	goto 3
	while	goto 2
	forloop	goto 1

	.	error


state 32:

	boolcomp : exp bool . exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16

	exp	goto 68
	lvalue	goto 14
	unit	goto 13
	negation	goto 12
	comparison	goto 11
	arithmetic	goto 10
	boolcomp	goto 9
	record	goto 8
	array	goto 7
	assignment	goto 6
	ifThenElse	goto 5
	ifThen	goto 4
	let	goto 3
	while	goto 2
	forloop	goto 1

	.	error


state 33:

	bool : OR .  (reduce by rule 41)



	.	reduce by rule 41


state 34:

	bool : AND .  (reduce by rule 40)



	.	reduce by rule 40


state 35:

	comp : GE .  (reduce by rule 39)



	.	reduce by rule 39


state 36:

	comp : GT .  (reduce by rule 38)



	.	reduce by rule 38


state 37:

	comp : LE .  (reduce by rule 37)



	.	reduce by rule 37


state 38:

	comp : LT .  (reduce by rule 36)



	.	reduce by rule 36


state 39:

	comp : NEQ .  (reduce by rule 35)



	.	reduce by rule 35


state 40:

	comp : EQ .  (reduce by rule 34)



	.	reduce by rule 34


state 41:

	op : DIVIDE .  (reduce by rule 33)



	.	reduce by rule 33


state 42:

	op : TIMES .  (reduce by rule 32)



	.	reduce by rule 32


state 43:

	op : MINUS .  (reduce by rule 31)



	.	reduce by rule 31


state 44:

	op : PLUS .  (reduce by rule 30)



	.	reduce by rule 30


state 45:

	dec : fundec .  (reduce by rule 52)



	.	reduce by rule 52


state 46:

	dec : vardec .  (reduce by rule 51)



	.	reduce by rule 51


state 47:

	dec : tydec .  (reduce by rule 50)



	.	reduce by rule 50


state 48:

	decs : dec . decs 
	decs : dec .  (reduce by rule 49)

	FUNCTION	shift 52
	VAR	shift 51
	TYPE	shift 50

	decs	goto 69
	dec	goto 48
	tydec	goto 47
	vardec	goto 46
	fundec	goto 45

	.	reduce by rule 49


state 49:

	let : LET decs . IN expseq END 

	IN	shift 70


	.	error


state 50:

	tydec : TYPE . ID EQ ty 

	ID	shift 71


	.	error


state 51:

	vardec : VAR . ID ASSIGN exp 
	vardec : VAR . ID COLON ID ASSIGN exp 

	ID	shift 72


	.	error


state 52:

	fundec : FUNCTION . ID LPAREN tyfields RPAREN EQ exp 
	fundec : FUNCTION . ID LPAREN tyfields RPAREN COLON ID EQ exp 

	ID	shift 73


	.	error


state 53:

	forloop : FOR ID . ASSIGN exp TO exp DO exp 

	ASSIGN	shift 74


	.	error


state 54:

	comparison : exp . comp exp 
	arithmetic : exp . op exp 
	boolcomp : exp . bool exp 
	while : WHILE exp . DO exp 

	PLUS	shift 44
	MINUS	shift 43
	TIMES	shift 42
	DIVIDE	shift 41
	EQ	shift 40
	NEQ	shift 39
	LT	shift 38
	LE	shift 37
	GT	shift 36
	GE	shift 35
	AND	shift 34
	OR	shift 33
	DO	shift 75

	bool	goto 32
	comp	goto 31
	op	goto 30

	.	error


state 55:

	comparison : exp . comp exp 
	arithmetic : exp . op exp 
	boolcomp : exp . bool exp 
	ifThenElse : IF exp . THEN exp ELSE exp 
	ifThen : IF exp . THEN exp 

	PLUS	shift 44
	MINUS	shift 43
	TIMES	shift 42
	DIVIDE	shift 41
	EQ	shift 40
	NEQ	shift 39
	LT	shift 38
	LE	shift 37
	GT	shift 36
	GE	shift 35
	AND	shift 34
	OR	shift 33
	THEN	shift 76

	bool	goto 32
	comp	goto 31
	op	goto 30

	.	error


state 56:

	negation : MINUS exp .  (reduce by rule 42)
	comparison : exp . comp exp 
	arithmetic : exp . op exp 
	boolcomp : exp . bool exp 

	TIMES	shift 42
	DIVIDE	shift 41

	bool	goto 32
	comp	goto 31
	op	goto 30

	.	reduce by rule 42


state 57:

	exp : LPAREN expP . RPAREN 

	RPAREN	shift 77


	.	error


state 58:

	comparison : exp . comp exp 
	arithmetic : exp . op exp 
	boolcomp : exp . bool exp 
	expP : exp . SEMICOLON expP 
	expP : exp .  (reduce by rule 22)

	SEMICOLON	shift 78
	PLUS	shift 44
	MINUS	shift 43
	TIMES	shift 42
	DIVIDE	shift 41
	EQ	shift 40
	NEQ	shift 39
	LT	shift 38
	LE	shift 37
	GT	shift 36
	GE	shift 35
	AND	shift 34
	OR	shift 33

	bool	goto 32
	comp	goto 31
	op	goto 30

	.	reduce by rule 22


state 59:

	unit : LPAREN RPAREN .  (reduce by rule 43)



	.	reduce by rule 43


state 60:

	record : ID LBRACE . ID EQ exp recP RBRACE 

	ID	shift 79


	.	error


state 61:

	array : ID LBRACK . exp RBRACK OF exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16

	exp	goto 80
	lvalue	goto 14
	unit	goto 13
	negation	goto 12
	comparison	goto 11
	arithmetic	goto 10
	boolcomp	goto 9
	record	goto 8
	array	goto 7
	assignment	goto 6
	ifThenElse	goto 5
	ifThen	goto 4
	let	goto 3
	while	goto 2
	forloop	goto 1

	.	error


state 62:

	exp : ID LPAREN . args RPAREN 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16

	exp	goto 82
	lvalue	goto 14
	unit	goto 13
	negation	goto 12
	comparison	goto 11
	arithmetic	goto 10
	boolcomp	goto 9
	record	goto 8
	array	goto 7
	assignment	goto 6
	ifThenElse	goto 5
	ifThen	goto 4
	let	goto 3
	args	goto 81
	while	goto 2
	forloop	goto 1

	.	error

error:  state 63: shift/reduce conflict (shift OR, reduce by rule 68)
error:  state 63: shift/reduce conflict (shift AND, reduce by rule 68)
error:  state 63: shift/reduce conflict (shift GE, reduce by rule 68)
error:  state 63: shift/reduce conflict (shift GT, reduce by rule 68)
error:  state 63: shift/reduce conflict (shift LE, reduce by rule 68)
error:  state 63: shift/reduce conflict (shift LT, reduce by rule 68)
error:  state 63: shift/reduce conflict (shift NEQ, reduce by rule 68)
error:  state 63: shift/reduce conflict (shift EQ, reduce by rule 68)
error:  state 63: shift/reduce conflict (shift DIVIDE, reduce by rule 68)
error:  state 63: shift/reduce conflict (shift TIMES, reduce by rule 68)
error:  state 63: shift/reduce conflict (shift MINUS, reduce by rule 68)
error:  state 63: shift/reduce conflict (shift PLUS, reduce by rule 68)

state 63:

	comparison : exp . comp exp 
	arithmetic : exp . op exp 
	boolcomp : exp . bool exp 
	assignment : lvalue ASSIGN exp .  (reduce by rule 68)

	PLUS	shift 44
	MINUS	shift 43
	TIMES	shift 42
	DIVIDE	shift 41
	EQ	shift 40
	NEQ	shift 39
	LT	shift 38
	LE	shift 37
	GT	shift 36
	GE	shift 35
	AND	shift 34
	OR	shift 33

	bool	goto 32
	comp	goto 31
	op	goto 30

	.	reduce by rule 68


state 64:

	lvalue : lvalue DOT ID .  (reduce by rule 66)



	.	reduce by rule 66


state 65:

	lvalue : lvalue LBRACK exp . RBRACK 
	comparison : exp . comp exp 
	arithmetic : exp . op exp 
	boolcomp : exp . bool exp 

	RBRACK	shift 83
	PLUS	shift 44
	MINUS	shift 43
	TIMES	shift 42
	DIVIDE	shift 41
	EQ	shift 40
	NEQ	shift 39
	LT	shift 38
	LE	shift 37
	GT	shift 36
	GE	shift 35
	AND	shift 34
	OR	shift 33

	bool	goto 32
	comp	goto 31
	op	goto 30

	.	error

error:  state 66: shift/reduce conflict (shift OR, reduce by rule 27)
error:  state 66: shift/reduce conflict (shift AND, reduce by rule 27)
error:  state 66: shift/reduce conflict (shift GE, reduce by rule 27)
error:  state 66: shift/reduce conflict (shift GT, reduce by rule 27)
error:  state 66: shift/reduce conflict (shift LE, reduce by rule 27)
error:  state 66: shift/reduce conflict (shift LT, reduce by rule 27)
error:  state 66: shift/reduce conflict (shift NEQ, reduce by rule 27)
error:  state 66: shift/reduce conflict (shift EQ, reduce by rule 27)
error:  state 66: shift/reduce conflict (shift DIVIDE, reduce by rule 27)
error:  state 66: shift/reduce conflict (shift TIMES, reduce by rule 27)
error:  state 66: shift/reduce conflict (shift MINUS, reduce by rule 27)
error:  state 66: shift/reduce conflict (shift PLUS, reduce by rule 27)

state 66:

	comparison : exp . comp exp 
	arithmetic : exp . op exp 
	arithmetic : exp op exp .  (reduce by rule 27)
	boolcomp : exp . bool exp 

	PLUS	shift 44
	MINUS	shift 43
	TIMES	shift 42
	DIVIDE	shift 41
	EQ	shift 40
	NEQ	shift 39
	LT	shift 38
	LE	shift 37
	GT	shift 36
	GE	shift 35
	AND	shift 34
	OR	shift 33

	bool	goto 32
	comp	goto 31
	op	goto 30

	.	reduce by rule 27

error:  state 67: shift/reduce conflict (shift OR, reduce by rule 28)
error:  state 67: shift/reduce conflict (shift AND, reduce by rule 28)
error:  state 67: shift/reduce conflict (shift GE, reduce by rule 28)
error:  state 67: shift/reduce conflict (shift GT, reduce by rule 28)
error:  state 67: shift/reduce conflict (shift LE, reduce by rule 28)
error:  state 67: shift/reduce conflict (shift LT, reduce by rule 28)
error:  state 67: shift/reduce conflict (shift NEQ, reduce by rule 28)
error:  state 67: shift/reduce conflict (shift EQ, reduce by rule 28)
error:  state 67: shift/reduce conflict (shift DIVIDE, reduce by rule 28)
error:  state 67: shift/reduce conflict (shift TIMES, reduce by rule 28)
error:  state 67: shift/reduce conflict (shift MINUS, reduce by rule 28)
error:  state 67: shift/reduce conflict (shift PLUS, reduce by rule 28)

state 67:

	comparison : exp . comp exp 
	comparison : exp comp exp .  (reduce by rule 28)
	arithmetic : exp . op exp 
	boolcomp : exp . bool exp 

	PLUS	shift 44
	MINUS	shift 43
	TIMES	shift 42
	DIVIDE	shift 41
	EQ	shift 40
	NEQ	shift 39
	LT	shift 38
	LE	shift 37
	GT	shift 36
	GE	shift 35
	AND	shift 34
	OR	shift 33

	bool	goto 32
	comp	goto 31
	op	goto 30

	.	reduce by rule 28

error:  state 68: shift/reduce conflict (shift OR, reduce by rule 29)
error:  state 68: shift/reduce conflict (shift AND, reduce by rule 29)
error:  state 68: shift/reduce conflict (shift GE, reduce by rule 29)
error:  state 68: shift/reduce conflict (shift GT, reduce by rule 29)
error:  state 68: shift/reduce conflict (shift LE, reduce by rule 29)
error:  state 68: shift/reduce conflict (shift LT, reduce by rule 29)
error:  state 68: shift/reduce conflict (shift NEQ, reduce by rule 29)
error:  state 68: shift/reduce conflict (shift EQ, reduce by rule 29)
error:  state 68: shift/reduce conflict (shift DIVIDE, reduce by rule 29)
error:  state 68: shift/reduce conflict (shift TIMES, reduce by rule 29)
error:  state 68: shift/reduce conflict (shift MINUS, reduce by rule 29)
error:  state 68: shift/reduce conflict (shift PLUS, reduce by rule 29)

state 68:

	comparison : exp . comp exp 
	arithmetic : exp . op exp 
	boolcomp : exp . bool exp 
	boolcomp : exp bool exp .  (reduce by rule 29)

	PLUS	shift 44
	MINUS	shift 43
	TIMES	shift 42
	DIVIDE	shift 41
	EQ	shift 40
	NEQ	shift 39
	LT	shift 38
	LE	shift 37
	GT	shift 36
	GE	shift 35
	AND	shift 34
	OR	shift 33

	bool	goto 32
	comp	goto 31
	op	goto 30

	.	reduce by rule 29


state 69:

	decs : dec decs .  (reduce by rule 48)



	.	reduce by rule 48


state 70:

	let : LET decs IN . expseq END 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16

	exp	goto 58
	lvalue	goto 14
	unit	goto 13
	negation	goto 12
	comparison	goto 11
	arithmetic	goto 10
	boolcomp	goto 9
	expP	goto 85
	record	goto 8
	array	goto 7
	assignment	goto 6
	ifThenElse	goto 5
	ifThen	goto 4
	let	goto 3
	expseq	goto 84
	while	goto 2
	forloop	goto 1

	.	reduce by rule 24


state 71:

	tydec : TYPE ID . EQ ty 

	EQ	shift 86


	.	error


state 72:

	vardec : VAR ID . ASSIGN exp 
	vardec : VAR ID . COLON ID ASSIGN exp 

	COLON	shift 88
	ASSIGN	shift 87


	.	error


state 73:

	fundec : FUNCTION ID . LPAREN tyfields RPAREN EQ exp 
	fundec : FUNCTION ID . LPAREN tyfields RPAREN COLON ID EQ exp 

	LPAREN	shift 89


	.	error


state 74:

	forloop : FOR ID ASSIGN . exp TO exp DO exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16

	exp	goto 90
	lvalue	goto 14
	unit	goto 13
	negation	goto 12
	comparison	goto 11
	arithmetic	goto 10
	boolcomp	goto 9
	record	goto 8
	array	goto 7
	assignment	goto 6
	ifThenElse	goto 5
	ifThen	goto 4
	let	goto 3
	while	goto 2
	forloop	goto 1

	.	error


state 75:

	while : WHILE exp DO . exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16

	exp	goto 91
	lvalue	goto 14
	unit	goto 13
	negation	goto 12
	comparison	goto 11
	arithmetic	goto 10
	boolcomp	goto 9
	record	goto 8
	array	goto 7
	assignment	goto 6
	ifThenElse	goto 5
	ifThen	goto 4
	let	goto 3
	while	goto 2
	forloop	goto 1

	.	error


state 76:

	ifThenElse : IF exp THEN . exp ELSE exp 
	ifThen : IF exp THEN . exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16

	exp	goto 92
	lvalue	goto 14
	unit	goto 13
	negation	goto 12
	comparison	goto 11
	arithmetic	goto 10
	boolcomp	goto 9
	record	goto 8
	array	goto 7
	assignment	goto 6
	ifThenElse	goto 5
	ifThen	goto 4
	let	goto 3
	while	goto 2
	forloop	goto 1

	.	error


state 77:

	exp : LPAREN expP RPAREN .  (reduce by rule 2)



	.	reduce by rule 2


state 78:

	expP : exp SEMICOLON . expP 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16

	exp	goto 58
	lvalue	goto 14
	unit	goto 13
	negation	goto 12
	comparison	goto 11
	arithmetic	goto 10
	boolcomp	goto 9
	expP	goto 93
	record	goto 8
	array	goto 7
	assignment	goto 6
	ifThenElse	goto 5
	ifThen	goto 4
	let	goto 3
	while	goto 2
	forloop	goto 1

	.	error


state 79:

	record : ID LBRACE ID . EQ exp recP RBRACE 

	EQ	shift 94


	.	error


state 80:

	comparison : exp . comp exp 
	arithmetic : exp . op exp 
	boolcomp : exp . bool exp 
	array : ID LBRACK exp . RBRACK OF exp 

	RBRACK	shift 95
	PLUS	shift 44
	MINUS	shift 43
	TIMES	shift 42
	DIVIDE	shift 41
	EQ	shift 40
	NEQ	shift 39
	LT	shift 38
	LE	shift 37
	GT	shift 36
	GE	shift 35
	AND	shift 34
	OR	shift 33

	bool	goto 32
	comp	goto 31
	op	goto 30

	.	error


state 81:

	exp : ID LPAREN args . RPAREN 

	RPAREN	shift 96


	.	error


state 82:

	comparison : exp . comp exp 
	arithmetic : exp . op exp 
	boolcomp : exp . bool exp 
	args : exp . COMMA args 
	args : exp .  (reduce by rule 26)

	COMMA	shift 97
	PLUS	shift 44
	MINUS	shift 43
	TIMES	shift 42
	DIVIDE	shift 41
	EQ	shift 40
	NEQ	shift 39
	LT	shift 38
	LE	shift 37
	GT	shift 36
	GE	shift 35
	AND	shift 34
	OR	shift 33

	bool	goto 32
	comp	goto 31
	op	goto 30

	.	reduce by rule 26


state 83:

	lvalue : lvalue LBRACK exp RBRACK .  (reduce by rule 67)



	.	reduce by rule 67


state 84:

	let : LET decs IN expseq . END 

	END	shift 98


	.	error


state 85:

	expseq : expP .  (reduce by rule 23)



	.	reduce by rule 23


state 86:

	tydec : TYPE ID EQ . ty 

	ID	shift 102
	LBRACE	shift 101
	ARRAY	shift 100

	ty	goto 99

	.	error


state 87:

	vardec : VAR ID ASSIGN . exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16

	exp	goto 103
	lvalue	goto 14
	unit	goto 13
	negation	goto 12
	comparison	goto 11
	arithmetic	goto 10
	boolcomp	goto 9
	record	goto 8
	array	goto 7
	assignment	goto 6
	ifThenElse	goto 5
	ifThen	goto 4
	let	goto 3
	while	goto 2
	forloop	goto 1

	.	error


state 88:

	vardec : VAR ID COLON . ID ASSIGN exp 

	ID	shift 104


	.	error


state 89:

	fundec : FUNCTION ID LPAREN . tyfields RPAREN EQ exp 
	fundec : FUNCTION ID LPAREN . tyfields RPAREN COLON ID EQ exp 

	ID	shift 106

	tyfields	goto 105

	.	reduce by rule 57


state 90:

	comparison : exp . comp exp 
	arithmetic : exp . op exp 
	boolcomp : exp . bool exp 
	forloop : FOR ID ASSIGN exp . TO exp DO exp 

	PLUS	shift 44
	MINUS	shift 43
	TIMES	shift 42
	DIVIDE	shift 41
	EQ	shift 40
	NEQ	shift 39
	LT	shift 38
	LE	shift 37
	GT	shift 36
	GE	shift 35
	AND	shift 34
	OR	shift 33
	TO	shift 107

	bool	goto 32
	comp	goto 31
	op	goto 30

	.	error

error:  state 91: shift/reduce conflict (shift OR, reduce by rule 71)
error:  state 91: shift/reduce conflict (shift AND, reduce by rule 71)
error:  state 91: shift/reduce conflict (shift GE, reduce by rule 71)
error:  state 91: shift/reduce conflict (shift GT, reduce by rule 71)
error:  state 91: shift/reduce conflict (shift LE, reduce by rule 71)
error:  state 91: shift/reduce conflict (shift LT, reduce by rule 71)
error:  state 91: shift/reduce conflict (shift NEQ, reduce by rule 71)
error:  state 91: shift/reduce conflict (shift EQ, reduce by rule 71)
error:  state 91: shift/reduce conflict (shift DIVIDE, reduce by rule 71)
error:  state 91: shift/reduce conflict (shift TIMES, reduce by rule 71)
error:  state 91: shift/reduce conflict (shift MINUS, reduce by rule 71)
error:  state 91: shift/reduce conflict (shift PLUS, reduce by rule 71)

state 91:

	comparison : exp . comp exp 
	arithmetic : exp . op exp 
	boolcomp : exp . bool exp 
	while : WHILE exp DO exp .  (reduce by rule 71)

	PLUS	shift 44
	MINUS	shift 43
	TIMES	shift 42
	DIVIDE	shift 41
	EQ	shift 40
	NEQ	shift 39
	LT	shift 38
	LE	shift 37
	GT	shift 36
	GE	shift 35
	AND	shift 34
	OR	shift 33

	bool	goto 32
	comp	goto 31
	op	goto 30

	.	reduce by rule 71

error:  state 92: shift/reduce conflict (shift ELSE, reduce by rule 70)
error:  state 92: shift/reduce conflict (shift OR, reduce by rule 70)
error:  state 92: shift/reduce conflict (shift AND, reduce by rule 70)
error:  state 92: shift/reduce conflict (shift GE, reduce by rule 70)
error:  state 92: shift/reduce conflict (shift GT, reduce by rule 70)
error:  state 92: shift/reduce conflict (shift LE, reduce by rule 70)
error:  state 92: shift/reduce conflict (shift LT, reduce by rule 70)
error:  state 92: shift/reduce conflict (shift NEQ, reduce by rule 70)
error:  state 92: shift/reduce conflict (shift EQ, reduce by rule 70)
error:  state 92: shift/reduce conflict (shift DIVIDE, reduce by rule 70)
error:  state 92: shift/reduce conflict (shift TIMES, reduce by rule 70)
error:  state 92: shift/reduce conflict (shift MINUS, reduce by rule 70)
error:  state 92: shift/reduce conflict (shift PLUS, reduce by rule 70)

state 92:

	comparison : exp . comp exp 
	arithmetic : exp . op exp 
	boolcomp : exp . bool exp 
	ifThenElse : IF exp THEN exp . ELSE exp 
	ifThen : IF exp THEN exp .  (reduce by rule 70)

	PLUS	shift 44
	MINUS	shift 43
	TIMES	shift 42
	DIVIDE	shift 41
	EQ	shift 40
	NEQ	shift 39
	LT	shift 38
	LE	shift 37
	GT	shift 36
	GE	shift 35
	AND	shift 34
	OR	shift 33
	ELSE	shift 108

	bool	goto 32
	comp	goto 31
	op	goto 30

	.	reduce by rule 70


state 93:

	expP : exp SEMICOLON expP .  (reduce by rule 21)



	.	reduce by rule 21


state 94:

	record : ID LBRACE ID EQ . exp recP RBRACE 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16

	exp	goto 109
	lvalue	goto 14
	unit	goto 13
	negation	goto 12
	comparison	goto 11
	arithmetic	goto 10
	boolcomp	goto 9
	record	goto 8
	array	goto 7
	assignment	goto 6
	ifThenElse	goto 5
	ifThen	goto 4
	let	goto 3
	while	goto 2
	forloop	goto 1

	.	error


state 95:

	array : ID LBRACK exp RBRACK . OF exp 

	OF	shift 110


	.	error


state 96:

	exp : ID LPAREN args RPAREN .  (reduce by rule 19)



	.	reduce by rule 19


state 97:

	args : exp COMMA . args 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16

	exp	goto 82
	lvalue	goto 14
	unit	goto 13
	negation	goto 12
	comparison	goto 11
	arithmetic	goto 10
	boolcomp	goto 9
	record	goto 8
	array	goto 7
	assignment	goto 6
	ifThenElse	goto 5
	ifThen	goto 4
	let	goto 3
	args	goto 111
	while	goto 2
	forloop	goto 1

	.	error


state 98:

	let : LET decs IN expseq END .  (reduce by rule 73)



	.	reduce by rule 73


state 99:

	tydec : TYPE ID EQ ty .  (reduce by rule 53)



	.	reduce by rule 53


state 100:

	ty : ARRAY . OF ID 

	OF	shift 112


	.	error


state 101:

	ty : LBRACE . tyfields RBRACE 

	ID	shift 106

	tyfields	goto 113

	.	reduce by rule 57


state 102:

	ty : ID .  (reduce by rule 54)



	.	reduce by rule 54


state 103:

	vardec : VAR ID ASSIGN exp .  (reduce by rule 61)
	comparison : exp . comp exp 
	arithmetic : exp . op exp 
	boolcomp : exp . bool exp 

	PLUS	shift 44
	MINUS	shift 43
	TIMES	shift 42
	DIVIDE	shift 41
	EQ	shift 40
	NEQ	shift 39
	LT	shift 38
	LE	shift 37
	GT	shift 36
	GE	shift 35
	AND	shift 34
	OR	shift 33

	bool	goto 32
	comp	goto 31
	op	goto 30

	.	reduce by rule 61


state 104:

	vardec : VAR ID COLON ID . ASSIGN exp 

	ASSIGN	shift 114


	.	error


state 105:

	fundec : FUNCTION ID LPAREN tyfields . RPAREN EQ exp 
	fundec : FUNCTION ID LPAREN tyfields . RPAREN COLON ID EQ exp 

	RPAREN	shift 115


	.	error


state 106:

	tyfields : ID . COLON ID tyfieldsP 

	COLON	shift 116


	.	error


state 107:

	forloop : FOR ID ASSIGN exp TO . exp DO exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16

	exp	goto 117
	lvalue	goto 14
	unit	goto 13
	negation	goto 12
	comparison	goto 11
	arithmetic	goto 10
	boolcomp	goto 9
	record	goto 8
	array	goto 7
	assignment	goto 6
	ifThenElse	goto 5
	ifThen	goto 4
	let	goto 3
	while	goto 2
	forloop	goto 1

	.	error


state 108:

	ifThenElse : IF exp THEN exp ELSE . exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16

	exp	goto 118
	lvalue	goto 14
	unit	goto 13
	negation	goto 12
	comparison	goto 11
	arithmetic	goto 10
	boolcomp	goto 9
	record	goto 8
	array	goto 7
	assignment	goto 6
	ifThenElse	goto 5
	ifThen	goto 4
	let	goto 3
	while	goto 2
	forloop	goto 1

	.	error


state 109:

	comparison : exp . comp exp 
	arithmetic : exp . op exp 
	boolcomp : exp . bool exp 
	record : ID LBRACE ID EQ exp . recP RBRACE 

	COMMA	shift 120
	PLUS	shift 44
	MINUS	shift 43
	TIMES	shift 42
	DIVIDE	shift 41
	EQ	shift 40
	NEQ	shift 39
	LT	shift 38
	LE	shift 37
	GT	shift 36
	GE	shift 35
	AND	shift 34
	OR	shift 33

	bool	goto 32
	comp	goto 31
	op	goto 30
	recP	goto 119

	.	reduce by rule 46


state 110:

	array : ID LBRACK exp RBRACK OF . exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16

	exp	goto 121
	lvalue	goto 14
	unit	goto 13
	negation	goto 12
	comparison	goto 11
	arithmetic	goto 10
	boolcomp	goto 9
	record	goto 8
	array	goto 7
	assignment	goto 6
	ifThenElse	goto 5
	ifThen	goto 4
	let	goto 3
	while	goto 2
	forloop	goto 1

	.	error


state 111:

	args : exp COMMA args .  (reduce by rule 25)



	.	reduce by rule 25


state 112:

	ty : ARRAY OF . ID 

	ID	shift 122


	.	error


state 113:

	ty : LBRACE tyfields . RBRACE 

	RBRACE	shift 123


	.	error


state 114:

	vardec : VAR ID COLON ID ASSIGN . exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16

	exp	goto 124
	lvalue	goto 14
	unit	goto 13
	negation	goto 12
	comparison	goto 11
	arithmetic	goto 10
	boolcomp	goto 9
	record	goto 8
	array	goto 7
	assignment	goto 6
	ifThenElse	goto 5
	ifThen	goto 4
	let	goto 3
	while	goto 2
	forloop	goto 1

	.	error


state 115:

	fundec : FUNCTION ID LPAREN tyfields RPAREN . EQ exp 
	fundec : FUNCTION ID LPAREN tyfields RPAREN . COLON ID EQ exp 

	COLON	shift 126
	EQ	shift 125


	.	error


state 116:

	tyfields : ID COLON . ID tyfieldsP 

	ID	shift 127


	.	error


state 117:

	comparison : exp . comp exp 
	arithmetic : exp . op exp 
	boolcomp : exp . bool exp 
	forloop : FOR ID ASSIGN exp TO exp . DO exp 

	PLUS	shift 44
	MINUS	shift 43
	TIMES	shift 42
	DIVIDE	shift 41
	EQ	shift 40
	NEQ	shift 39
	LT	shift 38
	LE	shift 37
	GT	shift 36
	GE	shift 35
	AND	shift 34
	OR	shift 33
	DO	shift 128

	bool	goto 32
	comp	goto 31
	op	goto 30

	.	error

error:  state 118: shift/reduce conflict (shift OR, reduce by rule 69)
error:  state 118: shift/reduce conflict (shift AND, reduce by rule 69)
error:  state 118: shift/reduce conflict (shift GE, reduce by rule 69)
error:  state 118: shift/reduce conflict (shift GT, reduce by rule 69)
error:  state 118: shift/reduce conflict (shift LE, reduce by rule 69)
error:  state 118: shift/reduce conflict (shift LT, reduce by rule 69)
error:  state 118: shift/reduce conflict (shift NEQ, reduce by rule 69)
error:  state 118: shift/reduce conflict (shift EQ, reduce by rule 69)
error:  state 118: shift/reduce conflict (shift DIVIDE, reduce by rule 69)
error:  state 118: shift/reduce conflict (shift TIMES, reduce by rule 69)
error:  state 118: shift/reduce conflict (shift MINUS, reduce by rule 69)
error:  state 118: shift/reduce conflict (shift PLUS, reduce by rule 69)

state 118:

	comparison : exp . comp exp 
	arithmetic : exp . op exp 
	boolcomp : exp . bool exp 
	ifThenElse : IF exp THEN exp ELSE exp .  (reduce by rule 69)

	PLUS	shift 44
	MINUS	shift 43
	TIMES	shift 42
	DIVIDE	shift 41
	EQ	shift 40
	NEQ	shift 39
	LT	shift 38
	LE	shift 37
	GT	shift 36
	GE	shift 35
	AND	shift 34
	OR	shift 33

	bool	goto 32
	comp	goto 31
	op	goto 30

	.	reduce by rule 69


state 119:

	record : ID LBRACE ID EQ exp recP . RBRACE 

	RBRACE	shift 129


	.	error


state 120:

	recP : COMMA . ID EQ exp recP 

	ID	shift 130


	.	error

error:  state 121: shift/reduce conflict (shift OR, reduce by rule 47)
error:  state 121: shift/reduce conflict (shift AND, reduce by rule 47)
error:  state 121: shift/reduce conflict (shift GE, reduce by rule 47)
error:  state 121: shift/reduce conflict (shift GT, reduce by rule 47)
error:  state 121: shift/reduce conflict (shift LE, reduce by rule 47)
error:  state 121: shift/reduce conflict (shift LT, reduce by rule 47)
error:  state 121: shift/reduce conflict (shift NEQ, reduce by rule 47)
error:  state 121: shift/reduce conflict (shift EQ, reduce by rule 47)
error:  state 121: shift/reduce conflict (shift DIVIDE, reduce by rule 47)
error:  state 121: shift/reduce conflict (shift TIMES, reduce by rule 47)
error:  state 121: shift/reduce conflict (shift MINUS, reduce by rule 47)
error:  state 121: shift/reduce conflict (shift PLUS, reduce by rule 47)

state 121:

	comparison : exp . comp exp 
	arithmetic : exp . op exp 
	boolcomp : exp . bool exp 
	array : ID LBRACK exp RBRACK OF exp .  (reduce by rule 47)

	PLUS	shift 44
	MINUS	shift 43
	TIMES	shift 42
	DIVIDE	shift 41
	EQ	shift 40
	NEQ	shift 39
	LT	shift 38
	LE	shift 37
	GT	shift 36
	GE	shift 35
	AND	shift 34
	OR	shift 33

	bool	goto 32
	comp	goto 31
	op	goto 30

	.	reduce by rule 47


state 122:

	ty : ARRAY OF ID .  (reduce by rule 56)



	.	reduce by rule 56


state 123:

	ty : LBRACE tyfields RBRACE .  (reduce by rule 55)



	.	reduce by rule 55


state 124:

	vardec : VAR ID COLON ID ASSIGN exp .  (reduce by rule 62)
	comparison : exp . comp exp 
	arithmetic : exp . op exp 
	boolcomp : exp . bool exp 

	PLUS	shift 44
	MINUS	shift 43
	TIMES	shift 42
	DIVIDE	shift 41
	EQ	shift 40
	NEQ	shift 39
	LT	shift 38
	LE	shift 37
	GT	shift 36
	GE	shift 35
	AND	shift 34
	OR	shift 33

	bool	goto 32
	comp	goto 31
	op	goto 30

	.	reduce by rule 62


state 125:

	fundec : FUNCTION ID LPAREN tyfields RPAREN EQ . exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16

	exp	goto 131
	lvalue	goto 14
	unit	goto 13
	negation	goto 12
	comparison	goto 11
	arithmetic	goto 10
	boolcomp	goto 9
	record	goto 8
	array	goto 7
	assignment	goto 6
	ifThenElse	goto 5
	ifThen	goto 4
	let	goto 3
	while	goto 2
	forloop	goto 1

	.	error


state 126:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON . ID EQ exp 

	ID	shift 132


	.	error


state 127:

	tyfields : ID COLON ID . tyfieldsP 

	COMMA	shift 134

	tyfieldsP	goto 133

	.	reduce by rule 59


state 128:

	forloop : FOR ID ASSIGN exp TO exp DO . exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16

	exp	goto 135
	lvalue	goto 14
	unit	goto 13
	negation	goto 12
	comparison	goto 11
	arithmetic	goto 10
	boolcomp	goto 9
	record	goto 8
	array	goto 7
	assignment	goto 6
	ifThenElse	goto 5
	ifThen	goto 4
	let	goto 3
	while	goto 2
	forloop	goto 1

	.	error


state 129:

	record : ID LBRACE ID EQ exp recP RBRACE .  (reduce by rule 44)



	.	reduce by rule 44


state 130:

	recP : COMMA ID . EQ exp recP 

	EQ	shift 136


	.	error


state 131:

	fundec : FUNCTION ID LPAREN tyfields RPAREN EQ exp .  (reduce by rule 63)
	comparison : exp . comp exp 
	arithmetic : exp . op exp 
	boolcomp : exp . bool exp 

	PLUS	shift 44
	MINUS	shift 43
	TIMES	shift 42
	DIVIDE	shift 41
	EQ	shift 40
	NEQ	shift 39
	LT	shift 38
	LE	shift 37
	GT	shift 36
	GE	shift 35
	AND	shift 34
	OR	shift 33

	bool	goto 32
	comp	goto 31
	op	goto 30

	.	reduce by rule 63


state 132:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID . EQ exp 

	EQ	shift 137


	.	error


state 133:

	tyfields : ID COLON ID tyfieldsP .  (reduce by rule 58)



	.	reduce by rule 58


state 134:

	tyfieldsP : COMMA . ID COLON ID tyfieldsP 

	ID	shift 138


	.	error

error:  state 135: shift/reduce conflict (shift OR, reduce by rule 72)
error:  state 135: shift/reduce conflict (shift AND, reduce by rule 72)
error:  state 135: shift/reduce conflict (shift GE, reduce by rule 72)
error:  state 135: shift/reduce conflict (shift GT, reduce by rule 72)
error:  state 135: shift/reduce conflict (shift LE, reduce by rule 72)
error:  state 135: shift/reduce conflict (shift LT, reduce by rule 72)
error:  state 135: shift/reduce conflict (shift NEQ, reduce by rule 72)
error:  state 135: shift/reduce conflict (shift EQ, reduce by rule 72)
error:  state 135: shift/reduce conflict (shift DIVIDE, reduce by rule 72)
error:  state 135: shift/reduce conflict (shift TIMES, reduce by rule 72)
error:  state 135: shift/reduce conflict (shift MINUS, reduce by rule 72)
error:  state 135: shift/reduce conflict (shift PLUS, reduce by rule 72)

state 135:

	comparison : exp . comp exp 
	arithmetic : exp . op exp 
	boolcomp : exp . bool exp 
	forloop : FOR ID ASSIGN exp TO exp DO exp .  (reduce by rule 72)

	PLUS	shift 44
	MINUS	shift 43
	TIMES	shift 42
	DIVIDE	shift 41
	EQ	shift 40
	NEQ	shift 39
	LT	shift 38
	LE	shift 37
	GT	shift 36
	GE	shift 35
	AND	shift 34
	OR	shift 33

	bool	goto 32
	comp	goto 31
	op	goto 30

	.	reduce by rule 72


state 136:

	recP : COMMA ID EQ . exp recP 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16

	exp	goto 139
	lvalue	goto 14
	unit	goto 13
	negation	goto 12
	comparison	goto 11
	arithmetic	goto 10
	boolcomp	goto 9
	record	goto 8
	array	goto 7
	assignment	goto 6
	ifThenElse	goto 5
	ifThen	goto 4
	let	goto 3
	while	goto 2
	forloop	goto 1

	.	error


state 137:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ . exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16

	exp	goto 140
	lvalue	goto 14
	unit	goto 13
	negation	goto 12
	comparison	goto 11
	arithmetic	goto 10
	boolcomp	goto 9
	record	goto 8
	array	goto 7
	assignment	goto 6
	ifThenElse	goto 5
	ifThen	goto 4
	let	goto 3
	while	goto 2
	forloop	goto 1

	.	error


state 138:

	tyfieldsP : COMMA ID . COLON ID tyfieldsP 

	COLON	shift 141


	.	error


state 139:

	comparison : exp . comp exp 
	arithmetic : exp . op exp 
	boolcomp : exp . bool exp 
	recP : COMMA ID EQ exp . recP 

	COMMA	shift 120
	PLUS	shift 44
	MINUS	shift 43
	TIMES	shift 42
	DIVIDE	shift 41
	EQ	shift 40
	NEQ	shift 39
	LT	shift 38
	LE	shift 37
	GT	shift 36
	GE	shift 35
	AND	shift 34
	OR	shift 33

	bool	goto 32
	comp	goto 31
	op	goto 30
	recP	goto 142

	.	reduce by rule 46


state 140:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp .  (reduce by rule 64)
	comparison : exp . comp exp 
	arithmetic : exp . op exp 
	boolcomp : exp . bool exp 

	PLUS	shift 44
	MINUS	shift 43
	TIMES	shift 42
	DIVIDE	shift 41
	EQ	shift 40
	NEQ	shift 39
	LT	shift 38
	LE	shift 37
	GT	shift 36
	GE	shift 35
	AND	shift 34
	OR	shift 33

	bool	goto 32
	comp	goto 31
	op	goto 30

	.	reduce by rule 64


state 141:

	tyfieldsP : COMMA ID COLON . ID tyfieldsP 

	ID	shift 143


	.	error


state 142:

	recP : COMMA ID EQ exp recP .  (reduce by rule 45)



	.	reduce by rule 45


state 143:

	tyfieldsP : COMMA ID COLON ID . tyfieldsP 

	COMMA	shift 134

	tyfieldsP	goto 144

	.	reduce by rule 59


state 144:

	tyfieldsP : COMMA ID COLON ID tyfieldsP .  (reduce by rule 60)



	.	reduce by rule 60


state 145:


	EOF	accept


	.	error

375 of 811 action table entries left after compaction
519 goto table entries
