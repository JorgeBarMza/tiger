
state 0:

	program : . exp 

	ID	shift 29
	INT	shift 28
	STRING	shift 27
	LPAREN	shift 26
	MINUS	shift 25
	IF	shift 24
	WHILE	shift 23
	FOR	shift 22
	LET	shift 21
	BREAK	shift 20
	NIL	shift 19

	exp	goto 18
	program	goto 156
	lvalue	goto 17
	unit	goto 16
	negation	goto 15
	comparison	goto 14
	arithmetic	goto 13
	boolcomp	goto 12
	record	goto 11
	array	goto 10
	assignment	goto 9
	ifThenElse	goto 8
	ifThen	goto 7
	let	goto 6
	while	goto 5
	forloop	goto 4
	lval	goto 3
	sequence	goto 2
	funCall	goto 1

	.	error


state 1:

	exp : funCall .  (reduce by rule 19)



	.	reduce by rule 19


state 2:

	exp : sequence .  (reduce by rule 2)



	.	reduce by rule 2


state 3:

	lvalue : lval .  (reduce by rule 65)
	lval : lval . DOT ID 
	lval : lval . LBRACK exp RBRACK 

	LBRACK	shift 31
	DOT	shift 30


	.	reduce by rule 65


state 4:

	exp : forloop .  (reduce by rule 16)



	.	reduce by rule 16


state 5:

	exp : while .  (reduce by rule 15)



	.	reduce by rule 15


state 6:

	exp : let .  (reduce by rule 20)



	.	reduce by rule 20


state 7:

	exp : ifThen .  (reduce by rule 14)



	.	reduce by rule 14


state 8:

	exp : ifThenElse .  (reduce by rule 13)



	.	reduce by rule 13


state 9:

	exp : assignment .  (reduce by rule 12)



	.	reduce by rule 12


state 10:

	exp : array .  (reduce by rule 11)



	.	reduce by rule 11


state 11:

	exp : record .  (reduce by rule 10)



	.	reduce by rule 10


state 12:

	exp : boolcomp .  (reduce by rule 9)



	.	reduce by rule 9


state 13:

	exp : arithmetic .  (reduce by rule 7)



	.	reduce by rule 7


state 14:

	exp : comparison .  (reduce by rule 8)



	.	reduce by rule 8


state 15:

	exp : negation .  (reduce by rule 6)



	.	reduce by rule 6


state 16:

	exp : unit .  (reduce by rule 18)



	.	reduce by rule 18


state 17:

	exp : lvalue .  (reduce by rule 3)
	assignment : lvalue . ASSIGN exp 

	ASSIGN	shift 32


	.	reduce by rule 3


state 18:

	program : exp .  (reduce by rule 0)
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . LT exp 
	comparison : exp . LE exp 
	comparison : exp . GT exp 
	comparison : exp . GE exp 
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	boolcomp : exp . AND exp 
	boolcomp : exp . OR exp 

	PLUS	shift 44
	MINUS	shift 43
	TIMES	shift 42
	DIVIDE	shift 41
	EQ	shift 40
	NEQ	shift 39
	LT	shift 38
	LE	shift 37
	GT	shift 36
	GE	shift 35
	AND	shift 34
	OR	shift 33


	.	reduce by rule 0


state 19:

	exp : NIL .  (reduce by rule 1)



	.	reduce by rule 1


state 20:

	exp : BREAK .  (reduce by rule 17)



	.	reduce by rule 17


state 21:

	let : LET . decs IN expseq END 

	FUNCTION	shift 52
	VAR	shift 51
	TYPE	shift 50

	decs	goto 49
	dec	goto 48
	tydec	goto 47
	vardec	goto 46
	fundec	goto 45

	.	error


state 22:

	forloop : FOR . ID ASSIGN exp TO exp DO exp 

	ID	shift 53


	.	error


state 23:

	while : WHILE . exp DO exp 

	ID	shift 29
	INT	shift 28
	STRING	shift 27
	LPAREN	shift 26
	MINUS	shift 25
	IF	shift 24
	WHILE	shift 23
	FOR	shift 22
	LET	shift 21
	BREAK	shift 20
	NIL	shift 19

	exp	goto 54
	lvalue	goto 17
	unit	goto 16
	negation	goto 15
	comparison	goto 14
	arithmetic	goto 13
	boolcomp	goto 12
	record	goto 11
	array	goto 10
	assignment	goto 9
	ifThenElse	goto 8
	ifThen	goto 7
	let	goto 6
	while	goto 5
	forloop	goto 4
	lval	goto 3
	sequence	goto 2
	funCall	goto 1

	.	error


state 24:

	ifThenElse : IF . exp THEN exp ELSE exp 
	ifThen : IF . exp THEN exp 

	ID	shift 29
	INT	shift 28
	STRING	shift 27
	LPAREN	shift 26
	MINUS	shift 25
	IF	shift 24
	WHILE	shift 23
	FOR	shift 22
	LET	shift 21
	BREAK	shift 20
	NIL	shift 19

	exp	goto 55
	lvalue	goto 17
	unit	goto 16
	negation	goto 15
	comparison	goto 14
	arithmetic	goto 13
	boolcomp	goto 12
	record	goto 11
	array	goto 10
	assignment	goto 9
	ifThenElse	goto 8
	ifThen	goto 7
	let	goto 6
	while	goto 5
	forloop	goto 4
	lval	goto 3
	sequence	goto 2
	funCall	goto 1

	.	error


state 25:

	negation : MINUS . exp 

	ID	shift 29
	INT	shift 28
	STRING	shift 27
	LPAREN	shift 26
	MINUS	shift 25
	IF	shift 24
	WHILE	shift 23
	FOR	shift 22
	LET	shift 21
	BREAK	shift 20
	NIL	shift 19

	exp	goto 56
	lvalue	goto 17
	unit	goto 16
	negation	goto 15
	comparison	goto 14
	arithmetic	goto 13
	boolcomp	goto 12
	record	goto 11
	array	goto 10
	assignment	goto 9
	ifThenElse	goto 8
	ifThen	goto 7
	let	goto 6
	while	goto 5
	forloop	goto 4
	lval	goto 3
	sequence	goto 2
	funCall	goto 1

	.	error


state 26:

	unit : LPAREN . RPAREN 
	sequence : LPAREN . expP RPAREN 

	ID	shift 29
	INT	shift 28
	STRING	shift 27
	LPAREN	shift 26
	RPAREN	shift 59
	MINUS	shift 25
	IF	shift 24
	WHILE	shift 23
	FOR	shift 22
	LET	shift 21
	BREAK	shift 20
	NIL	shift 19

	exp	goto 58
	lvalue	goto 17
	unit	goto 16
	negation	goto 15
	comparison	goto 14
	arithmetic	goto 13
	boolcomp	goto 12
	expP	goto 57
	record	goto 11
	array	goto 10
	assignment	goto 9
	ifThenElse	goto 8
	ifThen	goto 7
	let	goto 6
	while	goto 5
	forloop	goto 4
	lval	goto 3
	sequence	goto 2
	funCall	goto 1

	.	error


state 27:

	exp : STRING .  (reduce by rule 5)



	.	reduce by rule 5


state 28:

	exp : INT .  (reduce by rule 4)



	.	reduce by rule 4


state 29:

	lvalue : ID .  (reduce by rule 64)
	record : ID . LBRACE ID EQ exp recP RBRACE 
	array : ID . LBRACK exp RBRACK OF exp 
	lval : ID . DOT ID 
	lval : ID . LBRACK exp RBRACK 
	funCall : ID . LPAREN args RPAREN 

	LPAREN	shift 63
	LBRACK	shift 62
	LBRACE	shift 61
	DOT	shift 60


	.	reduce by rule 64


state 30:

	lval : lval DOT . ID 

	ID	shift 64


	.	error


state 31:

	lval : lval LBRACK . exp RBRACK 

	ID	shift 29
	INT	shift 28
	STRING	shift 27
	LPAREN	shift 26
	MINUS	shift 25
	IF	shift 24
	WHILE	shift 23
	FOR	shift 22
	LET	shift 21
	BREAK	shift 20
	NIL	shift 19

	exp	goto 65
	lvalue	goto 17
	unit	goto 16
	negation	goto 15
	comparison	goto 14
	arithmetic	goto 13
	boolcomp	goto 12
	record	goto 11
	array	goto 10
	assignment	goto 9
	ifThenElse	goto 8
	ifThen	goto 7
	let	goto 6
	while	goto 5
	forloop	goto 4
	lval	goto 3
	sequence	goto 2
	funCall	goto 1

	.	error


state 32:

	assignment : lvalue ASSIGN . exp 

	ID	shift 29
	INT	shift 28
	STRING	shift 27
	LPAREN	shift 26
	MINUS	shift 25
	IF	shift 24
	WHILE	shift 23
	FOR	shift 22
	LET	shift 21
	BREAK	shift 20
	NIL	shift 19

	exp	goto 66
	lvalue	goto 17
	unit	goto 16
	negation	goto 15
	comparison	goto 14
	arithmetic	goto 13
	boolcomp	goto 12
	record	goto 11
	array	goto 10
	assignment	goto 9
	ifThenElse	goto 8
	ifThen	goto 7
	let	goto 6
	while	goto 5
	forloop	goto 4
	lval	goto 3
	sequence	goto 2
	funCall	goto 1

	.	error


state 33:

	boolcomp : exp OR . exp 

	ID	shift 29
	INT	shift 28
	STRING	shift 27
	LPAREN	shift 26
	MINUS	shift 25
	IF	shift 24
	WHILE	shift 23
	FOR	shift 22
	LET	shift 21
	BREAK	shift 20
	NIL	shift 19

	exp	goto 67
	lvalue	goto 17
	unit	goto 16
	negation	goto 15
	comparison	goto 14
	arithmetic	goto 13
	boolcomp	goto 12
	record	goto 11
	array	goto 10
	assignment	goto 9
	ifThenElse	goto 8
	ifThen	goto 7
	let	goto 6
	while	goto 5
	forloop	goto 4
	lval	goto 3
	sequence	goto 2
	funCall	goto 1

	.	error


state 34:

	boolcomp : exp AND . exp 

	ID	shift 29
	INT	shift 28
	STRING	shift 27
	LPAREN	shift 26
	MINUS	shift 25
	IF	shift 24
	WHILE	shift 23
	FOR	shift 22
	LET	shift 21
	BREAK	shift 20
	NIL	shift 19

	exp	goto 68
	lvalue	goto 17
	unit	goto 16
	negation	goto 15
	comparison	goto 14
	arithmetic	goto 13
	boolcomp	goto 12
	record	goto 11
	array	goto 10
	assignment	goto 9
	ifThenElse	goto 8
	ifThen	goto 7
	let	goto 6
	while	goto 5
	forloop	goto 4
	lval	goto 3
	sequence	goto 2
	funCall	goto 1

	.	error


state 35:

	comparison : exp GE . exp 

	ID	shift 29
	INT	shift 28
	STRING	shift 27
	LPAREN	shift 26
	MINUS	shift 25
	IF	shift 24
	WHILE	shift 23
	FOR	shift 22
	LET	shift 21
	BREAK	shift 20
	NIL	shift 19

	exp	goto 69
	lvalue	goto 17
	unit	goto 16
	negation	goto 15
	comparison	goto 14
	arithmetic	goto 13
	boolcomp	goto 12
	record	goto 11
	array	goto 10
	assignment	goto 9
	ifThenElse	goto 8
	ifThen	goto 7
	let	goto 6
	while	goto 5
	forloop	goto 4
	lval	goto 3
	sequence	goto 2
	funCall	goto 1

	.	error


state 36:

	comparison : exp GT . exp 

	ID	shift 29
	INT	shift 28
	STRING	shift 27
	LPAREN	shift 26
	MINUS	shift 25
	IF	shift 24
	WHILE	shift 23
	FOR	shift 22
	LET	shift 21
	BREAK	shift 20
	NIL	shift 19

	exp	goto 70
	lvalue	goto 17
	unit	goto 16
	negation	goto 15
	comparison	goto 14
	arithmetic	goto 13
	boolcomp	goto 12
	record	goto 11
	array	goto 10
	assignment	goto 9
	ifThenElse	goto 8
	ifThen	goto 7
	let	goto 6
	while	goto 5
	forloop	goto 4
	lval	goto 3
	sequence	goto 2
	funCall	goto 1

	.	error


state 37:

	comparison : exp LE . exp 

	ID	shift 29
	INT	shift 28
	STRING	shift 27
	LPAREN	shift 26
	MINUS	shift 25
	IF	shift 24
	WHILE	shift 23
	FOR	shift 22
	LET	shift 21
	BREAK	shift 20
	NIL	shift 19

	exp	goto 71
	lvalue	goto 17
	unit	goto 16
	negation	goto 15
	comparison	goto 14
	arithmetic	goto 13
	boolcomp	goto 12
	record	goto 11
	array	goto 10
	assignment	goto 9
	ifThenElse	goto 8
	ifThen	goto 7
	let	goto 6
	while	goto 5
	forloop	goto 4
	lval	goto 3
	sequence	goto 2
	funCall	goto 1

	.	error


state 38:

	comparison : exp LT . exp 

	ID	shift 29
	INT	shift 28
	STRING	shift 27
	LPAREN	shift 26
	MINUS	shift 25
	IF	shift 24
	WHILE	shift 23
	FOR	shift 22
	LET	shift 21
	BREAK	shift 20
	NIL	shift 19

	exp	goto 72
	lvalue	goto 17
	unit	goto 16
	negation	goto 15
	comparison	goto 14
	arithmetic	goto 13
	boolcomp	goto 12
	record	goto 11
	array	goto 10
	assignment	goto 9
	ifThenElse	goto 8
	ifThen	goto 7
	let	goto 6
	while	goto 5
	forloop	goto 4
	lval	goto 3
	sequence	goto 2
	funCall	goto 1

	.	error


state 39:

	comparison : exp NEQ . exp 

	ID	shift 29
	INT	shift 28
	STRING	shift 27
	LPAREN	shift 26
	MINUS	shift 25
	IF	shift 24
	WHILE	shift 23
	FOR	shift 22
	LET	shift 21
	BREAK	shift 20
	NIL	shift 19

	exp	goto 73
	lvalue	goto 17
	unit	goto 16
	negation	goto 15
	comparison	goto 14
	arithmetic	goto 13
	boolcomp	goto 12
	record	goto 11
	array	goto 10
	assignment	goto 9
	ifThenElse	goto 8
	ifThen	goto 7
	let	goto 6
	while	goto 5
	forloop	goto 4
	lval	goto 3
	sequence	goto 2
	funCall	goto 1

	.	error


state 40:

	comparison : exp EQ . exp 

	ID	shift 29
	INT	shift 28
	STRING	shift 27
	LPAREN	shift 26
	MINUS	shift 25
	IF	shift 24
	WHILE	shift 23
	FOR	shift 22
	LET	shift 21
	BREAK	shift 20
	NIL	shift 19

	exp	goto 74
	lvalue	goto 17
	unit	goto 16
	negation	goto 15
	comparison	goto 14
	arithmetic	goto 13
	boolcomp	goto 12
	record	goto 11
	array	goto 10
	assignment	goto 9
	ifThenElse	goto 8
	ifThen	goto 7
	let	goto 6
	while	goto 5
	forloop	goto 4
	lval	goto 3
	sequence	goto 2
	funCall	goto 1

	.	error


state 41:

	arithmetic : exp DIVIDE . exp 

	ID	shift 29
	INT	shift 28
	STRING	shift 27
	LPAREN	shift 26
	MINUS	shift 25
	IF	shift 24
	WHILE	shift 23
	FOR	shift 22
	LET	shift 21
	BREAK	shift 20
	NIL	shift 19

	exp	goto 75
	lvalue	goto 17
	unit	goto 16
	negation	goto 15
	comparison	goto 14
	arithmetic	goto 13
	boolcomp	goto 12
	record	goto 11
	array	goto 10
	assignment	goto 9
	ifThenElse	goto 8
	ifThen	goto 7
	let	goto 6
	while	goto 5
	forloop	goto 4
	lval	goto 3
	sequence	goto 2
	funCall	goto 1

	.	error


state 42:

	arithmetic : exp TIMES . exp 

	ID	shift 29
	INT	shift 28
	STRING	shift 27
	LPAREN	shift 26
	MINUS	shift 25
	IF	shift 24
	WHILE	shift 23
	FOR	shift 22
	LET	shift 21
	BREAK	shift 20
	NIL	shift 19

	exp	goto 76
	lvalue	goto 17
	unit	goto 16
	negation	goto 15
	comparison	goto 14
	arithmetic	goto 13
	boolcomp	goto 12
	record	goto 11
	array	goto 10
	assignment	goto 9
	ifThenElse	goto 8
	ifThen	goto 7
	let	goto 6
	while	goto 5
	forloop	goto 4
	lval	goto 3
	sequence	goto 2
	funCall	goto 1

	.	error


state 43:

	arithmetic : exp MINUS . exp 

	ID	shift 29
	INT	shift 28
	STRING	shift 27
	LPAREN	shift 26
	MINUS	shift 25
	IF	shift 24
	WHILE	shift 23
	FOR	shift 22
	LET	shift 21
	BREAK	shift 20
	NIL	shift 19

	exp	goto 77
	lvalue	goto 17
	unit	goto 16
	negation	goto 15
	comparison	goto 14
	arithmetic	goto 13
	boolcomp	goto 12
	record	goto 11
	array	goto 10
	assignment	goto 9
	ifThenElse	goto 8
	ifThen	goto 7
	let	goto 6
	while	goto 5
	forloop	goto 4
	lval	goto 3
	sequence	goto 2
	funCall	goto 1

	.	error


state 44:

	arithmetic : exp PLUS . exp 

	ID	shift 29
	INT	shift 28
	STRING	shift 27
	LPAREN	shift 26
	MINUS	shift 25
	IF	shift 24
	WHILE	shift 23
	FOR	shift 22
	LET	shift 21
	BREAK	shift 20
	NIL	shift 19

	exp	goto 78
	lvalue	goto 17
	unit	goto 16
	negation	goto 15
	comparison	goto 14
	arithmetic	goto 13
	boolcomp	goto 12
	record	goto 11
	array	goto 10
	assignment	goto 9
	ifThenElse	goto 8
	ifThen	goto 7
	let	goto 6
	while	goto 5
	forloop	goto 4
	lval	goto 3
	sequence	goto 2
	funCall	goto 1

	.	error


state 45:

	dec : fundec .  (reduce by rule 51)



	.	reduce by rule 51


state 46:

	dec : vardec .  (reduce by rule 50)



	.	reduce by rule 50


state 47:

	dec : tydec .  (reduce by rule 49)



	.	reduce by rule 49


state 48:

	decs : dec . decs 
	decs : dec .  (reduce by rule 48)

	FUNCTION	shift 52
	VAR	shift 51
	TYPE	shift 50

	decs	goto 79
	dec	goto 48
	tydec	goto 47
	vardec	goto 46
	fundec	goto 45

	.	reduce by rule 48


state 49:

	let : LET decs . IN expseq END 

	IN	shift 80


	.	error


state 50:

	tydec : TYPE . ID EQ ty 

	ID	shift 81


	.	error


state 51:

	vardec : VAR . ID ASSIGN exp 
	vardec : VAR . ID COLON ID ASSIGN exp 

	ID	shift 82


	.	error


state 52:

	fundec : FUNCTION . ID LPAREN tyfields RPAREN EQ exp 
	fundec : FUNCTION . ID LPAREN tyfields RPAREN COLON ID EQ exp 

	ID	shift 83


	.	error


state 53:

	forloop : FOR ID . ASSIGN exp TO exp DO exp 

	ASSIGN	shift 84


	.	error


state 54:

	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . LT exp 
	comparison : exp . LE exp 
	comparison : exp . GT exp 
	comparison : exp . GE exp 
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	boolcomp : exp . AND exp 
	boolcomp : exp . OR exp 
	while : WHILE exp . DO exp 

	PLUS	shift 44
	MINUS	shift 43
	TIMES	shift 42
	DIVIDE	shift 41
	EQ	shift 40
	NEQ	shift 39
	LT	shift 38
	LE	shift 37
	GT	shift 36
	GE	shift 35
	AND	shift 34
	OR	shift 33
	DO	shift 85


	.	error


state 55:

	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . LT exp 
	comparison : exp . LE exp 
	comparison : exp . GT exp 
	comparison : exp . GE exp 
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	boolcomp : exp . AND exp 
	boolcomp : exp . OR exp 
	ifThenElse : IF exp . THEN exp ELSE exp 
	ifThen : IF exp . THEN exp 

	PLUS	shift 44
	MINUS	shift 43
	TIMES	shift 42
	DIVIDE	shift 41
	EQ	shift 40
	NEQ	shift 39
	LT	shift 38
	LE	shift 37
	GT	shift 36
	GE	shift 35
	AND	shift 34
	OR	shift 33
	THEN	shift 86


	.	error


state 56:

	negation : MINUS exp .  (reduce by rule 41)
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . LT exp 
	comparison : exp . LE exp 
	comparison : exp . GT exp 
	comparison : exp . GE exp 
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	boolcomp : exp . AND exp 
	boolcomp : exp . OR exp 

	TIMES	shift 42
	DIVIDE	shift 41


	.	reduce by rule 41


state 57:

	sequence : LPAREN expP . RPAREN 

	RPAREN	shift 87


	.	error


state 58:

	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . LT exp 
	comparison : exp . LE exp 
	comparison : exp . GT exp 
	comparison : exp . GE exp 
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	boolcomp : exp . AND exp 
	boolcomp : exp . OR exp 
	expP : exp . SEMICOLON expP 
	expP : exp .  (reduce by rule 22)

	SEMICOLON	shift 88
	PLUS	shift 44
	MINUS	shift 43
	TIMES	shift 42
	DIVIDE	shift 41
	EQ	shift 40
	NEQ	shift 39
	LT	shift 38
	LE	shift 37
	GT	shift 36
	GE	shift 35
	AND	shift 34
	OR	shift 33


	.	reduce by rule 22


state 59:

	unit : LPAREN RPAREN .  (reduce by rule 42)



	.	reduce by rule 42


state 60:

	lval : ID DOT . ID 

	ID	shift 89


	.	error


state 61:

	record : ID LBRACE . ID EQ exp recP RBRACE 

	ID	shift 90


	.	error


state 62:

	array : ID LBRACK . exp RBRACK OF exp 
	lval : ID LBRACK . exp RBRACK 

	ID	shift 29
	INT	shift 28
	STRING	shift 27
	LPAREN	shift 26
	MINUS	shift 25
	IF	shift 24
	WHILE	shift 23
	FOR	shift 22
	LET	shift 21
	BREAK	shift 20
	NIL	shift 19

	exp	goto 91
	lvalue	goto 17
	unit	goto 16
	negation	goto 15
	comparison	goto 14
	arithmetic	goto 13
	boolcomp	goto 12
	record	goto 11
	array	goto 10
	assignment	goto 9
	ifThenElse	goto 8
	ifThen	goto 7
	let	goto 6
	while	goto 5
	forloop	goto 4
	lval	goto 3
	sequence	goto 2
	funCall	goto 1

	.	error


state 63:

	funCall : ID LPAREN . args RPAREN 

	ID	shift 29
	INT	shift 28
	STRING	shift 27
	LPAREN	shift 26
	MINUS	shift 25
	IF	shift 24
	WHILE	shift 23
	FOR	shift 22
	LET	shift 21
	BREAK	shift 20
	NIL	shift 19

	exp	goto 93
	lvalue	goto 17
	unit	goto 16
	negation	goto 15
	comparison	goto 14
	arithmetic	goto 13
	boolcomp	goto 12
	record	goto 11
	array	goto 10
	assignment	goto 9
	ifThenElse	goto 8
	ifThen	goto 7
	let	goto 6
	args	goto 92
	while	goto 5
	forloop	goto 4
	lval	goto 3
	sequence	goto 2
	funCall	goto 1

	.	reduce by rule 28


state 64:

	lval : lval DOT ID .  (reduce by rule 67)



	.	reduce by rule 67


state 65:

	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . LT exp 
	comparison : exp . LE exp 
	comparison : exp . GT exp 
	comparison : exp . GE exp 
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	boolcomp : exp . AND exp 
	boolcomp : exp . OR exp 
	lval : lval LBRACK exp . RBRACK 

	RBRACK	shift 94
	PLUS	shift 44
	MINUS	shift 43
	TIMES	shift 42
	DIVIDE	shift 41
	EQ	shift 40
	NEQ	shift 39
	LT	shift 38
	LE	shift 37
	GT	shift 36
	GE	shift 35
	AND	shift 34
	OR	shift 33


	.	error


state 66:

	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . LT exp 
	comparison : exp . LE exp 
	comparison : exp . GT exp 
	comparison : exp . GE exp 
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	boolcomp : exp . AND exp 
	boolcomp : exp . OR exp 
	assignment : lvalue ASSIGN exp .  (reduce by rule 71)

	PLUS	shift 44
	MINUS	shift 43
	TIMES	shift 42
	DIVIDE	shift 41
	EQ	shift 40
	NEQ	shift 39
	LT	shift 38
	LE	shift 37
	GT	shift 36
	GE	shift 35
	AND	shift 34
	OR	shift 33


	.	reduce by rule 71


state 67:

	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . LT exp 
	comparison : exp . LE exp 
	comparison : exp . GT exp 
	comparison : exp . GE exp 
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	boolcomp : exp . AND exp 
	boolcomp : exp . OR exp 
	boolcomp : exp OR exp .  (reduce by rule 40)

	PLUS	shift 44
	MINUS	shift 43
	TIMES	shift 42
	DIVIDE	shift 41
	EQ	shift 40
	NEQ	shift 39
	LT	shift 38
	LE	shift 37
	GT	shift 36
	GE	shift 35


	.	reduce by rule 40


state 68:

	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . LT exp 
	comparison : exp . LE exp 
	comparison : exp . GT exp 
	comparison : exp . GE exp 
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	boolcomp : exp . AND exp 
	boolcomp : exp AND exp .  (reduce by rule 39)
	boolcomp : exp . OR exp 

	PLUS	shift 44
	MINUS	shift 43
	TIMES	shift 42
	DIVIDE	shift 41
	EQ	shift 40
	NEQ	shift 39
	LT	shift 38
	LE	shift 37
	GT	shift 36
	GE	shift 35


	.	reduce by rule 39


state 69:

	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . LT exp 
	comparison : exp . LE exp 
	comparison : exp . GT exp 
	comparison : exp . GE exp 
	comparison : exp GE exp .  (reduce by rule 38)
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	boolcomp : exp . AND exp 
	boolcomp : exp . OR exp 

	EOF	reduce by rule 38
	COMMA	reduce by rule 38
	SEMICOLON	reduce by rule 38
	RPAREN	reduce by rule 38
	RBRACK	reduce by rule 38
	RBRACE	reduce by rule 38
	PLUS	shift 44
	MINUS	shift 43
	TIMES	shift 42
	DIVIDE	shift 41
	AND	reduce by rule 38
	OR	reduce by rule 38
	THEN	reduce by rule 38
	ELSE	reduce by rule 38
	TO	reduce by rule 38
	DO	reduce by rule 38
	IN	reduce by rule 38
	END	reduce by rule 38
	FUNCTION	reduce by rule 38
	VAR	reduce by rule 38
	TYPE	reduce by rule 38


	.	error


state 70:

	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . LT exp 
	comparison : exp . LE exp 
	comparison : exp . GT exp 
	comparison : exp GT exp .  (reduce by rule 37)
	comparison : exp . GE exp 
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	boolcomp : exp . AND exp 
	boolcomp : exp . OR exp 

	EOF	reduce by rule 37
	COMMA	reduce by rule 37
	SEMICOLON	reduce by rule 37
	RPAREN	reduce by rule 37
	RBRACK	reduce by rule 37
	RBRACE	reduce by rule 37
	PLUS	shift 44
	MINUS	shift 43
	TIMES	shift 42
	DIVIDE	shift 41
	AND	reduce by rule 37
	OR	reduce by rule 37
	THEN	reduce by rule 37
	ELSE	reduce by rule 37
	TO	reduce by rule 37
	DO	reduce by rule 37
	IN	reduce by rule 37
	END	reduce by rule 37
	FUNCTION	reduce by rule 37
	VAR	reduce by rule 37
	TYPE	reduce by rule 37


	.	error


state 71:

	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . LT exp 
	comparison : exp . LE exp 
	comparison : exp LE exp .  (reduce by rule 36)
	comparison : exp . GT exp 
	comparison : exp . GE exp 
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	boolcomp : exp . AND exp 
	boolcomp : exp . OR exp 

	EOF	reduce by rule 36
	COMMA	reduce by rule 36
	SEMICOLON	reduce by rule 36
	RPAREN	reduce by rule 36
	RBRACK	reduce by rule 36
	RBRACE	reduce by rule 36
	PLUS	shift 44
	MINUS	shift 43
	TIMES	shift 42
	DIVIDE	shift 41
	AND	reduce by rule 36
	OR	reduce by rule 36
	THEN	reduce by rule 36
	ELSE	reduce by rule 36
	TO	reduce by rule 36
	DO	reduce by rule 36
	IN	reduce by rule 36
	END	reduce by rule 36
	FUNCTION	reduce by rule 36
	VAR	reduce by rule 36
	TYPE	reduce by rule 36


	.	error


state 72:

	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . LT exp 
	comparison : exp LT exp .  (reduce by rule 35)
	comparison : exp . LE exp 
	comparison : exp . GT exp 
	comparison : exp . GE exp 
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	boolcomp : exp . AND exp 
	boolcomp : exp . OR exp 

	EOF	reduce by rule 35
	COMMA	reduce by rule 35
	SEMICOLON	reduce by rule 35
	RPAREN	reduce by rule 35
	RBRACK	reduce by rule 35
	RBRACE	reduce by rule 35
	PLUS	shift 44
	MINUS	shift 43
	TIMES	shift 42
	DIVIDE	shift 41
	AND	reduce by rule 35
	OR	reduce by rule 35
	THEN	reduce by rule 35
	ELSE	reduce by rule 35
	TO	reduce by rule 35
	DO	reduce by rule 35
	IN	reduce by rule 35
	END	reduce by rule 35
	FUNCTION	reduce by rule 35
	VAR	reduce by rule 35
	TYPE	reduce by rule 35


	.	error


state 73:

	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp NEQ exp .  (reduce by rule 34)
	comparison : exp . LT exp 
	comparison : exp . LE exp 
	comparison : exp . GT exp 
	comparison : exp . GE exp 
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	boolcomp : exp . AND exp 
	boolcomp : exp . OR exp 

	EOF	reduce by rule 34
	COMMA	reduce by rule 34
	SEMICOLON	reduce by rule 34
	RPAREN	reduce by rule 34
	RBRACK	reduce by rule 34
	RBRACE	reduce by rule 34
	PLUS	shift 44
	MINUS	shift 43
	TIMES	shift 42
	DIVIDE	shift 41
	AND	reduce by rule 34
	OR	reduce by rule 34
	THEN	reduce by rule 34
	ELSE	reduce by rule 34
	TO	reduce by rule 34
	DO	reduce by rule 34
	IN	reduce by rule 34
	END	reduce by rule 34
	FUNCTION	reduce by rule 34
	VAR	reduce by rule 34
	TYPE	reduce by rule 34


	.	error


state 74:

	comparison : exp . EQ exp 
	comparison : exp EQ exp .  (reduce by rule 33)
	comparison : exp . NEQ exp 
	comparison : exp . LT exp 
	comparison : exp . LE exp 
	comparison : exp . GT exp 
	comparison : exp . GE exp 
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	boolcomp : exp . AND exp 
	boolcomp : exp . OR exp 

	EOF	reduce by rule 33
	COMMA	reduce by rule 33
	SEMICOLON	reduce by rule 33
	RPAREN	reduce by rule 33
	RBRACK	reduce by rule 33
	RBRACE	reduce by rule 33
	PLUS	shift 44
	MINUS	shift 43
	TIMES	shift 42
	DIVIDE	shift 41
	AND	reduce by rule 33
	OR	reduce by rule 33
	THEN	reduce by rule 33
	ELSE	reduce by rule 33
	TO	reduce by rule 33
	DO	reduce by rule 33
	IN	reduce by rule 33
	END	reduce by rule 33
	FUNCTION	reduce by rule 33
	VAR	reduce by rule 33
	TYPE	reduce by rule 33


	.	error


state 75:

	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . LT exp 
	comparison : exp . LE exp 
	comparison : exp . GT exp 
	comparison : exp . GE exp 
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	arithmetic : exp DIVIDE exp .  (reduce by rule 32)
	boolcomp : exp . AND exp 
	boolcomp : exp . OR exp 



	.	reduce by rule 32


state 76:

	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . LT exp 
	comparison : exp . LE exp 
	comparison : exp . GT exp 
	comparison : exp . GE exp 
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp TIMES exp .  (reduce by rule 31)
	arithmetic : exp . DIVIDE exp 
	boolcomp : exp . AND exp 
	boolcomp : exp . OR exp 



	.	reduce by rule 31


state 77:

	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . LT exp 
	comparison : exp . LE exp 
	comparison : exp . GT exp 
	comparison : exp . GE exp 
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp MINUS exp .  (reduce by rule 30)
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	boolcomp : exp . AND exp 
	boolcomp : exp . OR exp 

	TIMES	shift 42
	DIVIDE	shift 41


	.	reduce by rule 30


state 78:

	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . LT exp 
	comparison : exp . LE exp 
	comparison : exp . GT exp 
	comparison : exp . GE exp 
	arithmetic : exp . PLUS exp 
	arithmetic : exp PLUS exp .  (reduce by rule 29)
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	boolcomp : exp . AND exp 
	boolcomp : exp . OR exp 

	TIMES	shift 42
	DIVIDE	shift 41


	.	reduce by rule 29


state 79:

	decs : dec decs .  (reduce by rule 47)



	.	reduce by rule 47


state 80:

	let : LET decs IN . expseq END 

	ID	shift 29
	INT	shift 28
	STRING	shift 27
	LPAREN	shift 26
	MINUS	shift 25
	IF	shift 24
	WHILE	shift 23
	FOR	shift 22
	LET	shift 21
	BREAK	shift 20
	NIL	shift 19

	exp	goto 58
	lvalue	goto 17
	unit	goto 16
	negation	goto 15
	comparison	goto 14
	arithmetic	goto 13
	boolcomp	goto 12
	expP	goto 96
	record	goto 11
	array	goto 10
	assignment	goto 9
	ifThenElse	goto 8
	ifThen	goto 7
	let	goto 6
	expseq	goto 95
	while	goto 5
	forloop	goto 4
	lval	goto 3
	sequence	goto 2
	funCall	goto 1

	.	reduce by rule 24


state 81:

	tydec : TYPE ID . EQ ty 

	EQ	shift 97


	.	error


state 82:

	vardec : VAR ID . ASSIGN exp 
	vardec : VAR ID . COLON ID ASSIGN exp 

	COLON	shift 99
	ASSIGN	shift 98


	.	error


state 83:

	fundec : FUNCTION ID . LPAREN tyfields RPAREN EQ exp 
	fundec : FUNCTION ID . LPAREN tyfields RPAREN COLON ID EQ exp 

	LPAREN	shift 100


	.	error


state 84:

	forloop : FOR ID ASSIGN . exp TO exp DO exp 

	ID	shift 29
	INT	shift 28
	STRING	shift 27
	LPAREN	shift 26
	MINUS	shift 25
	IF	shift 24
	WHILE	shift 23
	FOR	shift 22
	LET	shift 21
	BREAK	shift 20
	NIL	shift 19

	exp	goto 101
	lvalue	goto 17
	unit	goto 16
	negation	goto 15
	comparison	goto 14
	arithmetic	goto 13
	boolcomp	goto 12
	record	goto 11
	array	goto 10
	assignment	goto 9
	ifThenElse	goto 8
	ifThen	goto 7
	let	goto 6
	while	goto 5
	forloop	goto 4
	lval	goto 3
	sequence	goto 2
	funCall	goto 1

	.	error


state 85:

	while : WHILE exp DO . exp 

	ID	shift 29
	INT	shift 28
	STRING	shift 27
	LPAREN	shift 26
	MINUS	shift 25
	IF	shift 24
	WHILE	shift 23
	FOR	shift 22
	LET	shift 21
	BREAK	shift 20
	NIL	shift 19

	exp	goto 102
	lvalue	goto 17
	unit	goto 16
	negation	goto 15
	comparison	goto 14
	arithmetic	goto 13
	boolcomp	goto 12
	record	goto 11
	array	goto 10
	assignment	goto 9
	ifThenElse	goto 8
	ifThen	goto 7
	let	goto 6
	while	goto 5
	forloop	goto 4
	lval	goto 3
	sequence	goto 2
	funCall	goto 1

	.	error


state 86:

	ifThenElse : IF exp THEN . exp ELSE exp 
	ifThen : IF exp THEN . exp 

	ID	shift 29
	INT	shift 28
	STRING	shift 27
	LPAREN	shift 26
	MINUS	shift 25
	IF	shift 24
	WHILE	shift 23
	FOR	shift 22
	LET	shift 21
	BREAK	shift 20
	NIL	shift 19

	exp	goto 103
	lvalue	goto 17
	unit	goto 16
	negation	goto 15
	comparison	goto 14
	arithmetic	goto 13
	boolcomp	goto 12
	record	goto 11
	array	goto 10
	assignment	goto 9
	ifThenElse	goto 8
	ifThen	goto 7
	let	goto 6
	while	goto 5
	forloop	goto 4
	lval	goto 3
	sequence	goto 2
	funCall	goto 1

	.	error


state 87:

	sequence : LPAREN expP RPAREN .  (reduce by rule 25)



	.	reduce by rule 25


state 88:

	expP : exp SEMICOLON . expP 

	ID	shift 29
	INT	shift 28
	STRING	shift 27
	LPAREN	shift 26
	MINUS	shift 25
	IF	shift 24
	WHILE	shift 23
	FOR	shift 22
	LET	shift 21
	BREAK	shift 20
	NIL	shift 19

	exp	goto 58
	lvalue	goto 17
	unit	goto 16
	negation	goto 15
	comparison	goto 14
	arithmetic	goto 13
	boolcomp	goto 12
	expP	goto 104
	record	goto 11
	array	goto 10
	assignment	goto 9
	ifThenElse	goto 8
	ifThen	goto 7
	let	goto 6
	while	goto 5
	forloop	goto 4
	lval	goto 3
	sequence	goto 2
	funCall	goto 1

	.	error


state 89:

	lval : ID DOT ID .  (reduce by rule 66)



	.	reduce by rule 66


state 90:

	record : ID LBRACE ID . EQ exp recP RBRACE 

	EQ	shift 105


	.	error


state 91:

	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . LT exp 
	comparison : exp . LE exp 
	comparison : exp . GT exp 
	comparison : exp . GE exp 
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	boolcomp : exp . AND exp 
	boolcomp : exp . OR exp 
	array : ID LBRACK exp . RBRACK OF exp 
	lval : ID LBRACK exp . RBRACK 

	RBRACK	shift 106
	PLUS	shift 44
	MINUS	shift 43
	TIMES	shift 42
	DIVIDE	shift 41
	EQ	shift 40
	NEQ	shift 39
	LT	shift 38
	LE	shift 37
	GT	shift 36
	GE	shift 35
	AND	shift 34
	OR	shift 33


	.	error


state 92:

	funCall : ID LPAREN args . RPAREN 

	RPAREN	shift 107


	.	error


state 93:

	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . LT exp 
	comparison : exp . LE exp 
	comparison : exp . GT exp 
	comparison : exp . GE exp 
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	boolcomp : exp . AND exp 
	boolcomp : exp . OR exp 
	args : exp . COMMA args 
	args : exp .  (reduce by rule 27)

	COMMA	shift 108
	PLUS	shift 44
	MINUS	shift 43
	TIMES	shift 42
	DIVIDE	shift 41
	EQ	shift 40
	NEQ	shift 39
	LT	shift 38
	LE	shift 37
	GT	shift 36
	GE	shift 35
	AND	shift 34
	OR	shift 33


	.	reduce by rule 27


state 94:

	lval : lval LBRACK exp RBRACK .  (reduce by rule 69)



	.	reduce by rule 69


state 95:

	let : LET decs IN expseq . END 

	END	shift 109


	.	error


state 96:

	expseq : expP .  (reduce by rule 23)



	.	reduce by rule 23


state 97:

	tydec : TYPE ID EQ . ty 

	ID	shift 113
	LBRACE	shift 112
	ARRAY	shift 111

	ty	goto 110

	.	error


state 98:

	vardec : VAR ID ASSIGN . exp 

	ID	shift 29
	INT	shift 28
	STRING	shift 27
	LPAREN	shift 26
	MINUS	shift 25
	IF	shift 24
	WHILE	shift 23
	FOR	shift 22
	LET	shift 21
	BREAK	shift 20
	NIL	shift 19

	exp	goto 114
	lvalue	goto 17
	unit	goto 16
	negation	goto 15
	comparison	goto 14
	arithmetic	goto 13
	boolcomp	goto 12
	record	goto 11
	array	goto 10
	assignment	goto 9
	ifThenElse	goto 8
	ifThen	goto 7
	let	goto 6
	while	goto 5
	forloop	goto 4
	lval	goto 3
	sequence	goto 2
	funCall	goto 1

	.	error


state 99:

	vardec : VAR ID COLON . ID ASSIGN exp 

	ID	shift 115


	.	error


state 100:

	fundec : FUNCTION ID LPAREN . tyfields RPAREN EQ exp 
	fundec : FUNCTION ID LPAREN . tyfields RPAREN COLON ID EQ exp 

	ID	shift 117

	tyfields	goto 116

	.	reduce by rule 56


state 101:

	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . LT exp 
	comparison : exp . LE exp 
	comparison : exp . GT exp 
	comparison : exp . GE exp 
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	boolcomp : exp . AND exp 
	boolcomp : exp . OR exp 
	forloop : FOR ID ASSIGN exp . TO exp DO exp 

	PLUS	shift 44
	MINUS	shift 43
	TIMES	shift 42
	DIVIDE	shift 41
	EQ	shift 40
	NEQ	shift 39
	LT	shift 38
	LE	shift 37
	GT	shift 36
	GE	shift 35
	AND	shift 34
	OR	shift 33
	TO	shift 118


	.	error


state 102:

	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . LT exp 
	comparison : exp . LE exp 
	comparison : exp . GT exp 
	comparison : exp . GE exp 
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	boolcomp : exp . AND exp 
	boolcomp : exp . OR exp 
	while : WHILE exp DO exp .  (reduce by rule 74)

	PLUS	shift 44
	MINUS	shift 43
	TIMES	shift 42
	DIVIDE	shift 41
	EQ	shift 40
	NEQ	shift 39
	LT	shift 38
	LE	shift 37
	GT	shift 36
	GE	shift 35
	AND	shift 34
	OR	shift 33


	.	reduce by rule 74


state 103:

	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . LT exp 
	comparison : exp . LE exp 
	comparison : exp . GT exp 
	comparison : exp . GE exp 
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	boolcomp : exp . AND exp 
	boolcomp : exp . OR exp 
	ifThenElse : IF exp THEN exp . ELSE exp 
	ifThen : IF exp THEN exp .  (reduce by rule 73)

	PLUS	shift 44
	MINUS	shift 43
	TIMES	shift 42
	DIVIDE	shift 41
	EQ	shift 40
	NEQ	shift 39
	LT	shift 38
	LE	shift 37
	GT	shift 36
	GE	shift 35
	AND	shift 34
	OR	shift 33
	ELSE	shift 119


	.	reduce by rule 73


state 104:

	expP : exp SEMICOLON expP .  (reduce by rule 21)



	.	reduce by rule 21


state 105:

	record : ID LBRACE ID EQ . exp recP RBRACE 

	ID	shift 29
	INT	shift 28
	STRING	shift 27
	LPAREN	shift 26
	MINUS	shift 25
	IF	shift 24
	WHILE	shift 23
	FOR	shift 22
	LET	shift 21
	BREAK	shift 20
	NIL	shift 19

	exp	goto 120
	lvalue	goto 17
	unit	goto 16
	negation	goto 15
	comparison	goto 14
	arithmetic	goto 13
	boolcomp	goto 12
	record	goto 11
	array	goto 10
	assignment	goto 9
	ifThenElse	goto 8
	ifThen	goto 7
	let	goto 6
	while	goto 5
	forloop	goto 4
	lval	goto 3
	sequence	goto 2
	funCall	goto 1

	.	error


state 106:

	array : ID LBRACK exp RBRACK . OF exp 
	lval : ID LBRACK exp RBRACK .  (reduce by rule 68)

	OF	shift 121


	.	reduce by rule 68


state 107:

	funCall : ID LPAREN args RPAREN .  (reduce by rule 70)



	.	reduce by rule 70


state 108:

	args : exp COMMA . args 

	ID	shift 29
	INT	shift 28
	STRING	shift 27
	LPAREN	shift 26
	MINUS	shift 25
	IF	shift 24
	WHILE	shift 23
	FOR	shift 22
	LET	shift 21
	BREAK	shift 20
	NIL	shift 19

	exp	goto 93
	lvalue	goto 17
	unit	goto 16
	negation	goto 15
	comparison	goto 14
	arithmetic	goto 13
	boolcomp	goto 12
	record	goto 11
	array	goto 10
	assignment	goto 9
	ifThenElse	goto 8
	ifThen	goto 7
	let	goto 6
	args	goto 122
	while	goto 5
	forloop	goto 4
	lval	goto 3
	sequence	goto 2
	funCall	goto 1

	.	reduce by rule 28


state 109:

	let : LET decs IN expseq END .  (reduce by rule 76)



	.	reduce by rule 76


state 110:

	tydec : TYPE ID EQ ty .  (reduce by rule 52)



	.	reduce by rule 52


state 111:

	ty : ARRAY . OF ID 

	OF	shift 123


	.	error


state 112:

	ty : LBRACE . tyfields RBRACE 

	ID	shift 117

	tyfields	goto 124

	.	reduce by rule 56


state 113:

	ty : ID .  (reduce by rule 53)



	.	reduce by rule 53


state 114:

	vardec : VAR ID ASSIGN exp .  (reduce by rule 60)
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . LT exp 
	comparison : exp . LE exp 
	comparison : exp . GT exp 
	comparison : exp . GE exp 
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	boolcomp : exp . AND exp 
	boolcomp : exp . OR exp 

	PLUS	shift 44
	MINUS	shift 43
	TIMES	shift 42
	DIVIDE	shift 41
	EQ	shift 40
	NEQ	shift 39
	LT	shift 38
	LE	shift 37
	GT	shift 36
	GE	shift 35
	AND	shift 34
	OR	shift 33


	.	reduce by rule 60


state 115:

	vardec : VAR ID COLON ID . ASSIGN exp 

	ASSIGN	shift 125


	.	error


state 116:

	fundec : FUNCTION ID LPAREN tyfields . RPAREN EQ exp 
	fundec : FUNCTION ID LPAREN tyfields . RPAREN COLON ID EQ exp 

	RPAREN	shift 126


	.	error


state 117:

	tyfields : ID . COLON ID tyfieldsP 

	COLON	shift 127


	.	error


state 118:

	forloop : FOR ID ASSIGN exp TO . exp DO exp 

	ID	shift 29
	INT	shift 28
	STRING	shift 27
	LPAREN	shift 26
	MINUS	shift 25
	IF	shift 24
	WHILE	shift 23
	FOR	shift 22
	LET	shift 21
	BREAK	shift 20
	NIL	shift 19

	exp	goto 128
	lvalue	goto 17
	unit	goto 16
	negation	goto 15
	comparison	goto 14
	arithmetic	goto 13
	boolcomp	goto 12
	record	goto 11
	array	goto 10
	assignment	goto 9
	ifThenElse	goto 8
	ifThen	goto 7
	let	goto 6
	while	goto 5
	forloop	goto 4
	lval	goto 3
	sequence	goto 2
	funCall	goto 1

	.	error


state 119:

	ifThenElse : IF exp THEN exp ELSE . exp 

	ID	shift 29
	INT	shift 28
	STRING	shift 27
	LPAREN	shift 26
	MINUS	shift 25
	IF	shift 24
	WHILE	shift 23
	FOR	shift 22
	LET	shift 21
	BREAK	shift 20
	NIL	shift 19

	exp	goto 129
	lvalue	goto 17
	unit	goto 16
	negation	goto 15
	comparison	goto 14
	arithmetic	goto 13
	boolcomp	goto 12
	record	goto 11
	array	goto 10
	assignment	goto 9
	ifThenElse	goto 8
	ifThen	goto 7
	let	goto 6
	while	goto 5
	forloop	goto 4
	lval	goto 3
	sequence	goto 2
	funCall	goto 1

	.	error


state 120:

	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . LT exp 
	comparison : exp . LE exp 
	comparison : exp . GT exp 
	comparison : exp . GE exp 
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	boolcomp : exp . AND exp 
	boolcomp : exp . OR exp 
	record : ID LBRACE ID EQ exp . recP RBRACE 

	COMMA	shift 131
	PLUS	shift 44
	MINUS	shift 43
	TIMES	shift 42
	DIVIDE	shift 41
	EQ	shift 40
	NEQ	shift 39
	LT	shift 38
	LE	shift 37
	GT	shift 36
	GE	shift 35
	AND	shift 34
	OR	shift 33

	recP	goto 130

	.	reduce by rule 45


state 121:

	array : ID LBRACK exp RBRACK OF . exp 

	ID	shift 29
	INT	shift 28
	STRING	shift 27
	LPAREN	shift 26
	MINUS	shift 25
	IF	shift 24
	WHILE	shift 23
	FOR	shift 22
	LET	shift 21
	BREAK	shift 20
	NIL	shift 19

	exp	goto 132
	lvalue	goto 17
	unit	goto 16
	negation	goto 15
	comparison	goto 14
	arithmetic	goto 13
	boolcomp	goto 12
	record	goto 11
	array	goto 10
	assignment	goto 9
	ifThenElse	goto 8
	ifThen	goto 7
	let	goto 6
	while	goto 5
	forloop	goto 4
	lval	goto 3
	sequence	goto 2
	funCall	goto 1

	.	error


state 122:

	args : exp COMMA args .  (reduce by rule 26)



	.	reduce by rule 26


state 123:

	ty : ARRAY OF . ID 

	ID	shift 133


	.	error


state 124:

	ty : LBRACE tyfields . RBRACE 

	RBRACE	shift 134


	.	error


state 125:

	vardec : VAR ID COLON ID ASSIGN . exp 

	ID	shift 29
	INT	shift 28
	STRING	shift 27
	LPAREN	shift 26
	MINUS	shift 25
	IF	shift 24
	WHILE	shift 23
	FOR	shift 22
	LET	shift 21
	BREAK	shift 20
	NIL	shift 19

	exp	goto 135
	lvalue	goto 17
	unit	goto 16
	negation	goto 15
	comparison	goto 14
	arithmetic	goto 13
	boolcomp	goto 12
	record	goto 11
	array	goto 10
	assignment	goto 9
	ifThenElse	goto 8
	ifThen	goto 7
	let	goto 6
	while	goto 5
	forloop	goto 4
	lval	goto 3
	sequence	goto 2
	funCall	goto 1

	.	error


state 126:

	fundec : FUNCTION ID LPAREN tyfields RPAREN . EQ exp 
	fundec : FUNCTION ID LPAREN tyfields RPAREN . COLON ID EQ exp 

	COLON	shift 137
	EQ	shift 136


	.	error


state 127:

	tyfields : ID COLON . ID tyfieldsP 

	ID	shift 138


	.	error


state 128:

	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . LT exp 
	comparison : exp . LE exp 
	comparison : exp . GT exp 
	comparison : exp . GE exp 
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	boolcomp : exp . AND exp 
	boolcomp : exp . OR exp 
	forloop : FOR ID ASSIGN exp TO exp . DO exp 

	PLUS	shift 44
	MINUS	shift 43
	TIMES	shift 42
	DIVIDE	shift 41
	EQ	shift 40
	NEQ	shift 39
	LT	shift 38
	LE	shift 37
	GT	shift 36
	GE	shift 35
	AND	shift 34
	OR	shift 33
	DO	shift 139


	.	error


state 129:

	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . LT exp 
	comparison : exp . LE exp 
	comparison : exp . GT exp 
	comparison : exp . GE exp 
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	boolcomp : exp . AND exp 
	boolcomp : exp . OR exp 
	ifThenElse : IF exp THEN exp ELSE exp .  (reduce by rule 72)

	PLUS	shift 44
	MINUS	shift 43
	TIMES	shift 42
	DIVIDE	shift 41
	EQ	shift 40
	NEQ	shift 39
	LT	shift 38
	LE	shift 37
	GT	shift 36
	GE	shift 35
	AND	shift 34
	OR	shift 33


	.	reduce by rule 72


state 130:

	record : ID LBRACE ID EQ exp recP . RBRACE 

	RBRACE	shift 140


	.	error


state 131:

	recP : COMMA . ID EQ exp recP 

	ID	shift 141


	.	error


state 132:

	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . LT exp 
	comparison : exp . LE exp 
	comparison : exp . GT exp 
	comparison : exp . GE exp 
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	boolcomp : exp . AND exp 
	boolcomp : exp . OR exp 
	array : ID LBRACK exp RBRACK OF exp .  (reduce by rule 46)

	PLUS	shift 44
	MINUS	shift 43
	TIMES	shift 42
	DIVIDE	shift 41
	EQ	shift 40
	NEQ	shift 39
	LT	shift 38
	LE	shift 37
	GT	shift 36
	GE	shift 35
	AND	shift 34
	OR	shift 33


	.	reduce by rule 46


state 133:

	ty : ARRAY OF ID .  (reduce by rule 55)



	.	reduce by rule 55


state 134:

	ty : LBRACE tyfields RBRACE .  (reduce by rule 54)



	.	reduce by rule 54


state 135:

	vardec : VAR ID COLON ID ASSIGN exp .  (reduce by rule 61)
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . LT exp 
	comparison : exp . LE exp 
	comparison : exp . GT exp 
	comparison : exp . GE exp 
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	boolcomp : exp . AND exp 
	boolcomp : exp . OR exp 

	PLUS	shift 44
	MINUS	shift 43
	TIMES	shift 42
	DIVIDE	shift 41
	EQ	shift 40
	NEQ	shift 39
	LT	shift 38
	LE	shift 37
	GT	shift 36
	GE	shift 35
	AND	shift 34
	OR	shift 33


	.	reduce by rule 61


state 136:

	fundec : FUNCTION ID LPAREN tyfields RPAREN EQ . exp 

	ID	shift 29
	INT	shift 28
	STRING	shift 27
	LPAREN	shift 26
	MINUS	shift 25
	IF	shift 24
	WHILE	shift 23
	FOR	shift 22
	LET	shift 21
	BREAK	shift 20
	NIL	shift 19

	exp	goto 142
	lvalue	goto 17
	unit	goto 16
	negation	goto 15
	comparison	goto 14
	arithmetic	goto 13
	boolcomp	goto 12
	record	goto 11
	array	goto 10
	assignment	goto 9
	ifThenElse	goto 8
	ifThen	goto 7
	let	goto 6
	while	goto 5
	forloop	goto 4
	lval	goto 3
	sequence	goto 2
	funCall	goto 1

	.	error


state 137:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON . ID EQ exp 

	ID	shift 143


	.	error


state 138:

	tyfields : ID COLON ID . tyfieldsP 

	COMMA	shift 145

	tyfieldsP	goto 144

	.	reduce by rule 58


state 139:

	forloop : FOR ID ASSIGN exp TO exp DO . exp 

	ID	shift 29
	INT	shift 28
	STRING	shift 27
	LPAREN	shift 26
	MINUS	shift 25
	IF	shift 24
	WHILE	shift 23
	FOR	shift 22
	LET	shift 21
	BREAK	shift 20
	NIL	shift 19

	exp	goto 146
	lvalue	goto 17
	unit	goto 16
	negation	goto 15
	comparison	goto 14
	arithmetic	goto 13
	boolcomp	goto 12
	record	goto 11
	array	goto 10
	assignment	goto 9
	ifThenElse	goto 8
	ifThen	goto 7
	let	goto 6
	while	goto 5
	forloop	goto 4
	lval	goto 3
	sequence	goto 2
	funCall	goto 1

	.	error


state 140:

	record : ID LBRACE ID EQ exp recP RBRACE .  (reduce by rule 43)



	.	reduce by rule 43


state 141:

	recP : COMMA ID . EQ exp recP 

	EQ	shift 147


	.	error


state 142:

	fundec : FUNCTION ID LPAREN tyfields RPAREN EQ exp .  (reduce by rule 62)
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . LT exp 
	comparison : exp . LE exp 
	comparison : exp . GT exp 
	comparison : exp . GE exp 
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	boolcomp : exp . AND exp 
	boolcomp : exp . OR exp 

	PLUS	shift 44
	MINUS	shift 43
	TIMES	shift 42
	DIVIDE	shift 41
	EQ	shift 40
	NEQ	shift 39
	LT	shift 38
	LE	shift 37
	GT	shift 36
	GE	shift 35
	AND	shift 34
	OR	shift 33


	.	reduce by rule 62


state 143:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID . EQ exp 

	EQ	shift 148


	.	error


state 144:

	tyfields : ID COLON ID tyfieldsP .  (reduce by rule 57)



	.	reduce by rule 57


state 145:

	tyfieldsP : COMMA . ID COLON ID tyfieldsP 

	ID	shift 149


	.	error


state 146:

	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . LT exp 
	comparison : exp . LE exp 
	comparison : exp . GT exp 
	comparison : exp . GE exp 
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	boolcomp : exp . AND exp 
	boolcomp : exp . OR exp 
	forloop : FOR ID ASSIGN exp TO exp DO exp .  (reduce by rule 75)

	PLUS	shift 44
	MINUS	shift 43
	TIMES	shift 42
	DIVIDE	shift 41
	EQ	shift 40
	NEQ	shift 39
	LT	shift 38
	LE	shift 37
	GT	shift 36
	GE	shift 35
	AND	shift 34
	OR	shift 33


	.	reduce by rule 75


state 147:

	recP : COMMA ID EQ . exp recP 

	ID	shift 29
	INT	shift 28
	STRING	shift 27
	LPAREN	shift 26
	MINUS	shift 25
	IF	shift 24
	WHILE	shift 23
	FOR	shift 22
	LET	shift 21
	BREAK	shift 20
	NIL	shift 19

	exp	goto 150
	lvalue	goto 17
	unit	goto 16
	negation	goto 15
	comparison	goto 14
	arithmetic	goto 13
	boolcomp	goto 12
	record	goto 11
	array	goto 10
	assignment	goto 9
	ifThenElse	goto 8
	ifThen	goto 7
	let	goto 6
	while	goto 5
	forloop	goto 4
	lval	goto 3
	sequence	goto 2
	funCall	goto 1

	.	error


state 148:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ . exp 

	ID	shift 29
	INT	shift 28
	STRING	shift 27
	LPAREN	shift 26
	MINUS	shift 25
	IF	shift 24
	WHILE	shift 23
	FOR	shift 22
	LET	shift 21
	BREAK	shift 20
	NIL	shift 19

	exp	goto 151
	lvalue	goto 17
	unit	goto 16
	negation	goto 15
	comparison	goto 14
	arithmetic	goto 13
	boolcomp	goto 12
	record	goto 11
	array	goto 10
	assignment	goto 9
	ifThenElse	goto 8
	ifThen	goto 7
	let	goto 6
	while	goto 5
	forloop	goto 4
	lval	goto 3
	sequence	goto 2
	funCall	goto 1

	.	error


state 149:

	tyfieldsP : COMMA ID . COLON ID tyfieldsP 

	COLON	shift 152


	.	error


state 150:

	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . LT exp 
	comparison : exp . LE exp 
	comparison : exp . GT exp 
	comparison : exp . GE exp 
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	boolcomp : exp . AND exp 
	boolcomp : exp . OR exp 
	recP : COMMA ID EQ exp . recP 

	COMMA	shift 131
	PLUS	shift 44
	MINUS	shift 43
	TIMES	shift 42
	DIVIDE	shift 41
	EQ	shift 40
	NEQ	shift 39
	LT	shift 38
	LE	shift 37
	GT	shift 36
	GE	shift 35
	AND	shift 34
	OR	shift 33

	recP	goto 153

	.	reduce by rule 45


state 151:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp .  (reduce by rule 63)
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . LT exp 
	comparison : exp . LE exp 
	comparison : exp . GT exp 
	comparison : exp . GE exp 
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	boolcomp : exp . AND exp 
	boolcomp : exp . OR exp 

	PLUS	shift 44
	MINUS	shift 43
	TIMES	shift 42
	DIVIDE	shift 41
	EQ	shift 40
	NEQ	shift 39
	LT	shift 38
	LE	shift 37
	GT	shift 36
	GE	shift 35
	AND	shift 34
	OR	shift 33


	.	reduce by rule 63


state 152:

	tyfieldsP : COMMA ID COLON . ID tyfieldsP 

	ID	shift 154


	.	error


state 153:

	recP : COMMA ID EQ exp recP .  (reduce by rule 44)



	.	reduce by rule 44


state 154:

	tyfieldsP : COMMA ID COLON ID . tyfieldsP 

	COMMA	shift 145

	tyfieldsP	goto 155

	.	reduce by rule 58


state 155:

	tyfieldsP : COMMA ID COLON ID tyfieldsP .  (reduce by rule 59)



	.	reduce by rule 59


state 156:


	EOF	accept


	.	error

502 of 1037 action table entries left after compaction
690 goto table entries
